# /****************************************************************
# Copyright (C) 1999, 2000 Lucent Technologies
# All Rights Reserved
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby
# granted, provided that the above copyright notice appear in all
# copies and that both that the copyright notice and this
# permission notice and warranty disclaimer appear in supporting
# documentation, and that the name of Lucent or any of its entities
# not be used in advertising or publicity pertaining to
# distribution of the software without specific, written prior
# permission.
#
# LUCENT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
# IN NO EVENT SHALL LUCENT OR ANY OF ITS ENTITIES BE LIABLE FOR ANY
# SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
# IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
# ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
# THIS SOFTWARE.
# ****************************************************************/

# For making lpsolve.exe version 5 with Microsoft Visual C++ on Intel machines with static library.

# Invoke with "nmake -f makefile5stat.vc"

CC = cl
S = ..
# "S = .." assumes this directory is solvers/lpsolve .
L = ../../../..
#L = F:\lp_solve_5.5
# $L is from ftp://ftp.es.ele.tue.nl/pub/lp_solve/lp_solve.tar.gz,
# where the directory is called, e.g., lp_solve_3.2.
CFLAGS = -nologo -Ot1 /Zp8 -I$S -I$L -I$L/bfp -I$L/bfp/bfp_LUSOL -I$L/bfp/bfp_LUSOL/LUSOL -I$L/colamd -I$L/shared -DWIN32 -DYY_NEVER_INTERACTIVE -DPARSER_LP -DINVERSE_ACTIVE=INVERSE_LUSOL -DRoleIsExternalInvEngine

Lmt = libcmt.lib /link /NODEFAULTLIB:libc.lib

lpsolve = lpsolve.obj $S/funcadd0.obj commonlib.obj mmio.obj myblas.obj ini.obj lp_rlp.obj lp_crash.obj lp_LUSOL.obj lusol.obj lp_Hash.obj lp_lib.obj lp_wlp.obj lp_matrix.obj lp_mipbb.obj lp_MPS.obj lp_params.obj lp_presolve.obj lp_price.obj lp_pricePSE.obj lp_report.obj lp_scale.obj lp_simplex.obj lp_SOS.obj lp_utils.obj yacc_read.obj lp_MDO.obj colamd.obj $S/amplsolv.lib

lpsolve.exe: $(lpsolve)
	$(CC) -Felpsolve.exe $(lpsolve) $(Lmt)

lpsolve.obj: lpsolve.c $S/asl.h
	$(CC) -c $(CFLAGS) lpsolve.c

commonlib.obj mmio.obj myblas.obj ini.obj lp_rlp.obj lp_crash.obj lp_LUSOL.obj lusol.obj lp_Hash.obj lp_lib.obj lp_wlp.obj lp_matrix.obj lp_mipbb.obj lp_MPS.obj lp_params.obj lp_presolve.obj lp_price.obj lp_pricePSE.obj lp_report.obj lp_scale.obj lp_simplex.obj lp_SOS.obj lp_utils.obj yacc_read.obj lp_MDO.obj colamd.obj:
	$(CC) -c $(CFLAGS) $L/shared/commonlib.c $L/shared/mmio.c $L/shared/myblas.c $L/ini.c $L/lp_rlp.c $L/lp_crash.c $L/bfp/bfp_LUSOL/lp_LUSOL.c $L/bfp/bfp_LUSOL/LUSOL/lusol.c $L/lp_Hash.c $L/lp_lib.c $L/lp_wlp.c $L/lp_matrix.c $L/lp_mipbb.c $L/lp_MPS.c $L/lp_params.c $L/lp_presolve.c $L/lp_price.c $L/lp_pricePSE.c $L/lp_report.c $L/lp_scale.c $L/lp_simplex.c $L/lp_SOS.c $L/lp_utils.c $L/yacc_read.c $L/lp_MDO.c $L/colamd/colamd.c

$S/amplsolv.lib:
	cd $S; nmake amplsolv.lib

$S/funcadd0.obj:
	cd $S; nmake funcadd0.obj

# make xsum.out to check for transmission errors.
# This assumes you have the xsum program, whose source
# you can get by asking research!netlib to
#	send xsum.c from f2c/src

xs0 = README lpsolve.c makefile.u makefile.vc

xsum.out: $(xs0)
	xsum $(xs0) >xsum1.out
	cmp xsum0.out xsum1.out && mv xsum1.out xsum.out || diff xsum[01].out

clean:
	rm -f *.obj lpsolve.exe
