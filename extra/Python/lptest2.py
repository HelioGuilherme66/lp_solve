
import lpsolve55

print(lpsolve55.lpsolve('lp_solve_version'))

#lp = lpsolve55.lpsolve('make_lp', 3, 1)
#print(lp)
#print(lpsolve55.lpsolve('add_column', lp, (2,3.1,-2,3)))
#lpsolve55.lpsolve('add_constraint', lp, (6,7), 1, 15)

#lpsolve55.lpsolve('set_mat', lp, ((1, 2), (3, 4), (5, 6), (7, 8)))
#lpsolve55.lpsolve('set_mat', lp, 3, 2, 3.14)
#print(lpsolve55.lpsolve('get_mat', lp)[0])

#print(lpsolve55.lpsolve('set_obj', lp, (8, 9)))

#print(lpsolve55.lpsolve('set_outputfile', lp, 'a.out'))
#print(lpsolve55.lpsolve('print_solution', lp))

#print(lpsolve55.lpsolve('set_rh', lp, (11, 12, 13, 14, 15)))

#print(lpsolve55.lpsolve('set_row_name', lp, ('peter', 'doet', 'de', 'test')))

Inf = 1e30

lp = lpsolve55.lpsolve('make_lp', 0, 4);
lpsolve55.lpsolve('set_verbose', lp, 3);
lpsolve55.lpsolve('set_obj_fn', lp, [1, 3, 6.24, 0.1]);
lpsolve55.lpsolve('add_constraint', lp, [0, 78.26, 0, 2.9], 2, 92.3);
lpsolve55.lpsolve('add_constraint', lp, [0.24, 0, 11.31, 0], 1, 14.8);
lpsolve55.lpsolve('add_constraint', lp, [12.68, 0, 0.08, 0.9], 2, 4);
lpsolve55.lpsolve('set_lowbo', lp, [28.6, 0, 0, 18]);
lpsolve55.lpsolve('set_upbo', lp, [Inf, Inf, Inf, 48.98]);
lpsolve55.lpsolve('set_col_name', lp, ['COLONE', 'COLTWO', 'COLTHREE', 'COLFOUR']);
lpsolve55.lpsolve('set_row_name', lp, ['THISROW', 'THATROW', 'LASTROW']);
lpsolve55.lpsolve('write_lp', lp, 'a.lp');
[a, b] = lpsolve55.lpsolve('get_mat', lp)
print(a)
print(lpsolve55.lpsolve('solve', lp))
print(lpsolve55.lpsolve('get_objective', lp))
[a, b] = lpsolve55.lpsolve('get_variables', lp)
print(a)
[a, b] = lpsolve55.lpsolve('get_constraints', lp)
print(a)

#lpsolve55.lpsolve('write_lp', lp, 'con')
#print(lpsolve55.lpsolve('solve', lp))

#print(lpsolve55.lpsolve('get_solution', lp))

# print(lpsolve55.lpsolve('get_basis', lp, 1))
# print(lpsolve55.lpsolve('get_col_name', lp))
# a = lpsolve55.lpsolve('get_column', lp, 2)
# print(a[0])
# print(lpsolve55.lpsolve('get_constr_type', lp, 4))
# print(lpsolve55.lpsolve('get_constr_type', lp))
# print(lpsolve55.lpsolve('get_constr_value', lp, 4, (1, 1)))
# print(lpsolve55.lpsolve('get_constraints', lp)[0])
# print(lpsolve55.lpsolve('get_dual_solution', lp)[0])
# print(lpsolve55.lpsolve('get_epsb', lp))
# print(lpsolve55.lpsolve('get_epsd', lp))
# print(lpsolve55.lpsolve('get_epsel', lp))
# print(lpsolve55.lpsolve('get_epsint', lp))
# print(lpsolve55.lpsolve('get_epsperturb', lp))
# print(lpsolve55.lpsolve('get_epspivot', lp))
# print(lpsolve55.lpsolve('get_improve', lp))
# print(lpsolve55.lpsolve('get_infinite', lp))
# print(lpsolve55.lpsolve('get_lowbo', lp))
# print(lpsolve55.lpsolve('get_upbo', lp))
# print(lpsolve55.lpsolve('get_lp_index', lp, 1))
# print(lpsolve55.lpsolve('set_lp_name', lp, 'peter'))
# print(lpsolve55.lpsolve('get_lp_name', lp))
# print(lpsolve55.lpsolve('get_mat', lp, 1, 2))
# print(lpsolve55.lpsolve('get_mat', lp)[0])
# print(lpsolve55.lpsolve('get_max_level', lp))
# print(lpsolve55.lpsolve('get_maxpivot', lp))
# print(lpsolve55.lpsolve('get_mip_gap', lp, 1))
# print(lpsolve55.lpsolve('get_nameindex', lp, 'C2', 0))
# print(lpsolve55.lpsolve('get_Ncolumns', lp))
# print(lpsolve55.lpsolve('get_negrange', lp))
# print(lpsolve55.lpsolve('get_nonzeros', lp))
# print(lpsolve55.lpsolve('get_Norig_columns', lp))
# print(lpsolve55.lpsolve('get_Norig_rows', lp))
# print(lpsolve55.lpsolve('get_Nrows', lp))
# print(lpsolve55.lpsolve('get_obj_bound', lp))
# print(lpsolve55.lpsolve('get_obj_fn', lp)[0])
# print(lpsolve55.lpsolve('get_objective', lp))
# print(lpsolve55.lpsolve('get_objective_name', lp))
# print(lpsolve55.lpsolve('get_orig_index', lp, 1))
# print(lpsolve55.lpsolve('get_origcol_name', lp, 1))
# print(lpsolve55.lpsolve('get_origcol_name', lp))
# print(lpsolve55.lpsolve('get_origrow_name', lp, 1))
# print(lpsolve55.lpsolve('get_origrow_name', lp))
# print(lpsolve55.lpsolve('get_pivoting', lp))
# print(lpsolve55.lpsolve('get_presolve', lp))
# print(lpsolve55.lpsolve('get_presolveloops', lp))
# print(lpsolve55.lpsolve('get_primal_solution', lp)[0])
# print(lpsolve55.lpsolve('get_print_sol', lp))
# print(lpsolve55.lpsolve('get_rh', lp))
# print(lpsolve55.lpsolve('get_rh', lp, 4))
# print(lpsolve55.lpsolve('get_rh_range', lp))
# print(lpsolve55.lpsolve('get_rh_range', lp, 4))
# print(lpsolve55.lpsolve('get_row', lp, 4)[0])
# print(lpsolve55.lpsolve('get_row_name', lp))
# print(lpsolve55.lpsolve('get_row_name', lp, 4))
# print(lpsolve55.lpsolve('get_scalelimit', lp))
# print(lpsolve55.lpsolve('get_scaling', lp))
# print(lpsolve55.lpsolve('get_sensitivity_obj', lp))
# print(lpsolve55.lpsolve('get_sensitivity_rhs', lp))
# print(lpsolve55.lpsolve('get_simplextype', lp))
# print(lpsolve55.lpsolve('get_solution', lp))
# print(lpsolve55.lpsolve('get_solutioncount', lp))
# print(lpsolve55.lpsolve('get_solutionlimit', lp))
# print(lpsolve55.lpsolve('get_status', lp))
# print(lpsolve55.lpsolve('get_statustext', lp, 1))
# print(lpsolve55.lpsolve('get_timeout', lp))
# print(lpsolve55.lpsolve('get_total_iter', lp))
# print(lpsolve55.lpsolve('get_total_nodes', lp))
# print(lpsolve55.lpsolve('get_var_branch', lp))
# print(lpsolve55.lpsolve('get_var_branch', lp, 1))
# print(lpsolve55.lpsolve('get_var_dualresult', lp, 1))
# print(lpsolve55.lpsolve('get_var_primalresult', lp, 1))
# print(lpsolve55.lpsolve('get_var_priority', lp, 1))
# print(lpsolve55.lpsolve('get_var_priority', lp))
# print(lpsolve55.lpsolve('get_variables', lp)[0])
# print(lpsolve55.lpsolve('get_verbose', lp))
# print(lpsolve55.lpsolve('get_working_objective', lp))
# print(lpsolve55.lpsolve('has_BFP', lp))
# print(lpsolve55.lpsolve('has_XLI', lp))
# print(lpsolve55.lpsolve('is_add_rowmode', lp))
# print(lpsolve55.lpsolve('is_anti_degen', lp, 1))
# print(lpsolve55.lpsolve('is_binary', lp))
# print(lpsolve55.lpsolve('is_binary', lp, 1))
# print(lpsolve55.lpsolve('is_break_at_first', lp))
# print(lpsolve55.lpsolve('is_constr_type', lp, 1, 1))
# print(lpsolve55.lpsolve('is_debug', lp))
# print(lpsolve55.lpsolve('is_feasible', lp, (0,0,0,0,0,0)))
# print(lpsolve55.lpsolve('is_free', lp))
# print(lpsolve55.lpsolve('is_free', lp, 1))
# print(lpsolve55.lpsolve('is_infinite', lp, 1e29))
# print(lpsolve55.lpsolve('is_int', lp))
# print(lpsolve55.lpsolve('is_int', lp, 1))
# print(lpsolve55.lpsolve('is_integerscaling', lp))
# print(lpsolve55.lpsolve('is_maxim', lp))
# print(lpsolve55.lpsolve('is_nativeBFP', lp))
# print(lpsolve55.lpsolve('is_nativeXLI', lp))
# print(lpsolve55.lpsolve('is_negative', lp))
# print(lpsolve55.lpsolve('is_negative', lp, 1))
# print(lpsolve55.lpsolve('is_piv_mode', lp, 1))
# print(lpsolve55.lpsolve('is_semicont', lp))
# print(lpsolve55.lpsolve('is_SOS_var', lp))
# print(lpsolve55.lpsolve('is_trace', lp))
# print(lpsolve55.lpsolve('is_use_names', lp, 0))
# print(lpsolve55.lpsolve('is_use_names', lp, 1))
# print(lpsolve55.lpsolve('lp_solve_version'))
# print(lpsolve55.lpsolve('print_constraints', lp))
# print(lpsolve55.lpsolve('print_debugdump', lp, 'con'))
# print(lpsolve55.lpsolve('print_duals', lp))
# print(lpsolve55.lpsolve('print_lp', lp))
# print(lpsolve55.lpsolve('print_objective', lp))
# print(lpsolve55.lpsolve('print_scales', lp))
# print(lpsolve55.lpsolve('print_solution', lp))
# print(lpsolve55.lpsolve('print_str', lp, 'peter test'))
# print(lpsolve55.lpsolve('print_tableau', lp))
# print(lpsolve55.lpsolve('print_handle'))
# print(lpsolve55.lpsolve('write_basis', lp, 'a.bas'))
# print(lpsolve55.lpsolve('read_basis', lp, 'a.bas'))
# print(lpsolve55.lpsolve('write_freemps', lp, 'a.mps'))
# print(lpsolve55.lpsolve('read_freemps', 'a.mps'))
# print(lpsolve55.lpsolve('read_mps', 'a.mps'))
# print(lpsolve55.lpsolve('write_lp', lp, 'a.lp'))
# print(lpsolve55.lpsolve('read_lp', 'a.lp'))
# print(lpsolve55.lpsolve('write_params', lp, 'a.par', '-h peter'))
# print(lpsolve55.lpsolve('read_params', lp, 'a.par', '-h peter'))
# print(lpsolve55.lpsolve('read_XLI', '..\\..\\xli_MathProg', 'd:\\lp_solve\\MathProg\\diet.mod'))
# print(lpsolve55.lpsolve('reset_params', lp))
# print(lpsolve55.lpsolve('set_add_rowmode', lp, 0))
# a = lpsolve55.lpsolve('get_basis', lp, 1)
# print(lpsolve55.lpsolve('set_basis', lp, a, 1))
# print(lpsolve55.lpsolve('set_basiscrash', lp, 0))
# print(lpsolve55.lpsolve('set_basisvar', lp, 1, 2))
# print(lpsolve55.lpsolve('set_bb_depthlimit', lp, 10))
# print(lpsolve55.lpsolve('set_bb_floorfirst', lp, 1))
# print(lpsolve55.lpsolve('set_bb_rule', lp, 1))
# print(lpsolve55.lpsolve('set_BFP', lp, '..\\..\\bfp_etaPFI'))
# print(lpsolve55.lpsolve('set_binary', lp, (1, 1)))
# print(lpsolve55.lpsolve('get_int', lp))
# print(lpsolve55.lpsolve('set_bounds', lp, (2, 3), (4, 5)))
# print(lpsolve55.lpsolve('get_lowbo', lp), lpsolve55.lpsolve('get_upbo', lp))
# print(lpsolve55.lpsolve('set_bounds_tighter', lp, 1))
# print(lpsolve55.lpsolve('set_col_name', lp, ('peter', 'test')))
# print(lpsolve55.lpsolve('get_col_name', lp))
# print(lpsolve55.lpsolve('set_column', lp, 1, (1,2,3,4,5)))
# print(lpsolve55.lpsolve('set_constr_type', lp, (1,2,3,1)))
# print(lpsolve55.lpsolve('set_debug', lp, 0))
# print(lpsolve55.lpsolve('set_epsb', lp, 1e-5))
# print(lpsolve55.lpsolve('get_epsb', lp))
# print(lpsolve55.lpsolve('set_free', lp, 1))
# print(lpsolve55.lpsolve('set_improve', lp, 1))
# lpsolve55.lpsolve('write_lp', lp, 'con')

lpsolve55.lpsolve('delete_lp', lp)
