mode(-1);

p = pwd();

if MSDOS then
    win64_ = %F;
    execstr('win64_=win64()','errcatch');
    p = strsubst(p,'\','/');
    files = ['lpsolve.obj', 'scilab.obj', 'hash.obj'];
    bindir = 'win';
    if win64_ then
        bindir = bindir + '64';
    else
        bindir = bindir + '32';
    end
    libs = p + '/../../../lpsolve55/bin/' + bindir + '/lpsolve55';
    libsext = '.dll';
    defines = ' -DWIN32';
else
    files = ['lpsolve.o', 'scilab.o'];
    unix('uname -s > /tmp/machine');
    machine = read('/tmp/machine', 1, 1, '(a)');
    if convstr(machine, 'l') == 'darwin' then
        bindir = 'osx';
    else
        bindir = 'ux';
    end
    mputl([
    '#include <stdlib.h>'
    '#include <stdio.h>'
    'main(){printf(""' + bindir + '%d"", (int) (sizeof(void *)*8));}'
    ],'/tmp/platform.c');
    unix('cc /tmp/platform.c -o /tmp/platform; /tmp/platform > /tmp/machine');
    bindir = read('/tmp/machine', 1, 1, '(a)');
    libs = 'liblpsolve55';
    libsext = '.so';
    defines = '';
end

chdir src;

if execstr('mdelete','errcatch') == 77 then
    disp 'deleting old files';
    mdelete('*.o');
    mdelete('*.obj');
    mdelete('sclpsolve.c');
    mdelete('libsclpsolve.c');
end

mputl([
'/* Generated by builder.sce - Do Not Edit */'
'#include ""lpsolvecaller.h""'
''
'extern callerPrototype(drivername);'
''
'void mexFunction(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[])'
'{'
'        sclpsolve(nlhs, plhs, nrhs, prhs);'
'}'
],'mexscilab.c');

// Delete old libraries
if execstr('mdelete','errcatch') == 77 then
    if (fileinfo('sclpsolve' + libsext) <> []) then mdelete('sclpsolve' + libsext),end;
    if (fileinfo('libsclpsolve' + libsext) <> []) then mdelete('libsclpsolve' + libsext),end;
end

ilib_mex_build('sclpsolve',['sclpsolve', 'mexscilab', 'cmex'], files, [libs],'Makelib','','-DSCILAB' + defines + ' -I' + p + '/../../.. -I' + p + '/src','')

if execstr('mdelete','errcatch') == 77 then
    // Delete generated loader.sce file by ilib_mex_build in src directory
    // It is not complete and loader.sce in upper directory must be used
    if (fileinfo('loader.sce') <> []) then mdelete('loader.sce'),end;
end

chdir(p);

sclpsolvelib = 'sclpsolve';

if ~MSDOS then
    if fileinfo('src/' + sclpsolvelib + libsext) == [] then
        sclpsolvelib = 'libsclpsolve';
    end
end

execstr('mkdir(''bin'');','errcatch');
execstr('mkdir(''bin/' + bindir + ''');','errcatch');

execstr('copyfile(''src/' + sclpsolvelib + libsext + ''', ''bin/' + bindir + ''')','errcatch'); //  + '/' + sclpsolvelib + libsext
//execstr('deletefile(''src/' + sclpsolvelib + libsext + ''')','errcatch');
execstr('mdelete(''src/' + sclpsolvelib + libsext + ''')','errcatch');

mputl([
'// Generated by builder.sce - Do Not Edit'
'mode(-1);'
'p = pwd();'
'if MSDOS then'
'    win64_ = %F;'
'    execstr(''win64_=win64()'',''errcatch'');'
'    p = strsubst(p,''\'',''/'');'
'    bindir = ''win'';'
'    if win64_ then'
'        bindir = bindir + ''64'';'
'    else'
'        bindir = bindir + ''32'';'
'    end'
'    libs = p + ''/../../../lpsolve55/bin/'' + bindir + ''/lpsolve55''';
'    libsext = ''.dll'';'
'else'
'    bindir = ''' + bindir + ''';'
'    libs = ''liblpsolve55'';'
'    libsext = ''.so''';
'end'
'link(libs + libsext);'
'sclpsolvelib = ''sclpsolve'';'
'if ~MSDOS then'
'    if fileinfo(p + ''/bin/'' + bindir + ''/'' + sclpsolvelib + libsext) == [] then'
'        sclpsolvelib = ''libsclpsolve'';'
'    end'
'end'
'addinter(p + ''/bin/'' + bindir + ''/'' + sclpsolvelib + libsext,sclpsolvelib,[''sclpsolve'';]);'
'genlib(''lpmexlib'',p + ''/macros'');'
'prot=funcprot();'
'funcprot(0);'
'formatman(p + ''/man'');'
'funcprot(prot);'
'clear p prot win64_ sclpsolvelib bindir;'
],'loader.sce');

clear win64_ bindir p files libs libsext sclpsolvelib defines;
