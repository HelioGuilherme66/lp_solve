lp_solve          Scilab Group          Scilab Function            lp_solve
   
  
NAME
   lp_solve - Solves mixed integer linear programming problems (max)
  
CALLING SEQUENCE
  [obj,x,duals] = lp_solve(f,a,b,e)
  [obj,x,duals] = lp_solve(f,a,b,e,vlb)
  [obj,x,duals] = lp_solve(f,a,b,e,vlb,vub)
  [obj,x,duals] = lp_solve(f,a,b,e,vlb,vub,xint)
  [obj,x,duals] = lp_solve(f,a,b,e,vlb,vub,xint,scalemode)
  [obj,x,duals] = lp_solve(f,a,b,e,vlb,vub,xint,scalemode,keep)
   
  
PARAMETERS
 f          : full column vector (objective), size n
            
 a          : sparse or full real matrix, m x n (constraints)
            
 b          : full column vector (RHS), size m
            
 e          : full column vector of row status (integer -1, 0, 1), size m
            
 vlb        : full column vector of lower bounds, size n
            
 vub        : full column vector of upper bounds, size n
            
 xint       : vector of integer variables. May be omitted or empty.
            
 scalemode  : integer, scale flag. Off when 0 or omitted.
            
 keep       : Flag for keeping the lp problem after it's been solved.  If
            omitted, the lp will be deleted when solved.
            
 obj        : value of objective function
            
 x          : column vector solution
            
 duals      : column vector solution of the dual problem
            
DESCRIPTION
 solves the MILP problem
           max v = f'*x
           s.t. a*x ~ b
                  x between vlb and vub
                  x(int) are integer
 
EXAMPLE
 
 f = [  2.00     3.00    -2.00     3.00 ];
 a = sparse( [ 3.00     2.00     2.00     1.00;
               0.00     4.00     3.00     1.00]);
 b = [ 4; 3];
 e = [-1;1];
 
 [obj,x,duals] = lp_solve(f,a,b,e);
 
SEE ALSO
 sclpsolve, lp_maker
