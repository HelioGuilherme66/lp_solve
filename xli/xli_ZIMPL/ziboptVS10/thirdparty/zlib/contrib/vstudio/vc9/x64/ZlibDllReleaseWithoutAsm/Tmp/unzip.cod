; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	unz_copyright
EXTRN	strcmp:PROC
	ORG $+1
unz_copyright DB ' unzip 1.01 Copyright 1998-2004 Gilles Vollant - http:/'
	DB	'/www.winimage.com/zLibDll', 00H
PUBLIC	unzeof
;	COMDAT pdata
; File d:\lp_solve_5.5\xli\xli_zimpl\ziboptvs10\thirdparty\zlib\contrib\minizip\unzip.c
pdata	SEGMENT
$pdata$unzeof DD imagerel $LN7
	DD	imagerel $LN7+95
	DD	imagerel $unwind$unzeof
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzeof DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzeof
_TEXT	SEGMENT
s$ = 0
pfile_in_zip_read_info$ = 8
file$ = 32
unzeof	PROC						; COMDAT

; 1925 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 1926 :     unz64_s* s;
; 1927 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1928 :     if (file==NULL)

  00009	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  0000f	75 07		 jne	 SHORT $LN4@unzeof

; 1929 :         return UNZ_PARAMERROR;

  00011	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00016	eb 42		 jmp	 SHORT $LN5@unzeof
$LN4@unzeof:

; 1930 :     s=(unz64_s*)file;

  00018	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  0001d	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 1931 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  00021	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  00025	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  0002c	48 89 44 24 08	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1932 : 
; 1933 :     if (pfile_in_zip_read_info==NULL)

  00031	48 83 7c 24 08
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00037	75 07		 jne	 SHORT $LN3@unzeof

; 1934 :         return UNZ_PARAMERROR;

  00039	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0003e	eb 1a		 jmp	 SHORT $LN5@unzeof
$LN3@unzeof:

; 1935 : 
; 1936 :     if (pfile_in_zip_read_info->rest_read_uncompressed == 0)

  00040	48 8b 44 24 08	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00045	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0004d	75 09		 jne	 SHORT $LN2@unzeof

; 1937 :         return 1;

  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	eb 04		 jmp	 SHORT $LN5@unzeof

; 1938 :     else

  00056	eb 02		 jmp	 SHORT $LN1@unzeof
$LN2@unzeof:

; 1939 :         return 0;

  00058	33 c0		 xor	 eax, eax
$LN1@unzeof:
$LN5@unzeof:

; 1940 : }

  0005a	48 83 c4 18	 add	 rsp, 24
  0005e	c3		 ret	 0
unzeof	ENDP
_TEXT	ENDS
PUBLIC	unztell64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unztell64 DD imagerel $LN5
	DD	imagerel $LN5+85
	DD	imagerel $unwind$unztell64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unztell64 DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unztell64
_TEXT	SEGMENT
s$ = 0
pfile_in_zip_read_info$ = 8
file$ = 32
unztell64 PROC						; COMDAT

; 1905 : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 1906 : 
; 1907 :     unz64_s* s;
; 1908 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1909 :     if (file==NULL)

  00009	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  0000f	75 09		 jne	 SHORT $LN2@unztell64

; 1910 :         return (ZPOS64_T)-1;

  00011	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00018	eb 36		 jmp	 SHORT $LN3@unztell64
$LN2@unztell64:

; 1911 :     s=(unz64_s*)file;

  0001a	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  0001f	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 1912 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  00023	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  00027	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  0002e	48 89 44 24 08	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1913 : 
; 1914 :     if (pfile_in_zip_read_info==NULL)

  00033	48 83 7c 24 08
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00039	75 09		 jne	 SHORT $LN1@unztell64

; 1915 :         return (ZPOS64_T)-1;

  0003b	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00042	eb 0c		 jmp	 SHORT $LN3@unztell64
$LN1@unztell64:

; 1916 : 
; 1917 :     return pfile_in_zip_read_info->total_out_64;

  00044	48 8b 44 24 08	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00049	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
$LN3@unztell64:

; 1918 : }

  00050	48 83 c4 18	 add	 rsp, 24
  00054	c3		 ret	 0
unztell64 ENDP
_TEXT	ENDS
PUBLIC	unztell
;	COMDAT pdata
pdata	SEGMENT
$pdata$unztell DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$unztell
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unztell DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unztell
_TEXT	SEGMENT
s$ = 0
pfile_in_zip_read_info$ = 8
file$ = 32
unztell	PROC						; COMDAT

; 1890 : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 1891 :     unz64_s* s;
; 1892 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1893 :     if (file==NULL)

  00009	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  0000f	75 07		 jne	 SHORT $LN2@unztell

; 1894 :         return UNZ_PARAMERROR;

  00011	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00016	eb 30		 jmp	 SHORT $LN3@unztell
$LN2@unztell:

; 1895 :     s=(unz64_s*)file;

  00018	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  0001d	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 1896 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  00021	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  00025	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  0002c	48 89 44 24 08	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1897 : 
; 1898 :     if (pfile_in_zip_read_info==NULL)

  00031	48 83 7c 24 08
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00037	75 07		 jne	 SHORT $LN1@unztell

; 1899 :         return UNZ_PARAMERROR;

  00039	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0003e	eb 08		 jmp	 SHORT $LN3@unztell
$LN1@unztell:

; 1900 : 
; 1901 :     return (z_off_t)pfile_in_zip_read_info->stream.total_out;

  00040	48 8b 44 24 08	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00045	8b 40 24	 mov	 eax, DWORD PTR [rax+36]
$LN3@unztell:

; 1902 : }

  00048	48 83 c4 18	 add	 rsp, 24
  0004c	c3		 ret	 0
unztell	ENDP
_TEXT	ENDS
PUBLIC	unzGetCurrentFileZStreamPos64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetCurrentFileZStreamPos64 DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$unzGetCurrentFileZStreamPos64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetCurrentFileZStreamPos64 DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetCurrentFileZStreamPos64
_TEXT	SEGMENT
s$ = 0
pfile_in_zip_read_info$ = 8
file$ = 32
unzGetCurrentFileZStreamPos64 PROC			; COMDAT

; 1659 : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 1660 :     unz64_s* s;
; 1661 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1662 :     s=(unz64_s*)file;

  00009	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  0000e	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 1663 :     if (file==NULL)

  00012	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  00018	75 04		 jne	 SHORT $LN2@unzGetCurr

; 1664 :         return 0; //UNZ_PARAMERROR;

  0001a	33 c0		 xor	 eax, eax
  0001c	eb 31		 jmp	 SHORT $LN3@unzGetCurr
$LN2@unzGetCurr:

; 1665 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  0001e	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  00022	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  00029	48 89 44 24 08	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1666 :     if (pfile_in_zip_read_info==NULL)

  0002e	48 83 7c 24 08
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00034	75 04		 jne	 SHORT $LN1@unzGetCurr

; 1667 :         return 0; //UNZ_PARAMERROR;

  00036	33 c0		 xor	 eax, eax
  00038	eb 15		 jmp	 SHORT $LN3@unzGetCurr
$LN1@unzGetCurr:

; 1668 :     return pfile_in_zip_read_info->pos_in_zipfile +
; 1669 :                          pfile_in_zip_read_info->byte_before_the_zipfile;

  0003a	48 8b 44 24 08	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0003f	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00043	48 8b 4c 24 08	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00048	48 03 81 10 01
	00 00		 add	 rax, QWORD PTR [rcx+272]
$LN3@unzGetCurr:

; 1670 : }

  0004f	48 83 c4 18	 add	 rsp, 24
  00053	c3		 ret	 0
unzGetCurrentFileZStreamPos64 ENDP
_TEXT	ENDS
PUBLIC	unzGetFilePos64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetFilePos64 DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$unzGetFilePos64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetFilePos64 DD 010e01H
	DD	0220eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetFilePos64
_TEXT	SEGMENT
s$ = 0
file$ = 32
file_pos$ = 40
unzGetFilePos64 PROC					; COMDAT

; 1309 : {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 1310 :     unz64_s* s;
; 1311 : 
; 1312 :     if (file==NULL || file_pos==NULL)

  0000e	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  00014	74 08		 je	 SHORT $LN2@unzGetFile
  00016	48 83 7c 24 28
	00		 cmp	 QWORD PTR file_pos$[rsp], 0
  0001c	75 07		 jne	 SHORT $LN3@unzGetFile
$LN2@unzGetFile:

; 1313 :         return UNZ_PARAMERROR;

  0001e	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00023	eb 47		 jmp	 SHORT $LN4@unzGetFile
$LN3@unzGetFile:

; 1314 :     s=(unz64_s*)file;

  00025	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  0002a	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 1315 :     if (!s->current_file_ok)

  0002e	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  00032	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0003a	75 07		 jne	 SHORT $LN1@unzGetFile

; 1316 :         return UNZ_END_OF_LIST_OF_FILE;

  0003c	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  00041	eb 29		 jmp	 SHORT $LN4@unzGetFile
$LN1@unzGetFile:

; 1317 : 
; 1318 :     file_pos->pos_in_zip_directory  = s->pos_in_central_dir;

  00043	48 8b 4c 24 28	 mov	 rcx, QWORD PTR file_pos$[rsp]
  00048	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  0004c	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00053	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1319 :     file_pos->num_of_file           = s->num_file;

  00056	48 8b 4c 24 28	 mov	 rcx, QWORD PTR file_pos$[rsp]
  0005b	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  0005f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00066	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1320 : 
; 1321 :     return UNZ_OK;

  0006a	33 c0		 xor	 eax, eax
$LN4@unzGetFile:

; 1322 : }

  0006c	48 83 c4 18	 add	 rsp, 24
  00070	c3		 ret	 0
unzGetFilePos64 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_DosDateToTmuDate DD imagerel unz64local_DosDateToTmuDate
	DD	imagerel unz64local_DosDateToTmuDate+204
	DD	imagerel $unwind$unz64local_DosDateToTmuDate
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_DosDateToTmuDate DD 010e01H
	DD	0220eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_DosDateToTmuDate
_TEXT	SEGMENT
uDate$ = 0
ulDosDate$ = 32
ptm$ = 40
unz64local_DosDateToTmuDate PROC			; COMDAT

; 853  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 854  :     ZPOS64_T uDate;
; 855  :     uDate = (ZPOS64_T)(ulDosDate>>16);

  0000e	48 8b 44 24 20	 mov	 rax, QWORD PTR ulDosDate$[rsp]
  00013	48 c1 e8 10	 shr	 rax, 16
  00017	48 89 04 24	 mov	 QWORD PTR uDate$[rsp], rax

; 856  :     ptm->tm_mday = (uInt)(uDate&0x1f) ;

  0001b	48 8b 0c 24	 mov	 rcx, QWORD PTR uDate$[rsp]
  0001f	48 83 e1 1f	 and	 rcx, 31
  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  00028	89 48 0c	 mov	 DWORD PTR [rax+12], ecx

; 857  :     ptm->tm_mon =  (uInt)((((uDate)&0x1E0)/0x20)-1) ;

  0002b	48 8b 04 24	 mov	 rax, QWORD PTR uDate$[rsp]
  0002f	48 25 e0 01 00
	00		 and	 rax, 480		; 000001e0H
  00035	33 d2		 xor	 edx, edx
  00037	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0003c	48 f7 f1	 div	 rcx
  0003f	48 8b c8	 mov	 rcx, rax
  00042	48 83 e9 01	 sub	 rcx, 1
  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  0004b	89 48 10	 mov	 DWORD PTR [rax+16], ecx

; 858  :     ptm->tm_year = (uInt)(((uDate&0x0FE00)/0x0200)+1980) ;

  0004e	48 8b 04 24	 mov	 rax, QWORD PTR uDate$[rsp]
  00052	48 25 00 fe 00
	00		 and	 rax, 65024		; 0000fe00H
  00058	33 d2		 xor	 edx, edx
  0005a	b9 00 02 00 00	 mov	 ecx, 512		; 00000200H
  0005f	48 f7 f1	 div	 rcx
  00062	48 8b c8	 mov	 rcx, rax
  00065	48 81 c1 bc 07
	00 00		 add	 rcx, 1980		; 000007bcH
  0006c	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  00071	89 48 14	 mov	 DWORD PTR [rax+20], ecx

; 859  : 
; 860  :     ptm->tm_hour = (uInt) ((ulDosDate &0xF800)/0x800);

  00074	48 8b 44 24 20	 mov	 rax, QWORD PTR ulDosDate$[rsp]
  00079	48 25 00 f8 00
	00		 and	 rax, 63488		; 0000f800H
  0007f	33 d2		 xor	 edx, edx
  00081	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00086	48 f7 f1	 div	 rcx
  00089	48 8b c8	 mov	 rcx, rax
  0008c	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  00091	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 861  :     ptm->tm_min =  (uInt) ((ulDosDate&0x7E0)/0x20) ;

  00094	48 8b 44 24 20	 mov	 rax, QWORD PTR ulDosDate$[rsp]
  00099	48 25 e0 07 00
	00		 and	 rax, 2016		; 000007e0H
  0009f	33 d2		 xor	 edx, edx
  000a1	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000a6	48 f7 f1	 div	 rcx
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  000b1	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 862  :     ptm->tm_sec =  (uInt) (2*(ulDosDate&0x1f)) ;

  000b4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ulDosDate$[rsp]
  000b9	48 83 e1 1f	 and	 rcx, 31
  000bd	48 d1 e1	 shl	 rcx, 1
  000c0	48 8b 44 24 28	 mov	 rax, QWORD PTR ptm$[rsp]
  000c5	89 08		 mov	 DWORD PTR [rax], ecx

; 863  : }

  000c7	48 83 c4 18	 add	 rsp, 24
  000cb	c3		 ret	 0
unz64local_DosDateToTmuDate ENDP
_TEXT	ENDS
PUBLIC	unzGetGlobalInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetGlobalInfo DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$unzGetGlobalInfo
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetGlobalInfo DD 010e01H
	DD	0220eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetGlobalInfo
_TEXT	SEGMENT
s$ = 0
file$ = 32
pglobal_info32$ = 40
unzGetGlobalInfo PROC					; COMDAT

; 839  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24

; 840  :     unz64_s* s;
; 841  :     if (file==NULL)

  0000e	48 83 7c 24 20
	00		 cmp	 QWORD PTR file$[rsp], 0
  00014	75 07		 jne	 SHORT $LN1@unzGetGlob

; 842  :         return UNZ_PARAMERROR;

  00016	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0001b	eb 28		 jmp	 SHORT $LN2@unzGetGlob
$LN1@unzGetGlob:

; 843  :     s=(unz64_s*)file;

  0001d	48 8b 44 24 20	 mov	 rax, QWORD PTR file$[rsp]
  00022	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 844  :     /* to do : check if number_entry is not truncated */
; 845  :     pglobal_info32->number_entry = (uLong)s->gi.number_entry;

  00026	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pglobal_info32$[rsp]
  0002b	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  0002f	8b 40 68	 mov	 eax, DWORD PTR [rax+104]
  00032	89 01		 mov	 DWORD PTR [rcx], eax

; 846  :     pglobal_info32->size_comment = s->gi.size_comment;

  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pglobal_info32$[rsp]
  00039	48 8b 04 24	 mov	 rax, QWORD PTR s$[rsp]
  0003d	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00040	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 847  :     return UNZ_OK;

  00043	33 c0		 xor	 eax, eax
$LN2@unzGetGlob:

; 848  : }

  00045	48 83 c4 18	 add	 rsp, 24
  00049	c3		 ret	 0
unzGetGlobalInfo ENDP
_TEXT	ENDS
PUBLIC	$T83124
PUBLIC	unzGetGlobalInfo64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetGlobalInfo64 DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$unzGetGlobalInfo64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetGlobalInfo64 DD 031001H
	DD	0700c4210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetGlobalInfo64
_TEXT	SEGMENT
s$ = 0
$T83124 = 8
file$ = 64
pglobal_info$ = 72
unzGetGlobalInfo64 PROC					; COMDAT

; 829  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 830  :     unz64_s* s;
; 831  :     if (file==NULL)

  00010	48 83 7c 24 40
	00		 cmp	 QWORD PTR file$[rsp], 0
  00016	75 07		 jne	 SHORT $LN1@unzGetGlob@2

; 832  :         return UNZ_PARAMERROR;

  00018	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0001d	eb 30		 jmp	 SHORT $LN2@unzGetGlob@2
$LN1@unzGetGlob@2:

; 833  :     s=(unz64_s*)file;

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR file$[rsp]
  00024	48 89 04 24	 mov	 QWORD PTR s$[rsp], rax

; 834  :     *pglobal_info=s->gi;

  00028	48 8d 7c 24 08	 lea	 rdi, QWORD PTR $T83124[rsp]
  0002d	48 8b 34 24	 mov	 rsi, QWORD PTR s$[rsp]
  00031	48 83 c6 68	 add	 rsi, 104		; 00000068H
  00035	b9 10 00 00 00	 mov	 ecx, 16
  0003a	f3 a4		 rep movsb
  0003c	48 8d 74 24 08	 lea	 rsi, QWORD PTR $T83124[rsp]
  00041	48 8b 7c 24 48	 mov	 rdi, QWORD PTR pglobal_info$[rsp]
  00046	b9 10 00 00 00	 mov	 ecx, 16
  0004b	f3 a4		 rep movsb

; 835  :     return UNZ_OK;

  0004d	33 c0		 xor	 eax, eax
$LN2@unzGetGlob@2:

; 836  : }

  0004f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00053	5f		 pop	 rdi
  00054	5e		 pop	 rsi
  00055	c3		 ret	 0
unzGetGlobalInfo64 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$strcmpcasenosensitive_internal DD imagerel strcmpcasenosensitive_internal
	DD	imagerel strcmpcasenosensitive_internal+232
	DD	imagerel $unwind$strcmpcasenosensitive_internal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$strcmpcasenosensitive_internal DD 010e01H
	DD	0220eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT strcmpcasenosensitive_internal
_TEXT	SEGMENT
c1$80105 = 0
c2$80106 = 1
tv84 = 4
fileName1$ = 32
fileName2$ = 40
strcmpcasenosensitive_internal PROC			; COMDAT

; 350  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 18	 sub	 rsp, 24
$LN8@strcmpcase:

; 351  :     for (;;)
; 352  :     {
; 353  :         char c1=*(fileName1++);

  0000e	48 8b 44 24 20	 mov	 rax, QWORD PTR fileName1$[rsp]
  00013	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00016	88 04 24	 mov	 BYTE PTR c1$80105[rsp], al
  00019	48 8b 44 24 20	 mov	 rax, QWORD PTR fileName1$[rsp]
  0001e	48 83 c0 01	 add	 rax, 1
  00022	48 89 44 24 20	 mov	 QWORD PTR fileName1$[rsp], rax

; 354  :         char c2=*(fileName2++);

  00027	48 8b 44 24 28	 mov	 rax, QWORD PTR fileName2$[rsp]
  0002c	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0002f	88 44 24 01	 mov	 BYTE PTR c2$80106[rsp], al
  00033	48 8b 44 24 28	 mov	 rax, QWORD PTR fileName2$[rsp]
  00038	48 83 c0 01	 add	 rax, 1
  0003c	48 89 44 24 28	 mov	 QWORD PTR fileName2$[rsp], rax

; 355  :         if ((c1>='a') && (c1<='z'))

  00041	0f be 04 24	 movsx	 eax, BYTE PTR c1$80105[rsp]
  00045	83 f8 61	 cmp	 eax, 97			; 00000061H
  00048	7c 13		 jl	 SHORT $LN6@strcmpcase
  0004a	0f be 04 24	 movsx	 eax, BYTE PTR c1$80105[rsp]
  0004e	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  00051	7f 0a		 jg	 SHORT $LN6@strcmpcase

; 356  :             c1 -= 0x20;

  00053	0f be 04 24	 movsx	 eax, BYTE PTR c1$80105[rsp]
  00057	83 e8 20	 sub	 eax, 32			; 00000020H
  0005a	88 04 24	 mov	 BYTE PTR c1$80105[rsp], al
$LN6@strcmpcase:

; 357  :         if ((c2>='a') && (c2<='z'))

  0005d	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  00062	83 f8 61	 cmp	 eax, 97			; 00000061H
  00065	7c 16		 jl	 SHORT $LN5@strcmpcase
  00067	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  0006c	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  0006f	7f 0c		 jg	 SHORT $LN5@strcmpcase

; 358  :             c2 -= 0x20;

  00071	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  00076	83 e8 20	 sub	 eax, 32			; 00000020H
  00079	88 44 24 01	 mov	 BYTE PTR c2$80106[rsp], al
$LN5@strcmpcase:

; 359  :         if (c1=='\0')

  0007d	0f be 04 24	 movsx	 eax, BYTE PTR c1$80105[rsp]
  00081	85 c0		 test	 eax, eax
  00083	75 21		 jne	 SHORT $LN4@strcmpcase

; 360  :             return ((c2=='\0') ? 0 : -1);

  00085	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  0008a	85 c0		 test	 eax, eax
  0008c	75 0a		 jne	 SHORT $LN11@strcmpcase
  0008e	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR tv84[rsp], 0
  00096	eb 08		 jmp	 SHORT $LN12@strcmpcase
$LN11@strcmpcase:
  00098	c7 44 24 04 ff
	ff ff ff	 mov	 DWORD PTR tv84[rsp], -1
$LN12@strcmpcase:
  000a0	8b 44 24 04	 mov	 eax, DWORD PTR tv84[rsp]
  000a4	eb 3d		 jmp	 SHORT $LN9@strcmpcase
$LN4@strcmpcase:

; 361  :         if (c2=='\0')

  000a6	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  000ab	85 c0		 test	 eax, eax
  000ad	75 07		 jne	 SHORT $LN3@strcmpcase

; 362  :             return 1;

  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	eb 2d		 jmp	 SHORT $LN9@strcmpcase
$LN3@strcmpcase:

; 363  :         if (c1<c2)

  000b6	0f be 0c 24	 movsx	 ecx, BYTE PTR c1$80105[rsp]
  000ba	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  000bf	3b c8		 cmp	 ecx, eax
  000c1	7d 07		 jge	 SHORT $LN2@strcmpcase

; 364  :             return -1;

  000c3	b8 ff ff ff ff	 mov	 eax, -1
  000c8	eb 19		 jmp	 SHORT $LN9@strcmpcase
$LN2@strcmpcase:

; 365  :         if (c1>c2)

  000ca	0f be 0c 24	 movsx	 ecx, BYTE PTR c1$80105[rsp]
  000ce	0f be 44 24 01	 movsx	 eax, BYTE PTR c2$80106[rsp]
  000d3	3b c8		 cmp	 ecx, eax
  000d5	7e 07		 jle	 SHORT $LN1@strcmpcase

; 366  :             return 1;

  000d7	b8 01 00 00 00	 mov	 eax, 1
  000dc	eb 05		 jmp	 SHORT $LN9@strcmpcase
$LN1@strcmpcase:

; 367  :     }

  000de	e9 2b ff ff ff	 jmp	 $LN8@strcmpcase
$LN9@strcmpcase:

; 368  : }

  000e3	48 83 c4 18	 add	 rsp, 24
  000e7	c3		 ret	 0
strcmpcasenosensitive_internal ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_getByte DD imagerel unz64local_getByte
	DD	imagerel unz64local_getByte+123
	DD	imagerel $unwind$unz64local_getByte
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_getByte DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_getByte
_TEXT	SEGMENT
err$ = 32
c$ = 36
pzlib_filefunc_def$ = 64
filestream$ = 72
pi$ = 80
unz64local_getByte PROC					; COMDAT

; 213  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 214  :     unsigned char c;
; 215  :     int err = (int)ZREAD64(*pzlib_filefunc_def,filestream,&c,1);

  00013	41 b9 01 00 00
	00		 mov	 r9d, 1
  00019	4c 8d 44 24 24	 lea	 r8, QWORD PTR c$[rsp]
  0001e	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00028	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR pzlib_filefunc_def$[rsp]
  00031	ff 50 08	 call	 QWORD PTR [rax+8]
  00034	89 44 24 20	 mov	 DWORD PTR err$[rsp], eax

; 216  :     if (err==1)

  00038	83 7c 24 20 01	 cmp	 DWORD PTR err$[rsp], 1
  0003d	75 12		 jne	 SHORT $LN4@unz64local

; 217  :     {
; 218  :         *pi = (int)c;

  0003f	0f b6 4c 24 24	 movzx	 ecx, BYTE PTR c$[rsp]
  00044	48 8b 44 24 50	 mov	 rax, QWORD PTR pi$[rsp]
  00049	89 08		 mov	 DWORD PTR [rax], ecx

; 219  :         return UNZ_OK;

  0004b	33 c0		 xor	 eax, eax
  0004d	eb 27		 jmp	 SHORT $LN5@unz64local

; 220  :     }
; 221  :     else

  0004f	eb 25		 jmp	 SHORT $LN3@unz64local
$LN4@unz64local:

; 222  :     {
; 223  :         if (ZERROR64(*pzlib_filefunc_def,filestream))

  00051	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00056	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0005b	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR pzlib_filefunc_def$[rsp]
  00064	ff 50 30	 call	 QWORD PTR [rax+48]
  00067	85 c0		 test	 eax, eax
  00069	74 09		 je	 SHORT $LN2@unz64local

; 224  :             return UNZ_ERRNO;

  0006b	b8 ff ff ff ff	 mov	 eax, -1
  00070	eb 04		 jmp	 SHORT $LN5@unz64local

; 225  :         else

  00072	eb 02		 jmp	 SHORT $LN1@unz64local
$LN2@unz64local:

; 226  :             return UNZ_EOF;

  00074	33 c0		 xor	 eax, eax
$LN1@unz64local:
$LN3@unz64local:
$LN5@unz64local:

; 227  :     }
; 228  : }

  00076	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007a	c3		 ret	 0
unz64local_getByte ENDP
PUBLIC	unzGetGlobalComment
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetGlobalComment DD imagerel $LN9
	DD	imagerel $LN9+242
	DD	imagerel $unwind$unzGetGlobalComment
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetGlobalComment DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetGlobalComment
_TEXT	SEGMENT
s$ = 32
uReadThis$ = 40
file$ = 64
szComment$ = 72
uSizeBuf$ = 80
unzGetGlobalComment PROC				; COMDAT

; 2052 : {

$LN9:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2053 :     unz64_s* s;
; 2054 :     uLong uReadThis ;
; 2055 :     if (file==NULL)

  00013	48 83 7c 24 40
	00		 cmp	 QWORD PTR file$[rsp], 0
  00019	75 0a		 jne	 SHORT $LN6@unzGetGlob@3

; 2056 :         return (int)UNZ_PARAMERROR;

  0001b	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00020	e9 c8 00 00 00	 jmp	 $LN7@unzGetGlob@3
$LN6@unzGetGlob@3:

; 2057 :     s=(unz64_s*)file;

  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR file$[rsp]
  0002a	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 2058 : 
; 2059 :     uReadThis = uSizeBuf;

  0002f	8b 44 24 50	 mov	 eax, DWORD PTR uSizeBuf$[rsp]
  00033	89 44 24 28	 mov	 DWORD PTR uReadThis$[rsp], eax

; 2060 :     if (uReadThis>s->gi.size_comment)

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0003c	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0003f	39 44 24 28	 cmp	 DWORD PTR uReadThis$[rsp], eax
  00043	76 0c		 jbe	 SHORT $LN5@unzGetGlob@3

; 2061 :         uReadThis = s->gi.size_comment;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0004a	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0004d	89 44 24 28	 mov	 DWORD PTR uReadThis$[rsp], eax
$LN5@unzGetGlob@3:

; 2062 : 
; 2063 :     if (ZSEEK64(s->z_filefunc,s->filestream,s->central_pos+22,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00051	4c 8b 44 24 20	 mov	 r8, QWORD PTR s$[rsp]
  00056	4d 8b 80 98 00
	00 00		 mov	 r8, QWORD PTR [r8+152]
  0005d	49 83 c0 16	 add	 r8, 22
  00061	45 33 c9	 xor	 r9d, r9d
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00069	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0006d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00072	e8 00 00 00 00	 call	 call_zseek64
  00077	85 c0		 test	 eax, eax
  00079	74 07		 je	 SHORT $LN4@unzGetGlob@3

; 2064 :         return UNZ_ERRNO;

  0007b	b8 ff ff ff ff	 mov	 eax, -1
  00080	eb 6b		 jmp	 SHORT $LN7@unzGetGlob@3
$LN4@unzGetGlob@3:

; 2065 : 
; 2066 :     if (uReadThis>0)

  00082	83 7c 24 28 00	 cmp	 DWORD PTR uReadThis$[rsp], 0
  00087	76 39		 jbe	 SHORT $LN3@unzGetGlob@3

; 2067 :     {
; 2068 :       *szComment='\0';

  00089	48 8b 44 24 48	 mov	 rax, QWORD PTR szComment$[rsp]
  0008e	c6 00 00	 mov	 BYTE PTR [rax], 0

; 2069 :       if (ZREAD64(s->z_filefunc,s->filestream,szComment,uReadThis)!=uReadThis)

  00091	44 8b 4c 24 28	 mov	 r9d, DWORD PTR uReadThis$[rsp]
  00096	4c 8b 44 24 48	 mov	 r8, QWORD PTR szComment$[rsp]
  0009b	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  000a0	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  000a9	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  000ad	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  000b2	ff 50 08	 call	 QWORD PTR [rax+8]
  000b5	3b 44 24 28	 cmp	 eax, DWORD PTR uReadThis$[rsp]
  000b9	74 07		 je	 SHORT $LN2@unzGetGlob@3

; 2070 :         return UNZ_ERRNO;

  000bb	b8 ff ff ff ff	 mov	 eax, -1
  000c0	eb 2b		 jmp	 SHORT $LN7@unzGetGlob@3
$LN2@unzGetGlob@3:
$LN3@unzGetGlob@3:

; 2071 :     }
; 2072 : 
; 2073 :     if ((szComment != NULL) && (uSizeBuf > s->gi.size_comment))

  000c2	48 83 7c 24 48
	00		 cmp	 QWORD PTR szComment$[rsp], 0
  000c8	74 1f		 je	 SHORT $LN1@unzGetGlob@3
  000ca	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  000cf	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000d2	39 44 24 50	 cmp	 DWORD PTR uSizeBuf$[rsp], eax
  000d6	76 11		 jbe	 SHORT $LN1@unzGetGlob@3

; 2074 :         *(szComment+s->gi.size_comment)='\0';

  000d8	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  000dd	8b 48 70	 mov	 ecx, DWORD PTR [rax+112]
  000e0	48 8b 44 24 48	 mov	 rax, QWORD PTR szComment$[rsp]
  000e5	c6 04 08 00	 mov	 BYTE PTR [rax+rcx], 0
$LN1@unzGetGlob@3:

; 2075 :     return (int)uReadThis;

  000e9	8b 44 24 28	 mov	 eax, DWORD PTR uReadThis$[rsp]
$LN7@unzGetGlob@3:

; 2076 : }

  000ed	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000f1	c3		 ret	 0
unzGetGlobalComment ENDP
_TEXT	ENDS
PUBLIC	unzCloseCurrentFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzCloseCurrentFile DD imagerel $LN10
	DD	imagerel $LN10+259
	DD	imagerel $unwind$unzCloseCurrentFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzCloseCurrentFile DD 010901H
	DD	08209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzCloseCurrentFile
_TEXT	SEGMENT
s$ = 32
pfile_in_zip_read_info$ = 40
err$ = 48
file$ = 80
unzCloseCurrentFile PROC				; COMDAT

; 2005 : {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2006 :     int err=UNZ_OK;

  00009	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 2007 : 
; 2008 :     unz64_s* s;
; 2009 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 2010 :     if (file==NULL)

  00011	48 83 7c 24 50
	00		 cmp	 QWORD PTR file$[rsp], 0
  00017	75 0a		 jne	 SHORT $LN7@unzCloseCu

; 2011 :         return UNZ_PARAMERROR;

  00019	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0001e	e9 db 00 00 00	 jmp	 $LN8@unzCloseCu
$LN7@unzCloseCu:

; 2012 :     s=(unz64_s*)file;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR file$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 2013 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00032	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  00039	48 89 44 24 28	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 2014 : 
; 2015 :     if (pfile_in_zip_read_info==NULL)

  0003e	48 83 7c 24 28
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00044	75 0a		 jne	 SHORT $LN6@unzCloseCu

; 2016 :         return UNZ_PARAMERROR;

  00046	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0004b	e9 ae 00 00 00	 jmp	 $LN8@unzCloseCu
$LN6@unzCloseCu:

; 2017 : 
; 2018 : 
; 2019 :     if ((pfile_in_zip_read_info->rest_read_uncompressed == 0) &&
; 2020 :         (!pfile_in_zip_read_info->raw))

  00050	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00055	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0005d	75 2e		 jne	 SHORT $LN5@unzCloseCu
  0005f	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00064	83 b8 18 01 00
	00 00		 cmp	 DWORD PTR [rax+280], 0
  0006b	75 20		 jne	 SHORT $LN5@unzCloseCu

; 2021 :     {
; 2022 :         if (pfile_in_zip_read_info->crc32 != pfile_in_zip_read_info->crc32_wait)

  0006d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00072	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00077	8b 80 94 00 00
	00		 mov	 eax, DWORD PTR [rax+148]
  0007d	39 81 90 00 00
	00		 cmp	 DWORD PTR [rcx+144], eax
  00083	74 08		 je	 SHORT $LN4@unzCloseCu

; 2023 :             err=UNZ_CRCERROR;

  00085	c7 44 24 30 97
	ff ff ff	 mov	 DWORD PTR err$[rsp], -105 ; ffffffffffffff97H
$LN4@unzCloseCu:
$LN5@unzCloseCu:

; 2024 :     }
; 2025 : 
; 2026 : 
; 2027 :     TRYFREE(pfile_in_zip_read_info->read_buffer);

  0008d	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00092	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00096	74 0e		 je	 SHORT $LN3@unzCloseCu
  00098	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0009d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN3@unzCloseCu:

; 2028 :     pfile_in_zip_read_info->read_buffer = NULL;

  000a6	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000ab	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2029 :     if (pfile_in_zip_read_info->stream_initialised == Z_DEFLATED)

  000b2	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000b7	83 78 68 08	 cmp	 DWORD PTR [rax+104], 8
  000bb	75 0e		 jne	 SHORT $LN2@unzCloseCu

; 2030 :         inflateEnd(&pfile_in_zip_read_info->stream);

  000bd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000c2	48 83 c1 08	 add	 rcx, 8
  000c6	e8 00 00 00 00	 call	 inflateEnd
$LN2@unzCloseCu:

; 2031 : #ifdef HAVE_BZIP2
; 2032 :     else if (pfile_in_zip_read_info->stream_initialised == Z_BZIP2ED)
; 2033 :         BZ2_bzDecompressEnd(&pfile_in_zip_read_info->bstream);
; 2034 : #endif
; 2035 : 
; 2036 : 
; 2037 :     pfile_in_zip_read_info->stream_initialised = 0;

  000cb	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000d0	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [rax+104], 0

; 2038 :     TRYFREE(pfile_in_zip_read_info);

  000d7	48 83 7c 24 28
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  000dd	74 0b		 je	 SHORT $LN1@unzCloseCu
  000df	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN1@unzCloseCu:

; 2039 : 
; 2040 :     s->pfile_in_zip_read=NULL;

  000ea	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  000ef	48 c7 80 10 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+272], 0

; 2041 : 
; 2042 :     return err;

  000fa	8b 44 24 30	 mov	 eax, DWORD PTR err$[rsp]
$LN8@unzCloseCu:

; 2043 : }

  000fe	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00102	c3		 ret	 0
unzCloseCurrentFile ENDP
_TEXT	ENDS
PUBLIC	unzGetLocalExtrafield
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetLocalExtrafield DD imagerel $LN11
	DD	imagerel $LN11+295
	DD	imagerel $unwind$unzGetLocalExtrafield
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetLocalExtrafield DD 011301H
	DD	08213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetLocalExtrafield
_TEXT	SEGMENT
size_to_read$ = 32
s$ = 40
pfile_in_zip_read_info$ = 48
read_now$ = 56
file$ = 80
buf$ = 88
len$ = 96
unzGetLocalExtrafield PROC				; COMDAT

; 1957 : {

$LN11:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1958 :     unz64_s* s;
; 1959 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1960 :     uInt read_now;
; 1961 :     ZPOS64_T size_to_read;
; 1962 : 
; 1963 :     if (file==NULL)

  00013	48 83 7c 24 50
	00		 cmp	 QWORD PTR file$[rsp], 0
  00019	75 0a		 jne	 SHORT $LN8@unzGetLoca

; 1964 :         return UNZ_PARAMERROR;

  0001b	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00020	e9 fd 00 00 00	 jmp	 $LN9@unzGetLoca
$LN8@unzGetLoca:

; 1965 :     s=(unz64_s*)file;

  00025	48 8b 44 24 50	 mov	 rax, QWORD PTR file$[rsp]
  0002a	48 89 44 24 28	 mov	 QWORD PTR s$[rsp], rax

; 1966 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  0002f	48 8b 44 24 28	 mov	 rax, QWORD PTR s$[rsp]
  00034	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  0003b	48 89 44 24 30	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1967 : 
; 1968 :     if (pfile_in_zip_read_info==NULL)

  00040	48 83 7c 24 30
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  00046	75 0a		 jne	 SHORT $LN7@unzGetLoca

; 1969 :         return UNZ_PARAMERROR;

  00048	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0004d	e9 d0 00 00 00	 jmp	 $LN9@unzGetLoca
$LN7@unzGetLoca:

; 1970 : 
; 1971 :     size_to_read = (pfile_in_zip_read_info->size_local_extrafield -
; 1972 :                 pfile_in_zip_read_info->pos_local_extrafield);

  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00057	8b 40 78	 mov	 eax, DWORD PTR [rax+120]
  0005a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0005f	48 2b 81 80 00
	00 00		 sub	 rax, QWORD PTR [rcx+128]
  00066	48 89 44 24 20	 mov	 QWORD PTR size_to_read$[rsp], rax

; 1973 : 
; 1974 :     if (buf==NULL)

  0006b	48 83 7c 24 58
	00		 cmp	 QWORD PTR buf$[rsp], 0
  00071	75 09		 jne	 SHORT $LN6@unzGetLoca

; 1975 :         return (int)size_to_read;

  00073	8b 44 24 20	 mov	 eax, DWORD PTR size_to_read$[rsp]
  00077	e9 a6 00 00 00	 jmp	 $LN9@unzGetLoca
$LN6@unzGetLoca:

; 1976 : 
; 1977 :     if (len>size_to_read)

  0007c	8b 44 24 60	 mov	 eax, DWORD PTR len$[rsp]
  00080	48 3b 44 24 20	 cmp	 rax, QWORD PTR size_to_read$[rsp]
  00085	76 0a		 jbe	 SHORT $LN5@unzGetLoca

; 1978 :         read_now = (uInt)size_to_read;

  00087	8b 44 24 20	 mov	 eax, DWORD PTR size_to_read$[rsp]
  0008b	89 44 24 38	 mov	 DWORD PTR read_now$[rsp], eax

; 1979 :     else

  0008f	eb 08		 jmp	 SHORT $LN4@unzGetLoca
$LN5@unzGetLoca:

; 1980 :         read_now = (uInt)len ;

  00091	8b 44 24 60	 mov	 eax, DWORD PTR len$[rsp]
  00095	89 44 24 38	 mov	 DWORD PTR read_now$[rsp], eax
$LN4@unzGetLoca:

; 1981 : 
; 1982 :     if (read_now==0)

  00099	83 7c 24 38 00	 cmp	 DWORD PTR read_now$[rsp], 0
  0009e	75 04		 jne	 SHORT $LN3@unzGetLoca

; 1983 :         return 0;

  000a0	33 c0		 xor	 eax, eax
  000a2	eb 7e		 jmp	 SHORT $LN9@unzGetLoca
$LN3@unzGetLoca:

; 1984 : 
; 1985 :     if (ZSEEK64(pfile_in_zip_read_info->z_filefunc,
; 1986 :               pfile_in_zip_read_info->filestream,
; 1987 :               pfile_in_zip_read_info->offset_local_extrafield +
; 1988 :               pfile_in_zip_read_info->pos_local_extrafield,
; 1989 :               ZLIB_FILEFUNC_SEEK_SET)!=0)

  000a4	4c 8b 44 24 30	 mov	 r8, QWORD PTR pfile_in_zip_read_info$[rsp]
  000a9	4d 8b 40 70	 mov	 r8, QWORD PTR [r8+112]
  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000b2	4c 03 80 80 00
	00 00		 add	 r8, QWORD PTR [rax+128]
  000b9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000be	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  000c5	45 33 c9	 xor	 r9d, r9d
  000c8	48 8b 54 24 30	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000cd	48 8b 92 00 01
	00 00		 mov	 rdx, QWORD PTR [rdx+256]
  000d4	e8 00 00 00 00	 call	 call_zseek64
  000d9	85 c0		 test	 eax, eax
  000db	74 07		 je	 SHORT $LN2@unzGetLoca

; 1990 :         return UNZ_ERRNO;

  000dd	b8 ff ff ff ff	 mov	 eax, -1
  000e2	eb 3e		 jmp	 SHORT $LN9@unzGetLoca
$LN2@unzGetLoca:

; 1991 : 
; 1992 :     if (ZREAD64(pfile_in_zip_read_info->z_filefunc,
; 1993 :               pfile_in_zip_read_info->filestream,
; 1994 :               buf,read_now)!=read_now)

  000e4	44 8b 4c 24 38	 mov	 r9d, DWORD PTR read_now$[rsp]
  000e9	4c 8b 44 24 58	 mov	 r8, QWORD PTR buf$[rsp]
  000ee	48 8b 54 24 30	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000f3	48 8b 92 00 01
	00 00		 mov	 rdx, QWORD PTR [rdx+256]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000ff	48 8b 89 e0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+224]
  00106	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0010b	ff 90 b0 00 00
	00		 call	 QWORD PTR [rax+176]
  00111	3b 44 24 38	 cmp	 eax, DWORD PTR read_now$[rsp]
  00115	74 07		 je	 SHORT $LN1@unzGetLoca

; 1995 :         return UNZ_ERRNO;

  00117	b8 ff ff ff ff	 mov	 eax, -1
  0011c	eb 04		 jmp	 SHORT $LN9@unzGetLoca
$LN1@unzGetLoca:

; 1996 : 
; 1997 :     return (int)read_now;

  0011e	8b 44 24 38	 mov	 eax, DWORD PTR read_now$[rsp]
$LN9@unzGetLoca:

; 1998 : }

  00122	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00126	c3		 ret	 0
unzGetLocalExtrafield ENDP
_TEXT	ENDS
PUBLIC	unzGetFilePos
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetFilePos DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$unzGetFilePos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetFilePos DD 010e01H
	DD	0820eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetFilePos
_TEXT	SEGMENT
file_pos64$ = 32
err$ = 48
file$ = 80
file_pos$ = 88
unzGetFilePos PROC					; COMDAT

; 1327 : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1328 :     unz64_file_pos file_pos64;
; 1329 :     int err = unzGetFilePos64(file,&file_pos64);

  0000e	48 8d 54 24 20	 lea	 rdx, QWORD PTR file_pos64$[rsp]
  00013	48 8b 4c 24 50	 mov	 rcx, QWORD PTR file$[rsp]
  00018	e8 00 00 00 00	 call	 unzGetFilePos64
  0001d	89 44 24 30	 mov	 DWORD PTR err$[rsp], eax

; 1330 :     if (err==UNZ_OK)

  00021	83 7c 24 30 00	 cmp	 DWORD PTR err$[rsp], 0
  00026	75 17		 jne	 SHORT $LN1@unzGetFile@2

; 1331 :     {
; 1332 :         file_pos->pos_in_zip_directory = (uLong)file_pos64.pos_in_zip_directory;

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR file_pos$[rsp]
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR file_pos64$[rsp]
  00031	89 01		 mov	 DWORD PTR [rcx], eax

; 1333 :         file_pos->num_of_file = (uLong)file_pos64.num_of_file;

  00033	48 8b 4c 24 58	 mov	 rcx, QWORD PTR file_pos$[rsp]
  00038	8b 44 24 28	 mov	 eax, DWORD PTR file_pos64$[rsp+8]
  0003c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
$LN1@unzGetFile@2:

; 1334 :     }
; 1335 :     return err;

  0003f	8b 44 24 30	 mov	 eax, DWORD PTR err$[rsp]

; 1336 : }

  00043	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00047	c3		 ret	 0
unzGetFilePos ENDP
_TEXT	ENDS
PUBLIC	unzClose
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzClose DD imagerel $LN6
	DD	imagerel $LN6+111
	DD	imagerel $unwind$unzClose
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzClose DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzClose
_TEXT	SEGMENT
s$ = 32
file$ = 64
unzClose PROC						; COMDAT

; 809  : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 810  :     unz64_s* s;
; 811  :     if (file==NULL)

  00009	48 83 7c 24 40
	00		 cmp	 QWORD PTR file$[rsp], 0
  0000f	75 07		 jne	 SHORT $LN3@unzClose

; 812  :         return UNZ_PARAMERROR;

  00011	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00016	eb 52		 jmp	 SHORT $LN4@unzClose
$LN3@unzClose:

; 813  :     s=(unz64_s*)file;

  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR file$[rsp]
  0001d	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 814  : 
; 815  :     if (s->pfile_in_zip_read!=NULL)

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00027	48 83 b8 10 01
	00 00 00	 cmp	 QWORD PTR [rax+272], 0
  0002f	74 0a		 je	 SHORT $LN2@unzClose

; 816  :         unzCloseCurrentFile(file);

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR file$[rsp]
  00036	e8 00 00 00 00	 call	 unzCloseCurrentFile
$LN2@unzClose:

; 817  : 
; 818  :     ZCLOSE64(s->z_filefunc, s->filestream);

  0003b	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00040	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00049	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  0004d	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00052	ff 50 28	 call	 QWORD PTR [rax+40]

; 819  :     TRYFREE(s);

  00055	48 83 7c 24 20
	00		 cmp	 QWORD PTR s$[rsp], 0
  0005b	74 0b		 je	 SHORT $LN1@unzClose
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN1@unzClose:

; 820  :     return UNZ_OK;

  00068	33 c0		 xor	 eax, eax
$LN4@unzClose:

; 821  : }

  0006a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006e	c3		 ret	 0
unzClose ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_SearchCentralDir DD imagerel unz64local_SearchCentralDir
	DD	imagerel unz64local_SearchCentralDir+535
	DD	imagerel $unwind$unz64local_SearchCentralDir
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_SearchCentralDir DD 010e01H
	DD	0c20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_SearchCentralDir
_TEXT	SEGMENT
uSizeFile$ = 32
uPosFound$ = 40
uBackRead$ = 48
uMaxBack$ = 56
buf$ = 64
i$80147 = 72
uReadPos$80146 = 80
uReadSize$80145 = 88
tv86 = 92
pzlib_filefunc_def$ = 112
filestream$ = 120
unz64local_SearchCentralDir PROC			; COMDAT

; 414  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 415  :     unsigned char* buf;
; 416  :     ZPOS64_T uSizeFile;
; 417  :     ZPOS64_T uBackRead;
; 418  :     ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */

  0000e	48 c7 44 24 38
	ff ff 00 00	 mov	 QWORD PTR uMaxBack$[rsp], 65535 ; 0000ffffH

; 419  :     ZPOS64_T uPosFound=0;

  00017	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR uPosFound$[rsp], 0

; 420  : 
; 421  :     if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)

  00020	41 b9 02 00 00
	00		 mov	 r9d, 2
  00026	45 33 c0	 xor	 r8d, r8d
  00029	48 8b 54 24 78	 mov	 rdx, QWORD PTR filestream$[rsp]
  0002e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00033	e8 00 00 00 00	 call	 call_zseek64
  00038	85 c0		 test	 eax, eax
  0003a	74 07		 je	 SHORT $LN14@unz64local@2

; 422  :         return 0;

  0003c	33 c0		 xor	 eax, eax
  0003e	e9 cf 01 00 00	 jmp	 $LN15@unz64local@2
$LN14@unz64local@2:

; 423  : 
; 424  : 
; 425  :     uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);

  00043	48 8b 54 24 78	 mov	 rdx, QWORD PTR filestream$[rsp]
  00048	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0004d	e8 00 00 00 00	 call	 call_ztell64
  00052	48 89 44 24 20	 mov	 QWORD PTR uSizeFile$[rsp], rax

; 426  : 
; 427  :     if (uMaxBack>uSizeFile)

  00057	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  0005c	48 39 44 24 38	 cmp	 QWORD PTR uMaxBack$[rsp], rax
  00061	76 0a		 jbe	 SHORT $LN13@unz64local@2

; 428  :         uMaxBack = uSizeFile;

  00063	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  00068	48 89 44 24 38	 mov	 QWORD PTR uMaxBack$[rsp], rax
$LN13@unz64local@2:

; 429  : 
; 430  :     buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);

  0006d	b9 04 04 00 00	 mov	 ecx, 1028		; 00000404H
  00072	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  00078	48 89 44 24 40	 mov	 QWORD PTR buf$[rsp], rax

; 431  :     if (buf==NULL)

  0007d	48 83 7c 24 40
	00		 cmp	 QWORD PTR buf$[rsp], 0
  00083	75 07		 jne	 SHORT $LN12@unz64local@2

; 432  :         return 0;

  00085	33 c0		 xor	 eax, eax
  00087	e9 86 01 00 00	 jmp	 $LN15@unz64local@2
$LN12@unz64local@2:

; 433  : 
; 434  :     uBackRead = 4;

  0008c	48 c7 44 24 30
	04 00 00 00	 mov	 QWORD PTR uBackRead$[rsp], 4
$LN11@unz64local@2:

; 435  :     while (uBackRead<uMaxBack)

  00095	48 8b 44 24 38	 mov	 rax, QWORD PTR uMaxBack$[rsp]
  0009a	48 39 44 24 30	 cmp	 QWORD PTR uBackRead$[rsp], rax
  0009f	0f 83 55 01 00
	00		 jae	 $LN10@unz64local@2

; 436  :     {
; 437  :         uLong uReadSize;
; 438  :         ZPOS64_T uReadPos ;
; 439  :         int i;
; 440  :         if (uBackRead+BUFREADCOMMENT>uMaxBack)

  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR uBackRead$[rsp]
  000aa	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  000b0	48 3b 44 24 38	 cmp	 rax, QWORD PTR uMaxBack$[rsp]
  000b5	76 0c		 jbe	 SHORT $LN9@unz64local@2

; 441  :             uBackRead = uMaxBack;

  000b7	48 8b 44 24 38	 mov	 rax, QWORD PTR uMaxBack$[rsp]
  000bc	48 89 44 24 30	 mov	 QWORD PTR uBackRead$[rsp], rax

; 442  :         else

  000c1	eb 10		 jmp	 SHORT $LN8@unz64local@2
$LN9@unz64local@2:

; 443  :             uBackRead+=BUFREADCOMMENT;

  000c3	48 8b 44 24 30	 mov	 rax, QWORD PTR uBackRead$[rsp]
  000c8	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  000ce	48 89 44 24 30	 mov	 QWORD PTR uBackRead$[rsp], rax
$LN8@unz64local@2:

; 444  :         uReadPos = uSizeFile-uBackRead ;

  000d3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR uBackRead$[rsp]
  000d8	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  000dd	48 2b c1	 sub	 rax, rcx
  000e0	48 89 44 24 50	 mov	 QWORD PTR uReadPos$80146[rsp], rax

; 445  : 
; 446  :         uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?
; 447  :                      (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);

  000e5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR uReadPos$80146[rsp]
  000ea	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  000ef	48 2b c1	 sub	 rax, rcx
  000f2	48 3d 04 04 00
	00		 cmp	 rax, 1028		; 00000404H
  000f8	76 0a		 jbe	 SHORT $LN17@unz64local@2
  000fa	c7 44 24 5c 04
	04 00 00	 mov	 DWORD PTR tv86[rsp], 1028 ; 00000404H
  00102	eb 11		 jmp	 SHORT $LN18@unz64local@2
$LN17@unz64local@2:
  00104	48 8b 4c 24 50	 mov	 rcx, QWORD PTR uReadPos$80146[rsp]
  00109	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  0010e	48 2b c1	 sub	 rax, rcx
  00111	89 44 24 5c	 mov	 DWORD PTR tv86[rsp], eax
$LN18@unz64local@2:
  00115	8b 44 24 5c	 mov	 eax, DWORD PTR tv86[rsp]
  00119	89 44 24 58	 mov	 DWORD PTR uReadSize$80145[rsp], eax

; 448  :         if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)

  0011d	45 33 c9	 xor	 r9d, r9d
  00120	4c 8b 44 24 50	 mov	 r8, QWORD PTR uReadPos$80146[rsp]
  00125	48 8b 54 24 78	 mov	 rdx, QWORD PTR filestream$[rsp]
  0012a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0012f	e8 00 00 00 00	 call	 call_zseek64
  00134	85 c0		 test	 eax, eax
  00136	74 05		 je	 SHORT $LN7@unz64local@2

; 449  :             break;

  00138	e9 bd 00 00 00	 jmp	 $LN10@unz64local@2
$LN7@unz64local@2:

; 450  : 
; 451  :         if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)

  0013d	44 8b 4c 24 58	 mov	 r9d, DWORD PTR uReadSize$80145[rsp]
  00142	4c 8b 44 24 40	 mov	 r8, QWORD PTR buf$[rsp]
  00147	48 8b 54 24 78	 mov	 rdx, QWORD PTR filestream$[rsp]
  0014c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00151	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00155	48 8b 44 24 70	 mov	 rax, QWORD PTR pzlib_filefunc_def$[rsp]
  0015a	ff 50 08	 call	 QWORD PTR [rax+8]
  0015d	3b 44 24 58	 cmp	 eax, DWORD PTR uReadSize$80145[rsp]
  00161	74 05		 je	 SHORT $LN6@unz64local@2

; 452  :             break;

  00163	e9 92 00 00 00	 jmp	 $LN10@unz64local@2
$LN6@unz64local@2:

; 453  : 
; 454  :         for (i=(int)uReadSize-3; (i--)>0;)

  00168	8b 44 24 58	 mov	 eax, DWORD PTR uReadSize$80145[rsp]
  0016c	83 e8 03	 sub	 eax, 3
  0016f	89 44 24 48	 mov	 DWORD PTR i$80147[rsp], eax
$LN5@unz64local@2:
  00173	8b 4c 24 48	 mov	 ecx, DWORD PTR i$80147[rsp]
  00177	8b 44 24 48	 mov	 eax, DWORD PTR i$80147[rsp]
  0017b	83 e8 01	 sub	 eax, 1
  0017e	89 44 24 48	 mov	 DWORD PTR i$80147[rsp], eax
  00182	85 c9		 test	 ecx, ecx
  00184	7e 65		 jle	 SHORT $LN4@unz64local@2

; 455  :             if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) &&
; 456  :                 ((*(buf+i+2))==0x05) && ((*(buf+i+3))==0x06))

  00186	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR i$80147[rsp]
  0018b	48 8b 44 24 40	 mov	 rax, QWORD PTR buf$[rsp]
  00190	0f b6 04 08	 movzx	 eax, BYTE PTR [rax+rcx]
  00194	83 f8 50	 cmp	 eax, 80			; 00000050H
  00197	75 50		 jne	 SHORT $LN3@unz64local@2
  00199	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR i$80147[rsp]
  0019e	48 8b 44 24 40	 mov	 rax, QWORD PTR buf$[rsp]
  001a3	0f b6 44 08 01	 movzx	 eax, BYTE PTR [rax+rcx+1]
  001a8	83 f8 4b	 cmp	 eax, 75			; 0000004bH
  001ab	75 3c		 jne	 SHORT $LN3@unz64local@2
  001ad	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR i$80147[rsp]
  001b2	48 8b 44 24 40	 mov	 rax, QWORD PTR buf$[rsp]
  001b7	0f b6 44 08 02	 movzx	 eax, BYTE PTR [rax+rcx+2]
  001bc	83 f8 05	 cmp	 eax, 5
  001bf	75 28		 jne	 SHORT $LN3@unz64local@2
  001c1	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR i$80147[rsp]
  001c6	48 8b 44 24 40	 mov	 rax, QWORD PTR buf$[rsp]
  001cb	0f b6 44 08 03	 movzx	 eax, BYTE PTR [rax+rcx+3]
  001d0	83 f8 06	 cmp	 eax, 6
  001d3	75 14		 jne	 SHORT $LN3@unz64local@2

; 457  :             {
; 458  :                 uPosFound = uReadPos+i;

  001d5	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR i$80147[rsp]
  001da	48 8b 44 24 50	 mov	 rax, QWORD PTR uReadPos$80146[rsp]
  001df	48 03 c1	 add	 rax, rcx
  001e2	48 89 44 24 28	 mov	 QWORD PTR uPosFound$[rsp], rax

; 459  :                 break;

  001e7	eb 02		 jmp	 SHORT $LN4@unz64local@2
$LN3@unz64local@2:

; 460  :             }

  001e9	eb 88		 jmp	 SHORT $LN5@unz64local@2
$LN4@unz64local@2:

; 461  : 
; 462  :         if (uPosFound!=0)

  001eb	48 83 7c 24 28
	00		 cmp	 QWORD PTR uPosFound$[rsp], 0
  001f1	74 02		 je	 SHORT $LN2@unz64local@2

; 463  :             break;

  001f3	eb 05		 jmp	 SHORT $LN10@unz64local@2
$LN2@unz64local@2:

; 464  :     }

  001f5	e9 9b fe ff ff	 jmp	 $LN11@unz64local@2
$LN10@unz64local@2:

; 465  :     TRYFREE(buf);

  001fa	48 83 7c 24 40
	00		 cmp	 QWORD PTR buf$[rsp], 0
  00200	74 0b		 je	 SHORT $LN1@unz64local@2
  00202	48 8b 4c 24 40	 mov	 rcx, QWORD PTR buf$[rsp]
  00207	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN1@unz64local@2:

; 466  :     return uPosFound;

  0020d	48 8b 44 24 28	 mov	 rax, QWORD PTR uPosFound$[rsp]
$LN15@unz64local@2:

; 467  : }

  00212	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00216	c3		 ret	 0
unz64local_SearchCentralDir ENDP
_TEXT	ENDS
PUBLIC	unzStringFileNameCompare
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzStringFileNameCompare DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$unzStringFileNameCompare
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzStringFileNameCompare DD 011301H
	DD	04213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzStringFileNameCompare
_TEXT	SEGMENT
fileName1$ = 48
fileName2$ = 56
iCaseSensitivity$ = 64
unzStringFileNameCompare PROC				; COMDAT

; 394  : {

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 395  :     if (iCaseSensitivity==0)

  00013	83 7c 24 40 00	 cmp	 DWORD PTR iCaseSensitivity$[rsp], 0
  00018	75 08		 jne	 SHORT $LN2@unzStringF

; 396  :         iCaseSensitivity=CASESENSITIVITYDEFAULTVALUE;

  0001a	c7 44 24 40 02
	00 00 00	 mov	 DWORD PTR iCaseSensitivity$[rsp], 2
$LN2@unzStringF:

; 397  : 
; 398  :     if (iCaseSensitivity==1)

  00022	83 7c 24 40 01	 cmp	 DWORD PTR iCaseSensitivity$[rsp], 1
  00027	75 11		 jne	 SHORT $LN1@unzStringF

; 399  :         return strcmp(fileName1,fileName2);

  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR fileName2$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR fileName1$[rsp]
  00033	e8 00 00 00 00	 call	 strcmp
  00038	eb 0f		 jmp	 SHORT $LN3@unzStringF
$LN1@unzStringF:

; 400  : 
; 401  :     return STRCMPCASENOSENTIVEFUNCTION(fileName1,fileName2);

  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR fileName2$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR fileName1$[rsp]
  00044	e8 00 00 00 00	 call	 strcmpcasenosensitive_internal
$LN3@unzStringF:

; 402  : }

  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	c3		 ret	 0
unzStringFileNameCompare ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_getLong64 DD imagerel unz64local_getLong64
	DD	imagerel unz64local_getLong64+475
	DD	imagerel $unwind$unz64local_getLong64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_getLong64 DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_getLong64
_TEXT	SEGMENT
x$ = 32
i$ = 40
err$ = 44
pzlib_filefunc_def$ = 64
filestream$ = 72
pX$ = 80
unz64local_getLong64 PROC				; COMDAT

; 305  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 306  :     ZPOS64_T x ;
; 307  :     int i = 0;

  00013	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0

; 308  :     int err;
; 309  : 
; 310  :     err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  0001b	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  00020	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00025	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0002a	e8 00 00 00 00	 call	 unz64local_getByte
  0002f	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax

; 311  :     x = (ZPOS64_T)i;

  00033	48 63 44 24 28	 movsxd	 rax, DWORD PTR i$[rsp]
  00038	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 312  : 
; 313  :     if (err==UNZ_OK)

  0003d	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00042	75 18		 jne	 SHORT $LN9@unz64local@3

; 314  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00044	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  00049	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  0004e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00053	e8 00 00 00 00	 call	 unz64local_getByte
  00058	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN9@unz64local@3:

; 315  :     x |= ((ZPOS64_T)i)<<8;

  0005c	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  00061	48 c1 e1 08	 shl	 rcx, 8
  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  0006a	48 0b c1	 or	 rax, rcx
  0006d	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 316  : 
; 317  :     if (err==UNZ_OK)

  00072	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00077	75 18		 jne	 SHORT $LN8@unz64local@3

; 318  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00079	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  0007e	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00083	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00088	e8 00 00 00 00	 call	 unz64local_getByte
  0008d	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN8@unz64local@3:

; 319  :     x |= ((ZPOS64_T)i)<<16;

  00091	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  00096	48 c1 e1 10	 shl	 rcx, 16
  0009a	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  0009f	48 0b c1	 or	 rax, rcx
  000a2	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 320  : 
; 321  :     if (err==UNZ_OK)

  000a7	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  000ac	75 18		 jne	 SHORT $LN7@unz64local@3

; 322  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  000ae	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  000b3	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  000b8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  000bd	e8 00 00 00 00	 call	 unz64local_getByte
  000c2	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN7@unz64local@3:

; 323  :     x |= ((ZPOS64_T)i)<<24;

  000c6	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  000cb	48 c1 e1 18	 shl	 rcx, 24
  000cf	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  000d4	48 0b c1	 or	 rax, rcx
  000d7	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 324  : 
; 325  :     if (err==UNZ_OK)

  000dc	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  000e1	75 18		 jne	 SHORT $LN6@unz64local@3

; 326  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  000e3	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  000e8	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  000ed	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  000f2	e8 00 00 00 00	 call	 unz64local_getByte
  000f7	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN6@unz64local@3:

; 327  :     x |= ((ZPOS64_T)i)<<32;

  000fb	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  00100	48 c1 e1 20	 shl	 rcx, 32			; 00000020H
  00104	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  00109	48 0b c1	 or	 rax, rcx
  0010c	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 328  : 
; 329  :     if (err==UNZ_OK)

  00111	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00116	75 18		 jne	 SHORT $LN5@unz64local@3

; 330  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00118	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  0011d	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00122	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00127	e8 00 00 00 00	 call	 unz64local_getByte
  0012c	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN5@unz64local@3:

; 331  :     x |= ((ZPOS64_T)i)<<40;

  00130	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  00135	48 c1 e1 28	 shl	 rcx, 40			; 00000028H
  00139	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  0013e	48 0b c1	 or	 rax, rcx
  00141	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 332  : 
; 333  :     if (err==UNZ_OK)

  00146	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  0014b	75 18		 jne	 SHORT $LN4@unz64local@3

; 334  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  0014d	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  00152	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00157	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0015c	e8 00 00 00 00	 call	 unz64local_getByte
  00161	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN4@unz64local@3:

; 335  :     x |= ((ZPOS64_T)i)<<48;

  00165	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  0016a	48 c1 e1 30	 shl	 rcx, 48			; 00000030H
  0016e	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  00173	48 0b c1	 or	 rax, rcx
  00176	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 336  : 
; 337  :     if (err==UNZ_OK)

  0017b	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00180	75 18		 jne	 SHORT $LN3@unz64local@3

; 338  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00182	4c 8d 44 24 28	 lea	 r8, QWORD PTR i$[rsp]
  00187	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  0018c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00191	e8 00 00 00 00	 call	 unz64local_getByte
  00196	89 44 24 2c	 mov	 DWORD PTR err$[rsp], eax
$LN3@unz64local@3:

; 339  :     x |= ((ZPOS64_T)i)<<56;

  0019a	48 63 4c 24 28	 movsxd	 rcx, DWORD PTR i$[rsp]
  0019f	48 c1 e1 38	 shl	 rcx, 56			; 00000038H
  001a3	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  001a8	48 0b c1	 or	 rax, rcx
  001ab	48 89 44 24 20	 mov	 QWORD PTR x$[rsp], rax

; 340  : 
; 341  :     if (err==UNZ_OK)

  001b0	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  001b5	75 0f		 jne	 SHORT $LN2@unz64local@3

; 342  :         *pX = x;

  001b7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pX$[rsp]
  001bc	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  001c1	48 89 01	 mov	 QWORD PTR [rcx], rax

; 343  :     else

  001c4	eb 0c		 jmp	 SHORT $LN1@unz64local@3
$LN2@unz64local@3:

; 344  :         *pX = 0;

  001c6	48 8b 44 24 50	 mov	 rax, QWORD PTR pX$[rsp]
  001cb	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN1@unz64local@3:

; 345  :     return err;

  001d2	8b 44 24 2c	 mov	 eax, DWORD PTR err$[rsp]

; 346  : }

  001d6	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001da	c3		 ret	 0
unz64local_getLong64 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_getLong DD imagerel unz64local_getLong
	DD	imagerel unz64local_getLong+243
	DD	imagerel $unwind$unz64local_getLong
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_getLong DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_getLong
_TEXT	SEGMENT
x$ = 32
i$ = 36
err$ = 40
pzlib_filefunc_def$ = 64
filestream$ = 72
pX$ = 80
unz64local_getLong PROC					; COMDAT

; 269  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 270  :     uLong x ;
; 271  :     int i = 0;

  00013	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0

; 272  :     int err;
; 273  : 
; 274  :     err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  0001b	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  00020	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00025	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0002a	e8 00 00 00 00	 call	 unz64local_getByte
  0002f	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax

; 275  :     x = (uLong)i;

  00033	8b 44 24 24	 mov	 eax, DWORD PTR i$[rsp]
  00037	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 276  : 
; 277  :     if (err==UNZ_OK)

  0003b	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  00040	75 18		 jne	 SHORT $LN5@unz64local@4

; 278  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00042	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  00047	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00051	e8 00 00 00 00	 call	 unz64local_getByte
  00056	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax
$LN5@unz64local@4:

; 279  :     x |= ((uLong)i)<<8;

  0005a	8b 4c 24 24	 mov	 ecx, DWORD PTR i$[rsp]
  0005e	c1 e1 08	 shl	 ecx, 8
  00061	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00065	0b c1		 or	 eax, ecx
  00067	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 280  : 
; 281  :     if (err==UNZ_OK)

  0006b	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  00070	75 18		 jne	 SHORT $LN4@unz64local@4

; 282  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00072	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  00077	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  0007c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00081	e8 00 00 00 00	 call	 unz64local_getByte
  00086	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax
$LN4@unz64local@4:

; 283  :     x |= ((uLong)i)<<16;

  0008a	8b 4c 24 24	 mov	 ecx, DWORD PTR i$[rsp]
  0008e	c1 e1 10	 shl	 ecx, 16
  00091	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00095	0b c1		 or	 eax, ecx
  00097	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 284  : 
; 285  :     if (err==UNZ_OK)

  0009b	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  000a0	75 18		 jne	 SHORT $LN3@unz64local@4

; 286  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  000a2	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  000a7	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  000ac	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  000b1	e8 00 00 00 00	 call	 unz64local_getByte
  000b6	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax
$LN3@unz64local@4:

; 287  :     x += ((uLong)i)<<24;

  000ba	8b 4c 24 24	 mov	 ecx, DWORD PTR i$[rsp]
  000be	c1 e1 18	 shl	 ecx, 24
  000c1	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000c5	03 c1		 add	 eax, ecx
  000c7	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 288  : 
; 289  :     if (err==UNZ_OK)

  000cb	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  000d0	75 0d		 jne	 SHORT $LN2@unz64local@4

; 290  :         *pX = x;

  000d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pX$[rsp]
  000d7	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000db	89 01		 mov	 DWORD PTR [rcx], eax

; 291  :     else

  000dd	eb 0b		 jmp	 SHORT $LN1@unz64local@4
$LN2@unz64local@4:

; 292  :         *pX = 0;

  000df	48 8b 44 24 50	 mov	 rax, QWORD PTR pX$[rsp]
  000e4	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@unz64local@4:

; 293  :     return err;

  000ea	8b 44 24 28	 mov	 eax, DWORD PTR err$[rsp]

; 294  : }

  000ee	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000f2	c3		 ret	 0
unz64local_getLong ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_getShort DD imagerel unz64local_getShort
	DD	imagerel unz64local_getShort+147
	DD	imagerel $unwind$unz64local_getShort
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_getShort DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_getShort
_TEXT	SEGMENT
x$ = 32
i$ = 36
err$ = 40
pzlib_filefunc_def$ = 64
filestream$ = 72
pX$ = 80
unz64local_getShort PROC				; COMDAT

; 242  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 243  :     uLong x ;
; 244  :     int i = 0;

  00013	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0

; 245  :     int err;
; 246  : 
; 247  :     err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  0001b	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  00020	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  00025	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0002a	e8 00 00 00 00	 call	 unz64local_getByte
  0002f	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax

; 248  :     x = (uLong)i;

  00033	8b 44 24 24	 mov	 eax, DWORD PTR i$[rsp]
  00037	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 249  : 
; 250  :     if (err==UNZ_OK)

  0003b	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  00040	75 18		 jne	 SHORT $LN3@unz64local@5

; 251  :         err = unz64local_getByte(pzlib_filefunc_def,filestream,&i);

  00042	4c 8d 44 24 24	 lea	 r8, QWORD PTR i$[rsp]
  00047	48 8b 54 24 48	 mov	 rdx, QWORD PTR filestream$[rsp]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00051	e8 00 00 00 00	 call	 unz64local_getByte
  00056	89 44 24 28	 mov	 DWORD PTR err$[rsp], eax
$LN3@unz64local@5:

; 252  :     x |= ((uLong)i)<<8;

  0005a	8b 4c 24 24	 mov	 ecx, DWORD PTR i$[rsp]
  0005e	c1 e1 08	 shl	 ecx, 8
  00061	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00065	0b c1		 or	 eax, ecx
  00067	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 253  : 
; 254  :     if (err==UNZ_OK)

  0006b	83 7c 24 28 00	 cmp	 DWORD PTR err$[rsp], 0
  00070	75 0d		 jne	 SHORT $LN2@unz64local@5

; 255  :         *pX = x;

  00072	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pX$[rsp]
  00077	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0007b	89 01		 mov	 DWORD PTR [rcx], eax

; 256  :     else

  0007d	eb 0b		 jmp	 SHORT $LN1@unz64local@5
$LN2@unz64local@5:

; 257  :         *pX = 0;

  0007f	48 8b 44 24 50	 mov	 rax, QWORD PTR pX$[rsp]
  00084	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@unz64local@5:

; 258  :     return err;

  0008a	8b 44 24 28	 mov	 eax, DWORD PTR err$[rsp]

; 259  : }

  0008e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00092	c3		 ret	 0
unz64local_getShort ENDP
PUBLIC	unzReadCurrentFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzReadCurrentFile DD imagerel $LN35
	DD	imagerel $LN35+1392
	DD	imagerel $unwind$unzReadCurrentFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzReadCurrentFile DD 021601H
	DD	0110116H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzReadCurrentFile
_TEXT	SEGMENT
s$ = 32
pfile_in_zip_read_info$ = 40
iRead$ = 48
err$ = 52
uReadThis$80786 = 56
i$80797 = 60
uDoCopy$80796 = 64
bufBefore$80809 = 72
uOutThis$80810 = 80
flush$80811 = 88
uTotalOutAfter$80808 = 96
uTotalOutBefore$80807 = 104
tv172 = 112
tv251 = 116
file$ = 144
buf$ = 152
len$ = 160
unzReadCurrentFile PROC					; COMDAT

; 1685 : {

$LN35:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 1686 :     int err=UNZ_OK;

  00016	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 1687 :     uInt iRead = 0;

  0001e	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR iRead$[rsp], 0

; 1688 :     unz64_s* s;
; 1689 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1690 :     if (file==NULL)

  00026	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR file$[rsp], 0
  0002f	75 0a		 jne	 SHORT $LN28@unzReadCur

; 1691 :         return UNZ_PARAMERROR;

  00031	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00036	e9 2d 05 00 00	 jmp	 $LN29@unzReadCur
$LN28@unzReadCur:

; 1692 :     s=(unz64_s*)file;

  0003b	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR file$[rsp]
  00043	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 1693 :     pfile_in_zip_read_info=s->pfile_in_zip_read;

  00048	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0004d	48 8b 80 10 01
	00 00		 mov	 rax, QWORD PTR [rax+272]
  00054	48 89 44 24 28	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1694 : 
; 1695 :     if (pfile_in_zip_read_info==NULL)

  00059	48 83 7c 24 28
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  0005f	75 0a		 jne	 SHORT $LN27@unzReadCur

; 1696 :         return UNZ_PARAMERROR;

  00061	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00066	e9 fd 04 00 00	 jmp	 $LN29@unzReadCur
$LN27@unzReadCur:

; 1697 : 
; 1698 : 
; 1699 :     if ((pfile_in_zip_read_info->read_buffer == NULL))

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	75 0a		 jne	 SHORT $LN26@unzReadCur

; 1700 :         return UNZ_END_OF_LIST_OF_FILE;

  00076	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  0007b	e9 e8 04 00 00	 jmp	 $LN29@unzReadCur
$LN26@unzReadCur:

; 1701 :     if (len==0)

  00080	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR len$[rsp], 0
  00088	75 07		 jne	 SHORT $LN25@unzReadCur

; 1702 :         return 0;

  0008a	33 c0		 xor	 eax, eax
  0008c	e9 d7 04 00 00	 jmp	 $LN29@unzReadCur
$LN25@unzReadCur:

; 1703 : 
; 1704 :     pfile_in_zip_read_info->stream.next_out = (Bytef*)buf;

  00091	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00096	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR buf$[rsp]
  0009e	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1705 : 
; 1706 :     pfile_in_zip_read_info->stream.avail_out = (uInt)len;

  000a2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000a7	8b 84 24 a0 00
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  000ae	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 1707 : 
; 1708 :     if ((len>pfile_in_zip_read_info->rest_read_uncompressed) &&
; 1709 :         (!(pfile_in_zip_read_info->raw)))

  000b1	8b 8c 24 a0 00
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  000b8	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000bd	48 3b 88 a0 00
	00 00		 cmp	 rcx, QWORD PTR [rax+160]
  000c4	76 21		 jbe	 SHORT $LN24@unzReadCur
  000c6	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000cb	83 b8 18 01 00
	00 00		 cmp	 DWORD PTR [rax+280], 0
  000d2	75 13		 jne	 SHORT $LN24@unzReadCur

; 1710 :         pfile_in_zip_read_info->stream.avail_out =
; 1711 :             (uInt)pfile_in_zip_read_info->rest_read_uncompressed;

  000d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000d9	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000de	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [rax+160]
  000e4	89 41 20	 mov	 DWORD PTR [rcx+32], eax
$LN24@unzReadCur:

; 1712 : 
; 1713 :     if ((len>pfile_in_zip_read_info->rest_read_compressed+
; 1714 :            pfile_in_zip_read_info->stream.avail_in) &&
; 1715 :          (pfile_in_zip_read_info->raw))

  000e7	8b 94 24 a0 00
	00 00		 mov	 edx, DWORD PTR len$[rsp]
  000ee	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000f3	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000f6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000fb	48 03 81 98 00
	00 00		 add	 rax, QWORD PTR [rcx+152]
  00102	48 3b d0	 cmp	 rdx, rax
  00105	76 29		 jbe	 SHORT $LN23@unzReadCur
  00107	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0010c	83 b8 18 01 00
	00 00		 cmp	 DWORD PTR [rax+280], 0
  00113	74 1b		 je	 SHORT $LN23@unzReadCur

; 1716 :         pfile_in_zip_read_info->stream.avail_out =
; 1717 :             (uInt)pfile_in_zip_read_info->rest_read_compressed+
; 1718 :             pfile_in_zip_read_info->stream.avail_in;

  00115	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0011a	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [rax+152]
  00120	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00125	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  00128	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0012d	89 48 20	 mov	 DWORD PTR [rax+32], ecx
$LN23@unzReadCur:
$LN22@unzReadCur:

; 1719 : 
; 1720 :     while (pfile_in_zip_read_info->stream.avail_out>0)

  00130	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00135	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  00139	0f 86 18 04 00
	00		 jbe	 $LN21@unzReadCur

; 1721 :     {
; 1722 :         if ((pfile_in_zip_read_info->stream.avail_in==0) &&
; 1723 :             (pfile_in_zip_read_info->rest_read_compressed>0))

  0013f	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00144	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00148	0f 85 1f 01 00
	00		 jne	 $LN20@unzReadCur
  0014e	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00153	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  0015b	0f 86 0c 01 00
	00		 jbe	 $LN20@unzReadCur

; 1724 :         {
; 1725 :             uInt uReadThis = UNZ_BUFSIZE;

  00161	c7 44 24 38 00
	40 00 00	 mov	 DWORD PTR uReadThis$80786[rsp], 16384 ; 00004000H

; 1726 :             if (pfile_in_zip_read_info->rest_read_compressed<uReadThis)

  00169	8b 4c 24 38	 mov	 ecx, DWORD PTR uReadThis$80786[rsp]
  0016d	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00172	48 39 88 98 00
	00 00		 cmp	 QWORD PTR [rax+152], rcx
  00179	73 0f		 jae	 SHORT $LN19@unzReadCur

; 1727 :                 uReadThis = (uInt)pfile_in_zip_read_info->rest_read_compressed;

  0017b	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00180	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [rax+152]
  00186	89 44 24 38	 mov	 DWORD PTR uReadThis$80786[rsp], eax
$LN19@unzReadCur:

; 1728 :             if (uReadThis == 0)

  0018a	83 7c 24 38 00	 cmp	 DWORD PTR uReadThis$80786[rsp], 0
  0018f	75 07		 jne	 SHORT $LN18@unzReadCur

; 1729 :                 return UNZ_EOF;

  00191	33 c0		 xor	 eax, eax
  00193	e9 d0 03 00 00	 jmp	 $LN29@unzReadCur
$LN18@unzReadCur:

; 1730 :             if (ZSEEK64(pfile_in_zip_read_info->z_filefunc,
; 1731 :                       pfile_in_zip_read_info->filestream,
; 1732 :                       pfile_in_zip_read_info->pos_in_zipfile +
; 1733 :                          pfile_in_zip_read_info->byte_before_the_zipfile,
; 1734 :                          ZLIB_FILEFUNC_SEEK_SET)!=0)

  00198	4c 8b 44 24 28	 mov	 r8, QWORD PTR pfile_in_zip_read_info$[rsp]
  0019d	4d 8b 40 60	 mov	 r8, QWORD PTR [r8+96]
  001a1	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  001a6	4c 03 80 10 01
	00 00		 add	 r8, QWORD PTR [rax+272]
  001ad	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  001b2	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  001b9	45 33 c9	 xor	 r9d, r9d
  001bc	48 8b 54 24 28	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  001c1	48 8b 92 00 01
	00 00		 mov	 rdx, QWORD PTR [rdx+256]
  001c8	e8 00 00 00 00	 call	 call_zseek64
  001cd	85 c0		 test	 eax, eax
  001cf	74 0a		 je	 SHORT $LN17@unzReadCur

; 1735 :                 return UNZ_ERRNO;

  001d1	b8 ff ff ff ff	 mov	 eax, -1
  001d6	e9 8d 03 00 00	 jmp	 $LN29@unzReadCur
$LN17@unzReadCur:

; 1736 :             if (ZREAD64(pfile_in_zip_read_info->z_filefunc,
; 1737 :                       pfile_in_zip_read_info->filestream,
; 1738 :                       pfile_in_zip_read_info->read_buffer,
; 1739 :                       uReadThis)!=uReadThis)

  001db	44 8b 4c 24 38	 mov	 r9d, DWORD PTR uReadThis$80786[rsp]
  001e0	4c 8b 44 24 28	 mov	 r8, QWORD PTR pfile_in_zip_read_info$[rsp]
  001e5	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  001e8	48 8b 54 24 28	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  001ed	48 8b 92 00 01
	00 00		 mov	 rdx, QWORD PTR [rdx+256]
  001f4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  001f9	48 8b 89 e0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+224]
  00200	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00205	ff 90 b0 00 00
	00		 call	 QWORD PTR [rax+176]
  0020b	3b 44 24 38	 cmp	 eax, DWORD PTR uReadThis$80786[rsp]
  0020f	74 0a		 je	 SHORT $LN16@unzReadCur

; 1740 :                 return UNZ_ERRNO;

  00211	b8 ff ff ff ff	 mov	 eax, -1
  00216	e9 4d 03 00 00	 jmp	 $LN29@unzReadCur
$LN16@unzReadCur:

; 1741 : 
; 1742 : 
; 1743 : #            ifndef NOUNCRYPT
; 1744 :             if(s->encrypted)
; 1745 :             {
; 1746 :                 uInt i;
; 1747 :                 for(i=0;i<uReadThis;i++)
; 1748 :                   pfile_in_zip_read_info->read_buffer[i] =
; 1749 :                       zdecode(s->keys,s->pcrc_32_tab,
; 1750 :                               pfile_in_zip_read_info->read_buffer[i]);
; 1751 :             }
; 1752 : #            endif
; 1753 : 
; 1754 : 
; 1755 :             pfile_in_zip_read_info->pos_in_zipfile += uReadThis;

  0021b	8b 4c 24 38	 mov	 ecx, DWORD PTR uReadThis$80786[rsp]
  0021f	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00224	48 03 48 60	 add	 rcx, QWORD PTR [rax+96]
  00228	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0022d	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 1756 : 
; 1757 :             pfile_in_zip_read_info->rest_read_compressed-=uReadThis;

  00231	8b 44 24 38	 mov	 eax, DWORD PTR uReadThis$80786[rsp]
  00235	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0023a	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00241	48 2b c8	 sub	 rcx, rax
  00244	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00249	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx

; 1758 : 
; 1759 :             pfile_in_zip_read_info->stream.next_in =
; 1760 :                 (Bytef*)pfile_in_zip_read_info->read_buffer;

  00250	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00255	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0025a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0025d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1761 :             pfile_in_zip_read_info->stream.avail_in = (uInt)uReadThis;

  00261	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00266	8b 44 24 38	 mov	 eax, DWORD PTR uReadThis$80786[rsp]
  0026a	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN20@unzReadCur:

; 1762 :         }
; 1763 : 
; 1764 :         if ((pfile_in_zip_read_info->compression_method==0) || (pfile_in_zip_read_info->raw))

  0026d	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00272	83 b8 08 01 00
	00 00		 cmp	 DWORD PTR [rax+264], 0
  00279	74 12		 je	 SHORT $LN14@unzReadCur
  0027b	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00280	83 b8 18 01 00
	00 00		 cmp	 DWORD PTR [rax+280], 0
  00287	0f 84 93 01 00
	00		 je	 $LN15@unzReadCur
$LN14@unzReadCur:

; 1765 :         {
; 1766 :             uInt uDoCopy,i ;
; 1767 : 
; 1768 :             if ((pfile_in_zip_read_info->stream.avail_in == 0) &&
; 1769 :                 (pfile_in_zip_read_info->rest_read_compressed == 0))

  0028d	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00292	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00296	75 31		 jne	 SHORT $LN13@unzReadCur
  00298	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0029d	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  002a5	75 22		 jne	 SHORT $LN13@unzReadCur

; 1770 :                 return (iRead==0) ? UNZ_EOF : iRead;

  002a7	83 7c 24 30 00	 cmp	 DWORD PTR iRead$[rsp], 0
  002ac	75 0a		 jne	 SHORT $LN31@unzReadCur
  002ae	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR tv172[rsp], 0
  002b6	eb 08		 jmp	 SHORT $LN32@unzReadCur
$LN31@unzReadCur:
  002b8	8b 44 24 30	 mov	 eax, DWORD PTR iRead$[rsp]
  002bc	89 44 24 70	 mov	 DWORD PTR tv172[rsp], eax
$LN32@unzReadCur:
  002c0	8b 44 24 70	 mov	 eax, DWORD PTR tv172[rsp]
  002c4	e9 9f 02 00 00	 jmp	 $LN29@unzReadCur
$LN13@unzReadCur:

; 1771 : 
; 1772 :             if (pfile_in_zip_read_info->stream.avail_out <
; 1773 :                             pfile_in_zip_read_info->stream.avail_in)

  002c9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  002ce	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  002d3	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  002d6	39 41 20	 cmp	 DWORD PTR [rcx+32], eax
  002d9	73 0e		 jae	 SHORT $LN12@unzReadCur

; 1774 :                 uDoCopy = pfile_in_zip_read_info->stream.avail_out ;

  002db	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  002e0	8b 40 20	 mov	 eax, DWORD PTR [rax+32]
  002e3	89 44 24 40	 mov	 DWORD PTR uDoCopy$80796[rsp], eax

; 1775 :             else

  002e7	eb 0c		 jmp	 SHORT $LN11@unzReadCur
$LN12@unzReadCur:

; 1776 :                 uDoCopy = pfile_in_zip_read_info->stream.avail_in ;

  002e9	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  002ee	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  002f1	89 44 24 40	 mov	 DWORD PTR uDoCopy$80796[rsp], eax
$LN11@unzReadCur:

; 1777 : 
; 1778 :             for (i=0;i<uDoCopy;i++)

  002f5	c7 44 24 3c 00
	00 00 00	 mov	 DWORD PTR i$80797[rsp], 0
  002fd	eb 0b		 jmp	 SHORT $LN10@unzReadCur
$LN9@unzReadCur:
  002ff	8b 44 24 3c	 mov	 eax, DWORD PTR i$80797[rsp]
  00303	83 c0 01	 add	 eax, 1
  00306	89 44 24 3c	 mov	 DWORD PTR i$80797[rsp], eax
$LN10@unzReadCur:
  0030a	8b 44 24 40	 mov	 eax, DWORD PTR uDoCopy$80796[rsp]
  0030e	39 44 24 3c	 cmp	 DWORD PTR i$80797[rsp], eax
  00312	73 25		 jae	 SHORT $LN8@unzReadCur

; 1779 :                 *(pfile_in_zip_read_info->stream.next_out+i) =
; 1780 :                         *(pfile_in_zip_read_info->stream.next_in+i);

  00314	44 8b 44 24 3c	 mov	 r8d, DWORD PTR i$80797[rsp]
  00319	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0031e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00322	8b 54 24 3c	 mov	 edx, DWORD PTR i$80797[rsp]
  00326	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0032b	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0032f	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00334	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
  00337	eb c6		 jmp	 SHORT $LN9@unzReadCur
$LN8@unzReadCur:

; 1781 : 
; 1782 :             pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uDoCopy;

  00339	8b 4c 24 40	 mov	 ecx, DWORD PTR uDoCopy$80796[rsp]
  0033d	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00342	48 03 88 88 00
	00 00		 add	 rcx, QWORD PTR [rax+136]
  00349	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0034e	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 1783 : 
; 1784 :             pfile_in_zip_read_info->crc32 = crc32(pfile_in_zip_read_info->crc32,
; 1785 :                                 pfile_in_zip_read_info->stream.next_out,
; 1786 :                                 uDoCopy);

  00355	44 8b 44 24 40	 mov	 r8d, DWORD PTR uDoCopy$80796[rsp]
  0035a	48 8b 54 24 28	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0035f	48 8b 52 18	 mov	 rdx, QWORD PTR [rdx+24]
  00363	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00368	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [rax+144]
  0036e	e8 00 00 00 00	 call	 crc32
  00373	44 8b d8	 mov	 r11d, eax
  00376	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0037b	44 89 98 90 00
	00 00		 mov	 DWORD PTR [rax+144], r11d

; 1787 :             pfile_in_zip_read_info->rest_read_uncompressed-=uDoCopy;

  00382	8b 44 24 40	 mov	 eax, DWORD PTR uDoCopy$80796[rsp]
  00386	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0038b	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  00392	48 2b c8	 sub	 rcx, rax
  00395	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0039a	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1788 :             pfile_in_zip_read_info->stream.avail_in -= uDoCopy;

  003a1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  003a6	8b 44 24 40	 mov	 eax, DWORD PTR uDoCopy$80796[rsp]
  003aa	8b 49 10	 mov	 ecx, DWORD PTR [rcx+16]
  003ad	2b c8		 sub	 ecx, eax
  003af	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003b4	89 48 10	 mov	 DWORD PTR [rax+16], ecx

; 1789 :             pfile_in_zip_read_info->stream.avail_out -= uDoCopy;

  003b7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  003bc	8b 44 24 40	 mov	 eax, DWORD PTR uDoCopy$80796[rsp]
  003c0	8b 49 20	 mov	 ecx, DWORD PTR [rcx+32]
  003c3	2b c8		 sub	 ecx, eax
  003c5	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003ca	89 48 20	 mov	 DWORD PTR [rax+32], ecx

; 1790 :             pfile_in_zip_read_info->stream.next_out += uDoCopy;

  003cd	8b 4c 24 40	 mov	 ecx, DWORD PTR uDoCopy$80796[rsp]
  003d1	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003d6	48 03 48 18	 add	 rcx, QWORD PTR [rax+24]
  003da	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003df	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 1791 :             pfile_in_zip_read_info->stream.next_in += uDoCopy;

  003e3	8b 4c 24 40	 mov	 ecx, DWORD PTR uDoCopy$80796[rsp]
  003e7	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003ec	48 03 48 08	 add	 rcx, QWORD PTR [rax+8]
  003f0	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003f5	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1792 :             pfile_in_zip_read_info->stream.total_out += uDoCopy;

  003f9	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  003fe	8b 48 24	 mov	 ecx, DWORD PTR [rax+36]
  00401	03 4c 24 40	 add	 ecx, DWORD PTR uDoCopy$80796[rsp]
  00405	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0040a	89 48 24	 mov	 DWORD PTR [rax+36], ecx

; 1793 :             iRead += uDoCopy;

  0040d	8b 4c 24 40	 mov	 ecx, DWORD PTR uDoCopy$80796[rsp]
  00411	8b 44 24 30	 mov	 eax, DWORD PTR iRead$[rsp]
  00415	03 c1		 add	 eax, ecx
  00417	89 44 24 30	 mov	 DWORD PTR iRead$[rsp], eax
  0041b	e9 32 01 00 00	 jmp	 $LN7@unzReadCur
$LN15@unzReadCur:

; 1794 :         }
; 1795 :         else if (pfile_in_zip_read_info->compression_method==Z_BZIP2ED)

  00420	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00425	83 b8 08 01 00
	00 0c		 cmp	 DWORD PTR [rax+264], 12
  0042c	75 05		 jne	 SHORT $LN6@unzReadCur

; 1796 :         {
; 1797 : #ifdef HAVE_BZIP2
; 1798 :             uLong uTotalOutBefore,uTotalOutAfter;
; 1799 :             const Bytef *bufBefore;
; 1800 :             uLong uOutThis;
; 1801 : 
; 1802 :             pfile_in_zip_read_info->bstream.next_in        = (char*)pfile_in_zip_read_info->stream.next_in;
; 1803 :             pfile_in_zip_read_info->bstream.avail_in       = pfile_in_zip_read_info->stream.avail_in;
; 1804 :             pfile_in_zip_read_info->bstream.total_in_lo32  = pfile_in_zip_read_info->stream.total_in;
; 1805 :             pfile_in_zip_read_info->bstream.total_in_hi32  = 0;
; 1806 :             pfile_in_zip_read_info->bstream.next_out       = (char*)pfile_in_zip_read_info->stream.next_out;
; 1807 :             pfile_in_zip_read_info->bstream.avail_out      = pfile_in_zip_read_info->stream.avail_out;
; 1808 :             pfile_in_zip_read_info->bstream.total_out_lo32 = pfile_in_zip_read_info->stream.total_out;
; 1809 :             pfile_in_zip_read_info->bstream.total_out_hi32 = 0;
; 1810 : 
; 1811 :             uTotalOutBefore = pfile_in_zip_read_info->bstream.total_out_lo32;
; 1812 :             bufBefore = (const Bytef *)pfile_in_zip_read_info->bstream.next_out;
; 1813 : 
; 1814 :             err=BZ2_bzDecompress(&pfile_in_zip_read_info->bstream);
; 1815 : 
; 1816 :             uTotalOutAfter = pfile_in_zip_read_info->bstream.total_out_lo32;
; 1817 :             uOutThis = uTotalOutAfter-uTotalOutBefore;
; 1818 : 
; 1819 :             pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uOutThis;
; 1820 : 
; 1821 :             pfile_in_zip_read_info->crc32 = crc32(pfile_in_zip_read_info->crc32,bufBefore, (uInt)(uOutThis));
; 1822 :             pfile_in_zip_read_info->rest_read_uncompressed -= uOutThis;
; 1823 :             iRead += (uInt)(uTotalOutAfter - uTotalOutBefore);
; 1824 : 
; 1825 :             pfile_in_zip_read_info->stream.next_in   = (Bytef*)pfile_in_zip_read_info->bstream.next_in;
; 1826 :             pfile_in_zip_read_info->stream.avail_in  = pfile_in_zip_read_info->bstream.avail_in;
; 1827 :             pfile_in_zip_read_info->stream.total_in  = pfile_in_zip_read_info->bstream.total_in_lo32;
; 1828 :             pfile_in_zip_read_info->stream.next_out  = (Bytef*)pfile_in_zip_read_info->bstream.next_out;
; 1829 :             pfile_in_zip_read_info->stream.avail_out = pfile_in_zip_read_info->bstream.avail_out;
; 1830 :             pfile_in_zip_read_info->stream.total_out = pfile_in_zip_read_info->bstream.total_out_lo32;
; 1831 : 
; 1832 :             if (err==BZ_STREAM_END)
; 1833 :               return (iRead==0) ? UNZ_EOF : iRead;
; 1834 :             if (err!=BZ_OK)
; 1835 :               break;
; 1836 : #endif
; 1837 :         } // end Z_BZIP2ED
; 1838 :         else

  0042e	e9 1f 01 00 00	 jmp	 $LN5@unzReadCur
$LN6@unzReadCur:

; 1839 :         {
; 1840 :             ZPOS64_T uTotalOutBefore,uTotalOutAfter;
; 1841 :             const Bytef *bufBefore;
; 1842 :             ZPOS64_T uOutThis;
; 1843 :             int flush=Z_SYNC_FLUSH;

  00433	c7 44 24 58 02
	00 00 00	 mov	 DWORD PTR flush$80811[rsp], 2

; 1844 : 
; 1845 :             uTotalOutBefore = pfile_in_zip_read_info->stream.total_out;

  0043b	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00440	8b 40 24	 mov	 eax, DWORD PTR [rax+36]
  00443	48 89 44 24 68	 mov	 QWORD PTR uTotalOutBefore$80807[rsp], rax

; 1846 :             bufBefore = pfile_in_zip_read_info->stream.next_out;

  00448	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0044d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00451	48 89 44 24 48	 mov	 QWORD PTR bufBefore$80809[rsp], rax

; 1847 : 
; 1848 :             /*
; 1849 :             if ((pfile_in_zip_read_info->rest_read_uncompressed ==
; 1850 :                      pfile_in_zip_read_info->stream.avail_out) &&
; 1851 :                 (pfile_in_zip_read_info->rest_read_compressed == 0))
; 1852 :                 flush = Z_FINISH;
; 1853 :             */
; 1854 :             err=inflate(&pfile_in_zip_read_info->stream,flush);

  00456	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0045b	48 83 c1 08	 add	 rcx, 8
  0045f	8b 54 24 58	 mov	 edx, DWORD PTR flush$80811[rsp]
  00463	e8 00 00 00 00	 call	 inflate
  00468	89 44 24 34	 mov	 DWORD PTR err$[rsp], eax

; 1855 : 
; 1856 :             if ((err>=0) && (pfile_in_zip_read_info->stream.msg!=NULL))

  0046c	83 7c 24 34 00	 cmp	 DWORD PTR err$[rsp], 0
  00471	7c 14		 jl	 SHORT $LN4@unzReadCur
  00473	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00478	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  0047d	74 08		 je	 SHORT $LN4@unzReadCur

; 1857 :               err = Z_DATA_ERROR;

  0047f	c7 44 24 34 fd
	ff ff ff	 mov	 DWORD PTR err$[rsp], -3
$LN4@unzReadCur:

; 1858 : 
; 1859 :             uTotalOutAfter = pfile_in_zip_read_info->stream.total_out;

  00487	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0048c	8b 40 24	 mov	 eax, DWORD PTR [rax+36]
  0048f	48 89 44 24 60	 mov	 QWORD PTR uTotalOutAfter$80808[rsp], rax

; 1860 :             uOutThis = uTotalOutAfter-uTotalOutBefore;

  00494	48 8b 4c 24 68	 mov	 rcx, QWORD PTR uTotalOutBefore$80807[rsp]
  00499	48 8b 44 24 60	 mov	 rax, QWORD PTR uTotalOutAfter$80808[rsp]
  0049e	48 2b c1	 sub	 rax, rcx
  004a1	48 89 44 24 50	 mov	 QWORD PTR uOutThis$80810[rsp], rax

; 1861 : 
; 1862 :             pfile_in_zip_read_info->total_out_64 = pfile_in_zip_read_info->total_out_64 + uOutThis;

  004a6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  004ab	48 8b 89 88 00
	00 00		 mov	 rcx, QWORD PTR [rcx+136]
  004b2	48 03 4c 24 50	 add	 rcx, QWORD PTR uOutThis$80810[rsp]
  004b7	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  004bc	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 1863 : 
; 1864 :             pfile_in_zip_read_info->crc32 =
; 1865 :                 crc32(pfile_in_zip_read_info->crc32,bufBefore,
; 1866 :                         (uInt)(uOutThis));

  004c3	44 8b 44 24 50	 mov	 r8d, DWORD PTR uOutThis$80810[rsp]
  004c8	48 8b 54 24 48	 mov	 rdx, QWORD PTR bufBefore$80809[rsp]
  004cd	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  004d2	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [rax+144]
  004d8	e8 00 00 00 00	 call	 crc32
  004dd	44 8b d8	 mov	 r11d, eax
  004e0	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  004e5	44 89 98 90 00
	00 00		 mov	 DWORD PTR [rax+144], r11d

; 1867 : 
; 1868 :             pfile_in_zip_read_info->rest_read_uncompressed -=
; 1869 :                 uOutThis;

  004ec	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  004f1	48 8b 44 24 50	 mov	 rax, QWORD PTR uOutThis$80810[rsp]
  004f6	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  004fd	48 2b c8	 sub	 rcx, rax
  00500	48 8b 44 24 28	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00505	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1870 : 
; 1871 :             iRead += (uInt)(uTotalOutAfter - uTotalOutBefore);

  0050c	48 8b 44 24 68	 mov	 rax, QWORD PTR uTotalOutBefore$80807[rsp]
  00511	48 8b 4c 24 60	 mov	 rcx, QWORD PTR uTotalOutAfter$80808[rsp]
  00516	48 2b c8	 sub	 rcx, rax
  00519	8b 44 24 30	 mov	 eax, DWORD PTR iRead$[rsp]
  0051d	03 c1		 add	 eax, ecx
  0051f	89 44 24 30	 mov	 DWORD PTR iRead$[rsp], eax

; 1872 : 
; 1873 :             if (err==Z_STREAM_END)

  00523	83 7c 24 34 01	 cmp	 DWORD PTR err$[rsp], 1
  00528	75 1f		 jne	 SHORT $LN3@unzReadCur

; 1874 :                 return (iRead==0) ? UNZ_EOF : iRead;

  0052a	83 7c 24 30 00	 cmp	 DWORD PTR iRead$[rsp], 0
  0052f	75 0a		 jne	 SHORT $LN33@unzReadCur
  00531	c7 44 24 74 00
	00 00 00	 mov	 DWORD PTR tv251[rsp], 0
  00539	eb 08		 jmp	 SHORT $LN34@unzReadCur
$LN33@unzReadCur:
  0053b	8b 44 24 30	 mov	 eax, DWORD PTR iRead$[rsp]
  0053f	89 44 24 74	 mov	 DWORD PTR tv251[rsp], eax
$LN34@unzReadCur:
  00543	8b 44 24 74	 mov	 eax, DWORD PTR tv251[rsp]
  00547	eb 1f		 jmp	 SHORT $LN29@unzReadCur
$LN3@unzReadCur:

; 1875 :             if (err!=Z_OK)

  00549	83 7c 24 34 00	 cmp	 DWORD PTR err$[rsp], 0
  0054e	74 02		 je	 SHORT $LN2@unzReadCur

; 1876 :                 break;

  00550	eb 05		 jmp	 SHORT $LN21@unzReadCur
$LN2@unzReadCur:
$LN5@unzReadCur:
$LN7@unzReadCur:

; 1877 :         }
; 1878 :     }

  00552	e9 d9 fb ff ff	 jmp	 $LN22@unzReadCur
$LN21@unzReadCur:

; 1879 : 
; 1880 :     if (err==Z_OK)

  00557	83 7c 24 34 00	 cmp	 DWORD PTR err$[rsp], 0
  0055c	75 06		 jne	 SHORT $LN1@unzReadCur

; 1881 :         return iRead;

  0055e	8b 44 24 30	 mov	 eax, DWORD PTR iRead$[rsp]
  00562	eb 04		 jmp	 SHORT $LN29@unzReadCur
$LN1@unzReadCur:

; 1882 :     return err;

  00564	8b 44 24 34	 mov	 eax, DWORD PTR err$[rsp]
$LN29@unzReadCur:

; 1883 : }

  00568	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0056f	c3		 ret	 0
unzReadCurrentFile ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_CheckCurrentFileCoherencyHeader DD imagerel unz64local_CheckCurrentFileCoherencyHeader
	DD	imagerel unz64local_CheckCurrentFileCoherencyHeader+871
	DD	imagerel $unwind$unz64local_CheckCurrentFileCoherencyHeader
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_CheckCurrentFileCoherencyHeader DD 011801H
	DD	08218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_CheckCurrentFileCoherencyHeader
_TEXT	SEGMENT
uData$ = 32
size_extra_field$ = 36
uMagic$ = 40
err$ = 44
size_filename$ = 48
uFlags$ = 52
s$ = 80
piSizeVar$ = 88
poffset_local_extrafield$ = 96
psize_local_extrafield$ = 104
unz64local_CheckCurrentFileCoherencyHeader PROC		; COMDAT

; 1388 : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1389 :     uLong uMagic,uData,uFlags;
; 1390 :     uLong size_filename;
; 1391 :     uLong size_extra_field;
; 1392 :     int err=UNZ_OK;

  00018	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 1393 : 
; 1394 :     *piSizeVar = 0;

  00020	48 8b 44 24 58	 mov	 rax, QWORD PTR piSizeVar$[rsp]
  00025	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1395 :     *poffset_local_extrafield = 0;

  0002b	48 8b 44 24 60	 mov	 rax, QWORD PTR poffset_local_extrafield$[rsp]
  00030	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1396 :     *psize_local_extrafield = 0;

  00037	48 8b 44 24 68	 mov	 rax, QWORD PTR psize_local_extrafield$[rsp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1397 : 
; 1398 :     if (ZSEEK64(s->z_filefunc, s->filestream,s->cur_file_info_internal.offset_curfile +
; 1399 :                                 s->byte_before_the_zipfile,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00042	4c 8b 44 24 50	 mov	 r8, QWORD PTR s$[rsp]
  00047	4d 8b 80 08 01
	00 00		 mov	 r8, QWORD PTR [r8+264]
  0004e	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00053	4c 03 40 78	 add	 r8, QWORD PTR [rax+120]
  00057	45 33 c9	 xor	 r9d, r9d
  0005a	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0005f	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00063	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00068	e8 00 00 00 00	 call	 call_zseek64
  0006d	85 c0		 test	 eax, eax
  0006f	74 0a		 je	 SHORT $LN25@unz64local@6

; 1400 :         return UNZ_ERRNO;

  00071	b8 ff ff ff ff	 mov	 eax, -1
  00076	e9 e7 02 00 00	 jmp	 $LN26@unz64local@6
$LN25@unz64local@6:

; 1401 : 
; 1402 : 
; 1403 :     if (err==UNZ_OK)

  0007b	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00080	75 38		 jne	 SHORT $LN24@unz64local@6

; 1404 :     {
; 1405 :         if (unz64local_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)

  00082	4c 8d 44 24 28	 lea	 r8, QWORD PTR uMagic$[rsp]
  00087	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0008c	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00090	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00095	e8 00 00 00 00	 call	 unz64local_getLong
  0009a	85 c0		 test	 eax, eax
  0009c	74 0a		 je	 SHORT $LN23@unz64local@6

; 1406 :             err=UNZ_ERRNO;

  0009e	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  000a6	eb 12		 jmp	 SHORT $LN22@unz64local@6
$LN23@unz64local@6:

; 1407 :         else if (uMagic!=0x04034b50)

  000a8	81 7c 24 28 50
	4b 03 04	 cmp	 DWORD PTR uMagic$[rsp], 67324752 ; 04034b50H
  000b0	74 08		 je	 SHORT $LN21@unz64local@6

; 1408 :             err=UNZ_BADZIPFILE;

  000b2	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN21@unz64local@6:
$LN22@unz64local@6:
$LN24@unz64local@6:

; 1409 :     }
; 1410 : 
; 1411 :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)

  000ba	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  000bf	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  000c4	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  000c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  000cd	e8 00 00 00 00	 call	 unz64local_getShort
  000d2	85 c0		 test	 eax, eax
  000d4	74 08		 je	 SHORT $LN20@unz64local@6

; 1412 :         err=UNZ_ERRNO;

  000d6	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN20@unz64local@6:

; 1413 : /*
; 1414 :     else if ((err==UNZ_OK) && (uData!=s->cur_file_info.wVersion))
; 1415 :         err=UNZ_BADZIPFILE;
; 1416 : */
; 1417 :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&uFlags) != UNZ_OK)

  000de	4c 8d 44 24 34	 lea	 r8, QWORD PTR uFlags$[rsp]
  000e3	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  000e8	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  000ec	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  000f1	e8 00 00 00 00	 call	 unz64local_getShort
  000f6	85 c0		 test	 eax, eax
  000f8	74 08		 je	 SHORT $LN19@unz64local@6

; 1418 :         err=UNZ_ERRNO;

  000fa	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN19@unz64local@6:

; 1419 : 
; 1420 :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&uData) != UNZ_OK)

  00102	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  00107	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0010c	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00110	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00115	e8 00 00 00 00	 call	 unz64local_getShort
  0011a	85 c0		 test	 eax, eax
  0011c	74 0a		 je	 SHORT $LN18@unz64local@6

; 1421 :         err=UNZ_ERRNO;

  0011e	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  00126	eb 20		 jmp	 SHORT $LN17@unz64local@6
$LN18@unz64local@6:

; 1422 :     else if ((err==UNZ_OK) && (uData!=s->cur_file_info.compression_method))

  00128	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  0012d	75 19		 jne	 SHORT $LN16@unz64local@6
  0012f	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00134	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [rax+188]
  0013a	39 44 24 20	 cmp	 DWORD PTR uData$[rsp], eax
  0013e	74 08		 je	 SHORT $LN16@unz64local@6

; 1423 :         err=UNZ_BADZIPFILE;

  00140	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN16@unz64local@6:
$LN17@unz64local@6:

; 1424 : 
; 1425 :     if ((err==UNZ_OK) && (s->cur_file_info.compression_method!=0) &&
; 1426 : /* #ifdef HAVE_BZIP2 */
; 1427 :                          (s->cur_file_info.compression_method!=Z_BZIP2ED) &&
; 1428 : /* #endif */
; 1429 :                          (s->cur_file_info.compression_method!=Z_DEFLATED))

  00148	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  0014d	75 32		 jne	 SHORT $LN15@unz64local@6
  0014f	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00154	83 b8 bc 00 00
	00 00		 cmp	 DWORD PTR [rax+188], 0
  0015b	74 24		 je	 SHORT $LN15@unz64local@6
  0015d	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00162	83 b8 bc 00 00
	00 0c		 cmp	 DWORD PTR [rax+188], 12
  00169	74 16		 je	 SHORT $LN15@unz64local@6
  0016b	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00170	83 b8 bc 00 00
	00 08		 cmp	 DWORD PTR [rax+188], 8
  00177	74 08		 je	 SHORT $LN15@unz64local@6

; 1430 :         err=UNZ_BADZIPFILE;

  00179	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN15@unz64local@6:

; 1431 : 
; 1432 :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* date/time */

  00181	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  00186	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0018b	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0018f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00194	e8 00 00 00 00	 call	 unz64local_getLong
  00199	85 c0		 test	 eax, eax
  0019b	74 08		 je	 SHORT $LN14@unz64local@6

; 1433 :         err=UNZ_ERRNO;

  0019d	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN14@unz64local@6:

; 1434 : 
; 1435 :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* crc */

  001a5	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  001aa	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  001af	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  001b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  001b8	e8 00 00 00 00	 call	 unz64local_getLong
  001bd	85 c0		 test	 eax, eax
  001bf	74 0a		 je	 SHORT $LN13@unz64local@6

; 1436 :         err=UNZ_ERRNO;

  001c1	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  001c9	eb 2b		 jmp	 SHORT $LN12@unz64local@6
$LN13@unz64local@6:

; 1437 :     else if ((err==UNZ_OK) && (uData!=s->cur_file_info.crc) && ((uFlags & 8)==0))

  001cb	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  001d0	75 24		 jne	 SHORT $LN11@unz64local@6
  001d2	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  001d7	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [rax+196]
  001dd	39 44 24 20	 cmp	 DWORD PTR uData$[rsp], eax
  001e1	74 13		 je	 SHORT $LN11@unz64local@6
  001e3	8b 44 24 34	 mov	 eax, DWORD PTR uFlags$[rsp]
  001e7	83 e0 08	 and	 eax, 8
  001ea	85 c0		 test	 eax, eax
  001ec	75 08		 jne	 SHORT $LN11@unz64local@6

; 1438 :         err=UNZ_BADZIPFILE;

  001ee	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN11@unz64local@6:
$LN12@unz64local@6:

; 1439 : 
; 1440 :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size compr */

  001f6	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  001fb	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  00200	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00204	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00209	e8 00 00 00 00	 call	 unz64local_getLong
  0020e	85 c0		 test	 eax, eax
  00210	74 0a		 je	 SHORT $LN10@unz64local@6

; 1441 :         err=UNZ_ERRNO;

  00212	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  0021a	eb 33		 jmp	 SHORT $LN9@unz64local@6
$LN10@unz64local@6:

; 1442 :     else if (uData != 0xFFFFFFFF && (err==UNZ_OK) && (uData!=s->cur_file_info.compressed_size) && ((uFlags & 8)==0))

  0021c	83 7c 24 20 ff	 cmp	 DWORD PTR uData$[rsp], -1 ; ffffffffH
  00221	74 2c		 je	 SHORT $LN8@unz64local@6
  00223	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00228	75 25		 jne	 SHORT $LN8@unz64local@6
  0022a	8b 4c 24 20	 mov	 ecx, DWORD PTR uData$[rsp]
  0022e	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00233	48 3b 88 c8 00
	00 00		 cmp	 rcx, QWORD PTR [rax+200]
  0023a	74 13		 je	 SHORT $LN8@unz64local@6
  0023c	8b 44 24 34	 mov	 eax, DWORD PTR uFlags$[rsp]
  00240	83 e0 08	 and	 eax, 8
  00243	85 c0		 test	 eax, eax
  00245	75 08		 jne	 SHORT $LN8@unz64local@6

; 1443 :         err=UNZ_BADZIPFILE;

  00247	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN8@unz64local@6:
$LN9@unz64local@6:

; 1444 : 
; 1445 :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uData) != UNZ_OK) /* size uncompr */

  0024f	4c 8d 44 24 20	 lea	 r8, QWORD PTR uData$[rsp]
  00254	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  00259	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0025d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00262	e8 00 00 00 00	 call	 unz64local_getLong
  00267	85 c0		 test	 eax, eax
  00269	74 0a		 je	 SHORT $LN7@unz64local@6

; 1446 :         err=UNZ_ERRNO;

  0026b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  00273	eb 33		 jmp	 SHORT $LN6@unz64local@6
$LN7@unz64local@6:

; 1447 :     else if (uData != 0xFFFFFFFF && (err==UNZ_OK) && (uData!=s->cur_file_info.uncompressed_size) && ((uFlags & 8)==0))

  00275	83 7c 24 20 ff	 cmp	 DWORD PTR uData$[rsp], -1 ; ffffffffH
  0027a	74 2c		 je	 SHORT $LN5@unz64local@6
  0027c	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  00281	75 25		 jne	 SHORT $LN5@unz64local@6
  00283	8b 4c 24 20	 mov	 ecx, DWORD PTR uData$[rsp]
  00287	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  0028c	48 3b 88 d0 00
	00 00		 cmp	 rcx, QWORD PTR [rax+208]
  00293	74 13		 je	 SHORT $LN5@unz64local@6
  00295	8b 44 24 34	 mov	 eax, DWORD PTR uFlags$[rsp]
  00299	83 e0 08	 and	 eax, 8
  0029c	85 c0		 test	 eax, eax
  0029e	75 08		 jne	 SHORT $LN5@unz64local@6

; 1448 :         err=UNZ_BADZIPFILE;

  002a0	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN5@unz64local@6:
$LN6@unz64local@6:

; 1449 : 
; 1450 :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&size_filename) != UNZ_OK)

  002a8	4c 8d 44 24 30	 lea	 r8, QWORD PTR size_filename$[rsp]
  002ad	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  002b2	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  002b6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  002bb	e8 00 00 00 00	 call	 unz64local_getShort
  002c0	85 c0		 test	 eax, eax
  002c2	74 0a		 je	 SHORT $LN4@unz64local@6

; 1451 :         err=UNZ_ERRNO;

  002c4	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
  002cc	eb 20		 jmp	 SHORT $LN3@unz64local@6
$LN4@unz64local@6:

; 1452 :     else if ((err==UNZ_OK) && (size_filename!=s->cur_file_info.size_filename))

  002ce	83 7c 24 2c 00	 cmp	 DWORD PTR err$[rsp], 0
  002d3	75 19		 jne	 SHORT $LN2@unz64local@6
  002d5	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  002da	8b 80 d8 00 00
	00		 mov	 eax, DWORD PTR [rax+216]
  002e0	39 44 24 30	 cmp	 DWORD PTR size_filename$[rsp], eax
  002e4	74 08		 je	 SHORT $LN2@unz64local@6

; 1453 :         err=UNZ_BADZIPFILE;

  002e6	c7 44 24 2c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN2@unz64local@6:
$LN3@unz64local@6:

; 1454 : 
; 1455 :     *piSizeVar += (uInt)size_filename;

  002ee	48 8b 44 24 58	 mov	 rax, QWORD PTR piSizeVar$[rsp]
  002f3	8b 08		 mov	 ecx, DWORD PTR [rax]
  002f5	03 4c 24 30	 add	 ecx, DWORD PTR size_filename$[rsp]
  002f9	48 8b 44 24 58	 mov	 rax, QWORD PTR piSizeVar$[rsp]
  002fe	89 08		 mov	 DWORD PTR [rax], ecx

; 1456 : 
; 1457 :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&size_extra_field) != UNZ_OK)

  00300	4c 8d 44 24 24	 lea	 r8, QWORD PTR size_extra_field$[rsp]
  00305	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0030a	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0030e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00313	e8 00 00 00 00	 call	 unz64local_getShort
  00318	85 c0		 test	 eax, eax
  0031a	74 08		 je	 SHORT $LN1@unz64local@6

; 1458 :         err=UNZ_ERRNO;

  0031c	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN1@unz64local@6:

; 1459 :     *poffset_local_extrafield= s->cur_file_info_internal.offset_curfile +
; 1460 :                                     SIZEZIPLOCALHEADER + size_filename;

  00324	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00329	48 8b 89 08 01
	00 00		 mov	 rcx, QWORD PTR [rcx+264]
  00330	8b 44 24 30	 mov	 eax, DWORD PTR size_filename$[rsp]
  00334	48 8d 4c 01 1e	 lea	 rcx, QWORD PTR [rcx+rax+30]
  00339	48 8b 44 24 60	 mov	 rax, QWORD PTR poffset_local_extrafield$[rsp]
  0033e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1461 :     *psize_local_extrafield = (uInt)size_extra_field;

  00341	48 8b 4c 24 68	 mov	 rcx, QWORD PTR psize_local_extrafield$[rsp]
  00346	8b 44 24 24	 mov	 eax, DWORD PTR size_extra_field$[rsp]
  0034a	89 01		 mov	 DWORD PTR [rcx], eax

; 1462 : 
; 1463 :     *piSizeVar += (uInt)size_extra_field;

  0034c	48 8b 44 24 58	 mov	 rax, QWORD PTR piSizeVar$[rsp]
  00351	8b 08		 mov	 ecx, DWORD PTR [rax]
  00353	03 4c 24 24	 add	 ecx, DWORD PTR size_extra_field$[rsp]
  00357	48 8b 44 24 58	 mov	 rax, QWORD PTR piSizeVar$[rsp]
  0035c	89 08		 mov	 DWORD PTR [rax], ecx

; 1464 : 
; 1465 :     return err;

  0035e	8b 44 24 2c	 mov	 eax, DWORD PTR err$[rsp]
$LN26@unz64local@6:

; 1466 : }

  00362	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00366	c3		 ret	 0
unz64local_CheckCurrentFileCoherencyHeader ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_GetCurrentFileInfoInternal DD imagerel unz64local_GetCurrentFileInfoInternal
	DD	imagerel unz64local_GetCurrentFileInfoInternal+2258
	DD	imagerel $unwind$unz64local_GetCurrentFileInfoInternal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_GetCurrentFileInfoInternal DD 041d01H
	DD	01b011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_GetCurrentFileInfoInternal
_TEXT	SEGMENT
s$ = 32
uMagic$ = 40
file_info$ = 48
uL$ = 144
lSeek$ = 148
file_info_internal$ = 152
err$ = 160
uSizeRead$80419 = 164
uSizeRead$80426 = 168
acc$80438 = 176
dataSize$80446 = 180
headerId$80445 = 184
uL$80450 = 188
uSizeRead$80470 = 192
file$ = 240
pfile_info$ = 248
pfile_info_internal$ = 256
szFileName$ = 264
fileNameBufferSize$ = 272
extraField$ = 280
extraFieldBufferSize$ = 288
szComment$ = 296
commentBufferSize$ = 304
unz64local_GetCurrentFileInfoInternal PROC		; COMDAT

; 889  : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H

; 890  :     unz64_s* s;
; 891  :     unz_file_info64 file_info;
; 892  :     unz_file_info64_internal file_info_internal;
; 893  :     int err=UNZ_OK;

  0001d	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR err$[rsp], 0

; 894  :     uLong uMagic;
; 895  :     long lSeek=0;

  00028	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR lSeek$[rsp], 0

; 896  :     uLong uL;
; 897  : 
; 898  :     if (file==NULL)

  00033	48 83 bc 24 f0
	00 00 00 00	 cmp	 QWORD PTR file$[rsp], 0
  0003c	75 0a		 jne	 SHORT $LN65@unz64local@7

; 899  :         return UNZ_PARAMERROR;

  0003e	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00043	e9 80 08 00 00	 jmp	 $LN66@unz64local@7
$LN65@unz64local@7:

; 900  :     s=(unz64_s*)file;

  00048	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR file$[rsp]
  00050	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 901  :     if (ZSEEK64(s->z_filefunc, s->filestream,
; 902  :               s->pos_in_central_dir+s->byte_before_the_zipfile,
; 903  :               ZLIB_FILEFUNC_SEEK_SET)!=0)

  00055	4c 8b 44 24 20	 mov	 r8, QWORD PTR s$[rsp]
  0005a	4d 8b 80 88 00
	00 00		 mov	 r8, QWORD PTR [r8+136]
  00061	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00066	4c 03 40 78	 add	 r8, QWORD PTR [rax+120]
  0006a	45 33 c9	 xor	 r9d, r9d
  0006d	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00072	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0007b	e8 00 00 00 00	 call	 call_zseek64
  00080	85 c0		 test	 eax, eax
  00082	74 0b		 je	 SHORT $LN64@unz64local@7

; 904  :         err=UNZ_ERRNO;

  00084	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN64@unz64local@7:

; 905  : 
; 906  : 
; 907  :     /* we check the magic */
; 908  :     if (err==UNZ_OK)

  0008f	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  00097	75 3e		 jne	 SHORT $LN63@unz64local@7

; 909  :     {
; 910  :         if (unz64local_getLong(&s->z_filefunc, s->filestream,&uMagic) != UNZ_OK)

  00099	4c 8d 44 24 28	 lea	 r8, QWORD PTR uMagic$[rsp]
  0009e	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  000a3	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  000a7	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  000ac	e8 00 00 00 00	 call	 unz64local_getLong
  000b1	85 c0		 test	 eax, eax
  000b3	74 0d		 je	 SHORT $LN62@unz64local@7

; 911  :             err=UNZ_ERRNO;

  000b5	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
  000c0	eb 15		 jmp	 SHORT $LN61@unz64local@7
$LN62@unz64local@7:

; 912  :         else if (uMagic!=0x02014b50)

  000c2	81 7c 24 28 50
	4b 01 02	 cmp	 DWORD PTR uMagic$[rsp], 33639248 ; 02014b50H
  000ca	74 0b		 je	 SHORT $LN60@unz64local@7

; 913  :             err=UNZ_BADZIPFILE;

  000cc	c7 84 24 a0 00
	00 00 99 ff ff
	ff		 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN60@unz64local@7:
$LN61@unz64local@7:
$LN63@unz64local@7:

; 914  :     }
; 915  : 
; 916  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.version) != UNZ_OK)

  000d7	4c 8d 44 24 30	 lea	 r8, QWORD PTR file_info$[rsp]
  000dc	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  000e1	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  000e5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  000ea	e8 00 00 00 00	 call	 unz64local_getShort
  000ef	85 c0		 test	 eax, eax
  000f1	74 0b		 je	 SHORT $LN59@unz64local@7

; 917  :         err=UNZ_ERRNO;

  000f3	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN59@unz64local@7:

; 918  : 
; 919  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.version_needed) != UNZ_OK)

  000fe	4c 8d 44 24 34	 lea	 r8, QWORD PTR file_info$[rsp+4]
  00103	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00108	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0010c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00111	e8 00 00 00 00	 call	 unz64local_getShort
  00116	85 c0		 test	 eax, eax
  00118	74 0b		 je	 SHORT $LN58@unz64local@7

; 920  :         err=UNZ_ERRNO;

  0011a	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN58@unz64local@7:

; 921  : 
; 922  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.flag) != UNZ_OK)

  00125	4c 8d 44 24 38	 lea	 r8, QWORD PTR file_info$[rsp+8]
  0012a	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  0012f	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00133	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00138	e8 00 00 00 00	 call	 unz64local_getShort
  0013d	85 c0		 test	 eax, eax
  0013f	74 0b		 je	 SHORT $LN57@unz64local@7

; 923  :         err=UNZ_ERRNO;

  00141	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN57@unz64local@7:

; 924  : 
; 925  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.compression_method) != UNZ_OK)

  0014c	4c 8d 44 24 3c	 lea	 r8, QWORD PTR file_info$[rsp+12]
  00151	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00156	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0015a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0015f	e8 00 00 00 00	 call	 unz64local_getShort
  00164	85 c0		 test	 eax, eax
  00166	74 0b		 je	 SHORT $LN56@unz64local@7

; 926  :         err=UNZ_ERRNO;

  00168	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN56@unz64local@7:

; 927  : 
; 928  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.dosDate) != UNZ_OK)

  00173	4c 8d 44 24 40	 lea	 r8, QWORD PTR file_info$[rsp+16]
  00178	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  0017d	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00181	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00186	e8 00 00 00 00	 call	 unz64local_getLong
  0018b	85 c0		 test	 eax, eax
  0018d	74 0b		 je	 SHORT $LN55@unz64local@7

; 929  :         err=UNZ_ERRNO;

  0018f	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN55@unz64local@7:

; 930  : 
; 931  :     unz64local_DosDateToTmuDate(file_info.dosDate,&file_info.tmu_date);

  0019a	8b 4c 24 40	 mov	 ecx, DWORD PTR file_info$[rsp+16]
  0019e	48 8d 54 24 70	 lea	 rdx, QWORD PTR file_info$[rsp+64]
  001a3	e8 00 00 00 00	 call	 unz64local_DosDateToTmuDate

; 932  : 
; 933  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.crc) != UNZ_OK)

  001a8	4c 8d 44 24 44	 lea	 r8, QWORD PTR file_info$[rsp+20]
  001ad	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  001b2	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  001b6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  001bb	e8 00 00 00 00	 call	 unz64local_getLong
  001c0	85 c0		 test	 eax, eax
  001c2	74 0b		 je	 SHORT $LN54@unz64local@7

; 934  :         err=UNZ_ERRNO;

  001c4	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN54@unz64local@7:

; 935  : 
; 936  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)

  001cf	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR uL$[rsp]
  001d7	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  001dc	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  001e0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  001e5	e8 00 00 00 00	 call	 unz64local_getLong
  001ea	85 c0		 test	 eax, eax
  001ec	74 0b		 je	 SHORT $LN53@unz64local@7

; 937  :         err=UNZ_ERRNO;

  001ee	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN53@unz64local@7:

; 938  :     file_info.compressed_size = uL;

  001f9	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR uL$[rsp]
  00200	48 89 44 24 48	 mov	 QWORD PTR file_info$[rsp+24], rax

; 939  : 
; 940  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)

  00205	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR uL$[rsp]
  0020d	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00212	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00216	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0021b	e8 00 00 00 00	 call	 unz64local_getLong
  00220	85 c0		 test	 eax, eax
  00222	74 0b		 je	 SHORT $LN52@unz64local@7

; 941  :         err=UNZ_ERRNO;

  00224	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN52@unz64local@7:

; 942  :     file_info.uncompressed_size = uL;

  0022f	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR uL$[rsp]
  00236	48 89 44 24 50	 mov	 QWORD PTR file_info$[rsp+32], rax

; 943  : 
; 944  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_filename) != UNZ_OK)

  0023b	4c 8d 44 24 58	 lea	 r8, QWORD PTR file_info$[rsp+40]
  00240	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00245	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00249	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0024e	e8 00 00 00 00	 call	 unz64local_getShort
  00253	85 c0		 test	 eax, eax
  00255	74 0b		 je	 SHORT $LN51@unz64local@7

; 945  :         err=UNZ_ERRNO;

  00257	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN51@unz64local@7:

; 946  : 
; 947  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_extra) != UNZ_OK)

  00262	4c 8d 44 24 5c	 lea	 r8, QWORD PTR file_info$[rsp+44]
  00267	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  0026c	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00270	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00275	e8 00 00 00 00	 call	 unz64local_getShort
  0027a	85 c0		 test	 eax, eax
  0027c	74 0b		 je	 SHORT $LN50@unz64local@7

; 948  :         err=UNZ_ERRNO;

  0027e	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN50@unz64local@7:

; 949  : 
; 950  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.size_file_comment) != UNZ_OK)

  00289	4c 8d 44 24 60	 lea	 r8, QWORD PTR file_info$[rsp+48]
  0028e	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00293	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00297	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0029c	e8 00 00 00 00	 call	 unz64local_getShort
  002a1	85 c0		 test	 eax, eax
  002a3	74 0b		 je	 SHORT $LN49@unz64local@7

; 951  :         err=UNZ_ERRNO;

  002a5	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN49@unz64local@7:

; 952  : 
; 953  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.disk_num_start) != UNZ_OK)

  002b0	4c 8d 44 24 64	 lea	 r8, QWORD PTR file_info$[rsp+52]
  002b5	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  002ba	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  002be	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  002c3	e8 00 00 00 00	 call	 unz64local_getShort
  002c8	85 c0		 test	 eax, eax
  002ca	74 0b		 je	 SHORT $LN48@unz64local@7

; 954  :         err=UNZ_ERRNO;

  002cc	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN48@unz64local@7:

; 955  : 
; 956  :     if (unz64local_getShort(&s->z_filefunc, s->filestream,&file_info.internal_fa) != UNZ_OK)

  002d7	4c 8d 44 24 68	 lea	 r8, QWORD PTR file_info$[rsp+56]
  002dc	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  002e1	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  002e5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  002ea	e8 00 00 00 00	 call	 unz64local_getShort
  002ef	85 c0		 test	 eax, eax
  002f1	74 0b		 je	 SHORT $LN47@unz64local@7

; 957  :         err=UNZ_ERRNO;

  002f3	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN47@unz64local@7:

; 958  : 
; 959  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&file_info.external_fa) != UNZ_OK)

  002fe	4c 8d 44 24 6c	 lea	 r8, QWORD PTR file_info$[rsp+60]
  00303	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00308	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0030c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00311	e8 00 00 00 00	 call	 unz64local_getLong
  00316	85 c0		 test	 eax, eax
  00318	74 0b		 je	 SHORT $LN46@unz64local@7

; 960  :         err=UNZ_ERRNO;

  0031a	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN46@unz64local@7:

; 961  : 
; 962  :                 // relative offset of local header
; 963  :     if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)

  00325	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR uL$[rsp]
  0032d	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00332	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00336	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0033b	e8 00 00 00 00	 call	 unz64local_getLong
  00340	85 c0		 test	 eax, eax
  00342	74 0b		 je	 SHORT $LN45@unz64local@7

; 964  :         err=UNZ_ERRNO;

  00344	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN45@unz64local@7:

; 965  :     file_info_internal.offset_curfile = uL;

  0034f	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR uL$[rsp]
  00356	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR file_info_internal$[rsp], rax

; 966  : 
; 967  :     lSeek+=file_info.size_filename;

  0035e	8b 4c 24 58	 mov	 ecx, DWORD PTR file_info$[rsp+40]
  00362	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00369	03 c1		 add	 eax, ecx
  0036b	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax

; 968  :     if ((err==UNZ_OK) && (szFileName!=NULL))

  00372	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  0037a	0f 85 ad 00 00
	00		 jne	 $LN44@unz64local@7
  00380	48 83 bc 24 08
	01 00 00 00	 cmp	 QWORD PTR szFileName$[rsp], 0
  00389	0f 84 9e 00 00
	00		 je	 $LN44@unz64local@7

; 969  :     {
; 970  :         uLong uSizeRead ;
; 971  :         if (file_info.size_filename<fileNameBufferSize)

  0038f	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR fileNameBufferSize$[rsp]
  00396	39 44 24 58	 cmp	 DWORD PTR file_info$[rsp+40], eax
  0039a	73 1d		 jae	 SHORT $LN43@unz64local@7

; 972  :         {
; 973  :             *(szFileName+file_info.size_filename)='\0';

  0039c	8b 4c 24 58	 mov	 ecx, DWORD PTR file_info$[rsp+40]
  003a0	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR szFileName$[rsp]
  003a8	c6 04 08 00	 mov	 BYTE PTR [rax+rcx], 0

; 974  :             uSizeRead = file_info.size_filename;

  003ac	8b 44 24 58	 mov	 eax, DWORD PTR file_info$[rsp+40]
  003b0	89 84 24 a4 00
	00 00		 mov	 DWORD PTR uSizeRead$80419[rsp], eax

; 975  :         }
; 976  :         else

  003b7	eb 0e		 jmp	 SHORT $LN42@unz64local@7
$LN43@unz64local@7:

; 977  :             uSizeRead = fileNameBufferSize;

  003b9	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR fileNameBufferSize$[rsp]
  003c0	89 84 24 a4 00
	00 00		 mov	 DWORD PTR uSizeRead$80419[rsp], eax
$LN42@unz64local@7:

; 978  : 
; 979  :         if ((file_info.size_filename>0) && (fileNameBufferSize>0))

  003c7	83 7c 24 58 00	 cmp	 DWORD PTR file_info$[rsp+40], 0
  003cc	76 48		 jbe	 SHORT $LN41@unz64local@7
  003ce	83 bc 24 10 01
	00 00 00	 cmp	 DWORD PTR fileNameBufferSize$[rsp], 0
  003d6	76 3e		 jbe	 SHORT $LN41@unz64local@7

; 980  :             if (ZREAD64(s->z_filefunc, s->filestream,szFileName,uSizeRead)!=uSizeRead)

  003d8	44 8b 8c 24 a4
	00 00 00	 mov	 r9d, DWORD PTR uSizeRead$80419[rsp]
  003e0	4c 8b 84 24 08
	01 00 00	 mov	 r8, QWORD PTR szFileName$[rsp]
  003e8	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  003ed	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  003f1	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  003f6	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  003fa	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  003ff	ff 50 08	 call	 QWORD PTR [rax+8]
  00402	3b 84 24 a4 00
	00 00		 cmp	 eax, DWORD PTR uSizeRead$80419[rsp]
  00409	74 0b		 je	 SHORT $LN40@unz64local@7

; 981  :                 err=UNZ_ERRNO;

  0040b	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN40@unz64local@7:
$LN41@unz64local@7:

; 982  :         lSeek -= uSizeRead;

  00416	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR uSizeRead$80419[rsp]
  0041d	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00424	2b c1		 sub	 eax, ecx
  00426	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax
$LN44@unz64local@7:

; 983  :     }
; 984  : 
; 985  :     // Read extrafield
; 986  :     if ((err==UNZ_OK) && (extraField!=NULL))

  0042d	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  00435	0f 85 f1 00 00
	00		 jne	 $LN39@unz64local@7
  0043b	48 83 bc 24 18
	01 00 00 00	 cmp	 QWORD PTR extraField$[rsp], 0
  00444	0f 84 e2 00 00
	00		 je	 $LN39@unz64local@7

; 987  :     {
; 988  :         ZPOS64_T uSizeRead ;
; 989  :         if (file_info.size_file_extra<extraFieldBufferSize)

  0044a	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR extraFieldBufferSize$[rsp]
  00451	39 44 24 5c	 cmp	 DWORD PTR file_info$[rsp+44], eax
  00455	73 0e		 jae	 SHORT $LN38@unz64local@7

; 990  :             uSizeRead = file_info.size_file_extra;

  00457	8b 44 24 5c	 mov	 eax, DWORD PTR file_info$[rsp+44]
  0045b	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR uSizeRead$80426[rsp], rax

; 991  :         else

  00463	eb 0f		 jmp	 SHORT $LN37@unz64local@7
$LN38@unz64local@7:

; 992  :             uSizeRead = extraFieldBufferSize;

  00465	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR extraFieldBufferSize$[rsp]
  0046c	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR uSizeRead$80426[rsp], rax
$LN37@unz64local@7:

; 993  : 
; 994  :         if (lSeek!=0)

  00474	83 bc 24 94 00
	00 00 00	 cmp	 DWORD PTR lSeek$[rsp], 0
  0047c	74 3d		 je	 SHORT $LN36@unz64local@7

; 995  :         {
; 996  :             if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)

  0047e	4c 63 84 24 94
	00 00 00	 movsxd	 r8, DWORD PTR lSeek$[rsp]
  00486	41 b9 01 00 00
	00		 mov	 r9d, 1
  0048c	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00491	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00495	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0049a	e8 00 00 00 00	 call	 call_zseek64
  0049f	85 c0		 test	 eax, eax
  004a1	75 0d		 jne	 SHORT $LN35@unz64local@7

; 997  :                 lSeek=0;

  004a3	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR lSeek$[rsp], 0

; 998  :             else

  004ae	eb 0b		 jmp	 SHORT $LN34@unz64local@7
$LN35@unz64local@7:

; 999  :                 err=UNZ_ERRNO;

  004b0	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN34@unz64local@7:
$LN36@unz64local@7:

; 1000 :         }
; 1001 : 
; 1002 :         if ((file_info.size_file_extra>0) && (extraFieldBufferSize>0))

  004bb	83 7c 24 5c 00	 cmp	 DWORD PTR file_info$[rsp+44], 0
  004c0	76 4b		 jbe	 SHORT $LN33@unz64local@7
  004c2	83 bc 24 20 01
	00 00 00	 cmp	 DWORD PTR extraFieldBufferSize$[rsp], 0
  004ca	76 41		 jbe	 SHORT $LN33@unz64local@7

; 1003 :             if (ZREAD64(s->z_filefunc, s->filestream,extraField,(uLong)uSizeRead)!=uSizeRead)

  004cc	44 8b 8c 24 a8
	00 00 00	 mov	 r9d, DWORD PTR uSizeRead$80426[rsp]
  004d4	4c 8b 84 24 18
	01 00 00	 mov	 r8, QWORD PTR extraField$[rsp]
  004dc	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  004e1	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  004e5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  004ea	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  004ee	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  004f3	ff 50 08	 call	 QWORD PTR [rax+8]
  004f6	8b c0		 mov	 eax, eax
  004f8	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR uSizeRead$80426[rsp]
  00500	74 0b		 je	 SHORT $LN32@unz64local@7

; 1004 :                 err=UNZ_ERRNO;

  00502	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN32@unz64local@7:
$LN33@unz64local@7:

; 1005 : 
; 1006 :         lSeek += file_info.size_file_extra - (uLong)uSizeRead;

  0050d	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR uSizeRead$80426[rsp]
  00514	8b 4c 24 5c	 mov	 ecx, DWORD PTR file_info$[rsp+44]
  00518	2b c8		 sub	 ecx, eax
  0051a	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00521	03 c1		 add	 eax, ecx
  00523	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax

; 1007 :     }
; 1008 :     else

  0052a	eb 14		 jmp	 SHORT $LN31@unz64local@7
$LN39@unz64local@7:

; 1009 :         lSeek += file_info.size_file_extra;

  0052c	8b 4c 24 5c	 mov	 ecx, DWORD PTR file_info$[rsp+44]
  00530	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00537	03 c1		 add	 eax, ecx
  00539	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax
$LN31@unz64local@7:

; 1010 : 
; 1011 : 
; 1012 :     if ((err==UNZ_OK) && (file_info.size_file_extra != 0))

  00540	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  00548	0f 85 04 02 00
	00		 jne	 $LN30@unz64local@7
  0054e	83 7c 24 5c 00	 cmp	 DWORD PTR file_info$[rsp+44], 0
  00553	0f 84 f9 01 00
	00		 je	 $LN30@unz64local@7

; 1013 :     {
; 1014 :                                 uLong acc = 0;

  00559	c7 84 24 b0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR acc$80438[rsp], 0

; 1015 : 
; 1016 :         // since lSeek now points to after the extra field we need to move back
; 1017 :         lSeek -= file_info.size_file_extra;

  00564	8b 4c 24 5c	 mov	 ecx, DWORD PTR file_info$[rsp+44]
  00568	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  0056f	2b c1		 sub	 eax, ecx
  00571	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax

; 1018 : 
; 1019 :         if (lSeek!=0)

  00578	83 bc 24 94 00
	00 00 00	 cmp	 DWORD PTR lSeek$[rsp], 0
  00580	74 3d		 je	 SHORT $LN29@unz64local@7

; 1020 :         {
; 1021 :             if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)

  00582	4c 63 84 24 94
	00 00 00	 movsxd	 r8, DWORD PTR lSeek$[rsp]
  0058a	41 b9 01 00 00
	00		 mov	 r9d, 1
  00590	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00595	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00599	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0059e	e8 00 00 00 00	 call	 call_zseek64
  005a3	85 c0		 test	 eax, eax
  005a5	75 0d		 jne	 SHORT $LN28@unz64local@7

; 1022 :                 lSeek=0;

  005a7	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR lSeek$[rsp], 0

; 1023 :             else

  005b2	eb 0b		 jmp	 SHORT $LN27@unz64local@7
$LN28@unz64local@7:

; 1024 :                 err=UNZ_ERRNO;

  005b4	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN27@unz64local@7:
$LN29@unz64local@7:
$LN26@unz64local@7:

; 1025 :         }
; 1026 : 
; 1027 :         while(acc < file_info.size_file_extra)

  005bf	8b 44 24 5c	 mov	 eax, DWORD PTR file_info$[rsp+44]
  005c3	39 84 24 b0 00
	00 00		 cmp	 DWORD PTR acc$80438[rsp], eax
  005ca	0f 83 82 01 00
	00		 jae	 $LN25@unz64local@7

; 1028 :         {
; 1029 :             uLong headerId;
; 1030 :                                                 uLong dataSize;
; 1031 : 
; 1032 :             if (unz64local_getShort(&s->z_filefunc, s->filestream,&headerId) != UNZ_OK)

  005d0	4c 8d 84 24 b8
	00 00 00	 lea	 r8, QWORD PTR headerId$80445[rsp]
  005d8	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  005dd	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  005e1	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  005e6	e8 00 00 00 00	 call	 unz64local_getShort
  005eb	85 c0		 test	 eax, eax
  005ed	74 0b		 je	 SHORT $LN24@unz64local@7

; 1033 :                 err=UNZ_ERRNO;

  005ef	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN24@unz64local@7:

; 1034 : 
; 1035 :             if (unz64local_getShort(&s->z_filefunc, s->filestream,&dataSize) != UNZ_OK)

  005fa	4c 8d 84 24 b4
	00 00 00	 lea	 r8, QWORD PTR dataSize$80446[rsp]
  00602	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00607	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0060b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00610	e8 00 00 00 00	 call	 unz64local_getShort
  00615	85 c0		 test	 eax, eax
  00617	74 0b		 je	 SHORT $LN23@unz64local@7

; 1036 :                 err=UNZ_ERRNO;

  00619	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN23@unz64local@7:

; 1037 : 
; 1038 :             /* ZIP64 extra fields */
; 1039 :             if (headerId == 0x0001)

  00624	83 bc 24 b8 00
	00 00 01	 cmp	 DWORD PTR headerId$80445[rsp], 1
  0062c	0f 85 d2 00 00
	00		 jne	 $LN22@unz64local@7

; 1040 :             {
; 1041 :                                                         uLong uL;
; 1042 : 
; 1043 :                                                                 if(file_info.uncompressed_size == (ZPOS64_T)(unsigned long)-1)

  00632	b8 ff ff ff ff	 mov	 eax, -1			; ffffffffH
  00637	48 39 44 24 50	 cmp	 QWORD PTR file_info$[rsp+32], rax
  0063c	75 27		 jne	 SHORT $LN21@unz64local@7

; 1044 :                                                                 {
; 1045 :                                                                         if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info.uncompressed_size) != UNZ_OK)

  0063e	4c 8d 44 24 50	 lea	 r8, QWORD PTR file_info$[rsp+32]
  00643	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00648	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0064c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00651	e8 00 00 00 00	 call	 unz64local_getLong64
  00656	85 c0		 test	 eax, eax
  00658	74 0b		 je	 SHORT $LN20@unz64local@7

; 1046 :                                                                                         err=UNZ_ERRNO;

  0065a	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN20@unz64local@7:
$LN21@unz64local@7:

; 1047 :                                                                 }
; 1048 : 
; 1049 :                                                                 if(file_info.compressed_size == (ZPOS64_T)(unsigned long)-1)

  00665	b8 ff ff ff ff	 mov	 eax, -1			; ffffffffH
  0066a	48 39 44 24 48	 cmp	 QWORD PTR file_info$[rsp+24], rax
  0066f	75 27		 jne	 SHORT $LN19@unz64local@7

; 1050 :                                                                 {
; 1051 :                                                                         if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info.compressed_size) != UNZ_OK)

  00671	4c 8d 44 24 48	 lea	 r8, QWORD PTR file_info$[rsp+24]
  00676	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  0067b	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0067f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00684	e8 00 00 00 00	 call	 unz64local_getLong64
  00689	85 c0		 test	 eax, eax
  0068b	74 0b		 je	 SHORT $LN18@unz64local@7

; 1052 :                                                                                   err=UNZ_ERRNO;

  0068d	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN18@unz64local@7:
$LN19@unz64local@7:

; 1053 :                                                                 }
; 1054 : 
; 1055 :                                                                 if(file_info_internal.offset_curfile == (ZPOS64_T)(unsigned long)-1)

  00698	b8 ff ff ff ff	 mov	 eax, -1			; ffffffffH
  0069d	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR file_info_internal$[rsp], rax
  006a5	75 2a		 jne	 SHORT $LN17@unz64local@7

; 1056 :                                                                 {
; 1057 :                                                                         /* Relative Header offset */
; 1058 :                                                                         if (unz64local_getLong64(&s->z_filefunc, s->filestream,&file_info_internal.offset_curfile) != UNZ_OK)

  006a7	4c 8d 84 24 98
	00 00 00	 lea	 r8, QWORD PTR file_info_internal$[rsp]
  006af	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  006b4	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  006b8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  006bd	e8 00 00 00 00	 call	 unz64local_getLong64
  006c2	85 c0		 test	 eax, eax
  006c4	74 0b		 je	 SHORT $LN16@unz64local@7

; 1059 :                                                                                 err=UNZ_ERRNO;

  006c6	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN16@unz64local@7:
$LN17@unz64local@7:

; 1060 :                                                                 }
; 1061 : 
; 1062 :                                                                 if(file_info.disk_num_start == (unsigned long)-1)

  006d1	83 7c 24 64 ff	 cmp	 DWORD PTR file_info$[rsp+52], -1 ; ffffffffH
  006d6	75 2a		 jne	 SHORT $LN15@unz64local@7

; 1063 :                                                                 {
; 1064 :                                                                         /* Disk Start Number */
; 1065 :                                                                         if (unz64local_getLong(&s->z_filefunc, s->filestream,&uL) != UNZ_OK)

  006d8	4c 8d 84 24 bc
	00 00 00	 lea	 r8, QWORD PTR uL$80450[rsp]
  006e0	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  006e5	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  006e9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  006ee	e8 00 00 00 00	 call	 unz64local_getLong
  006f3	85 c0		 test	 eax, eax
  006f5	74 0b		 je	 SHORT $LN14@unz64local@7

; 1066 :                                                                                 err=UNZ_ERRNO;

  006f7	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN14@unz64local@7:
$LN15@unz64local@7:

; 1067 :                                                                 }
; 1068 : 
; 1069 :             }
; 1070 :             else

  00702	eb 30		 jmp	 SHORT $LN13@unz64local@7
$LN22@unz64local@7:

; 1071 :             {
; 1072 :                 if (ZSEEK64(s->z_filefunc, s->filestream,dataSize,ZLIB_FILEFUNC_SEEK_CUR)!=0)

  00704	44 8b 84 24 b4
	00 00 00	 mov	 r8d, DWORD PTR dataSize$80446[rsp]
  0070c	41 b9 01 00 00
	00		 mov	 r9d, 1
  00712	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00717	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  0071b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00720	e8 00 00 00 00	 call	 call_zseek64
  00725	85 c0		 test	 eax, eax
  00727	74 0b		 je	 SHORT $LN12@unz64local@7

; 1073 :                     err=UNZ_ERRNO;

  00729	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN12@unz64local@7:
$LN13@unz64local@7:

; 1074 :             }
; 1075 : 
; 1076 :             acc += 2 + 2 + dataSize;

  00734	8b 8c 24 b0 00
	00 00		 mov	 ecx, DWORD PTR acc$80438[rsp]
  0073b	8b 84 24 b4 00
	00 00		 mov	 eax, DWORD PTR dataSize$80446[rsp]
  00742	8d 44 01 04	 lea	 eax, DWORD PTR [rcx+rax+4]
  00746	89 84 24 b0 00
	00 00		 mov	 DWORD PTR acc$80438[rsp], eax

; 1077 :         }

  0074d	e9 6d fe ff ff	 jmp	 $LN26@unz64local@7
$LN25@unz64local@7:
$LN30@unz64local@7:

; 1078 :     }
; 1079 : 
; 1080 :     if ((err==UNZ_OK) && (szComment!=NULL))

  00752	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  0075a	0f 85 fc 00 00
	00		 jne	 $LN11@unz64local@7
  00760	48 83 bc 24 28
	01 00 00 00	 cmp	 QWORD PTR szComment$[rsp], 0
  00769	0f 84 ed 00 00
	00		 je	 $LN11@unz64local@7

; 1081 :     {
; 1082 :         uLong uSizeRead ;
; 1083 :         if (file_info.size_file_comment<commentBufferSize)

  0076f	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR commentBufferSize$[rsp]
  00776	39 44 24 60	 cmp	 DWORD PTR file_info$[rsp+48], eax
  0077a	73 1d		 jae	 SHORT $LN10@unz64local@7

; 1084 :         {
; 1085 :             *(szComment+file_info.size_file_comment)='\0';

  0077c	8b 4c 24 60	 mov	 ecx, DWORD PTR file_info$[rsp+48]
  00780	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR szComment$[rsp]
  00788	c6 04 08 00	 mov	 BYTE PTR [rax+rcx], 0

; 1086 :             uSizeRead = file_info.size_file_comment;

  0078c	8b 44 24 60	 mov	 eax, DWORD PTR file_info$[rsp+48]
  00790	89 84 24 c0 00
	00 00		 mov	 DWORD PTR uSizeRead$80470[rsp], eax

; 1087 :         }
; 1088 :         else

  00797	eb 0e		 jmp	 SHORT $LN9@unz64local@7
$LN10@unz64local@7:

; 1089 :             uSizeRead = commentBufferSize;

  00799	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR commentBufferSize$[rsp]
  007a0	89 84 24 c0 00
	00 00		 mov	 DWORD PTR uSizeRead$80470[rsp], eax
$LN9@unz64local@7:

; 1090 : 
; 1091 :         if (lSeek!=0)

  007a7	83 bc 24 94 00
	00 00 00	 cmp	 DWORD PTR lSeek$[rsp], 0
  007af	74 3d		 je	 SHORT $LN8@unz64local@7

; 1092 :         {
; 1093 :             if (ZSEEK64(s->z_filefunc, s->filestream,lSeek,ZLIB_FILEFUNC_SEEK_CUR)==0)

  007b1	4c 63 84 24 94
	00 00 00	 movsxd	 r8, DWORD PTR lSeek$[rsp]
  007b9	41 b9 01 00 00
	00		 mov	 r9d, 1
  007bf	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  007c4	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  007c8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  007cd	e8 00 00 00 00	 call	 call_zseek64
  007d2	85 c0		 test	 eax, eax
  007d4	75 0d		 jne	 SHORT $LN7@unz64local@7

; 1094 :                 lSeek=0;

  007d6	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR lSeek$[rsp], 0

; 1095 :             else

  007e1	eb 0b		 jmp	 SHORT $LN6@unz64local@7
$LN7@unz64local@7:

; 1096 :                 err=UNZ_ERRNO;

  007e3	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN6@unz64local@7:
$LN8@unz64local@7:

; 1097 :         }
; 1098 : 
; 1099 :         if ((file_info.size_file_comment>0) && (commentBufferSize>0))

  007ee	83 7c 24 60 00	 cmp	 DWORD PTR file_info$[rsp+48], 0
  007f3	76 48		 jbe	 SHORT $LN5@unz64local@7
  007f5	83 bc 24 30 01
	00 00 00	 cmp	 DWORD PTR commentBufferSize$[rsp], 0
  007fd	76 3e		 jbe	 SHORT $LN5@unz64local@7

; 1100 :             if (ZREAD64(s->z_filefunc, s->filestream,szComment,uSizeRead)!=uSizeRead)

  007ff	44 8b 8c 24 c0
	00 00 00	 mov	 r9d, DWORD PTR uSizeRead$80470[rsp]
  00807	4c 8b 84 24 28
	01 00 00	 mov	 r8, QWORD PTR szComment$[rsp]
  0080f	48 8b 54 24 20	 mov	 rdx, QWORD PTR s$[rsp]
  00814	48 8b 52 60	 mov	 rdx, QWORD PTR [rdx+96]
  00818	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  0081d	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00821	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00826	ff 50 08	 call	 QWORD PTR [rax+8]
  00829	3b 84 24 c0 00
	00 00		 cmp	 eax, DWORD PTR uSizeRead$80470[rsp]
  00830	74 0b		 je	 SHORT $LN4@unz64local@7

; 1101 :                 err=UNZ_ERRNO;

  00832	c7 84 24 a0 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR err$[rsp], -1
$LN4@unz64local@7:
$LN5@unz64local@7:

; 1102 :         lSeek+=file_info.size_file_comment - uSizeRead;

  0083d	8b 84 24 c0 00
	00 00		 mov	 eax, DWORD PTR uSizeRead$80470[rsp]
  00844	8b 4c 24 60	 mov	 ecx, DWORD PTR file_info$[rsp+48]
  00848	2b c8		 sub	 ecx, eax
  0084a	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00851	03 c1		 add	 eax, ecx
  00853	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax

; 1103 :     }
; 1104 :     else

  0085a	eb 14		 jmp	 SHORT $LN3@unz64local@7
$LN11@unz64local@7:

; 1105 :         lSeek+=file_info.size_file_comment;

  0085c	8b 4c 24 60	 mov	 ecx, DWORD PTR file_info$[rsp+48]
  00860	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR lSeek$[rsp]
  00867	03 c1		 add	 eax, ecx
  00869	89 84 24 94 00
	00 00		 mov	 DWORD PTR lSeek$[rsp], eax
$LN3@unz64local@7:

; 1106 : 
; 1107 : 
; 1108 :     if ((err==UNZ_OK) && (pfile_info!=NULL))

  00870	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  00878	75 1f		 jne	 SHORT $LN2@unz64local@7
  0087a	48 83 bc 24 f8
	00 00 00 00	 cmp	 QWORD PTR pfile_info$[rsp], 0
  00883	74 14		 je	 SHORT $LN2@unz64local@7

; 1109 :         *pfile_info=file_info;

  00885	48 8d 74 24 30	 lea	 rsi, QWORD PTR file_info$[rsp]
  0088a	48 8b bc 24 f8
	00 00 00	 mov	 rdi, QWORD PTR pfile_info$[rsp]
  00892	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00897	f3 a4		 rep movsb
$LN2@unz64local@7:

; 1110 : 
; 1111 :     if ((err==UNZ_OK) && (pfile_info_internal!=NULL))

  00899	83 bc 24 a0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  008a1	75 1e		 jne	 SHORT $LN1@unz64local@7
  008a3	48 83 bc 24 00
	01 00 00 00	 cmp	 QWORD PTR pfile_info_internal$[rsp], 0
  008ac	74 13		 je	 SHORT $LN1@unz64local@7

; 1112 :         *pfile_info_internal=file_info_internal;

  008ae	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR pfile_info_internal$[rsp]
  008b6	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR file_info_internal$[rsp]
  008be	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN1@unz64local@7:

; 1113 : 
; 1114 :     return err;

  008c1	8b 84 24 a0 00
	00 00		 mov	 eax, DWORD PTR err$[rsp]
$LN66@unz64local@7:

; 1115 : }

  008c8	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  008cf	5f		 pop	 rdi
  008d0	5e		 pop	 rsi
  008d1	c3		 ret	 0
unz64local_GetCurrentFileInfoInternal ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$unz64local_SearchCentralDir64 DD imagerel unz64local_SearchCentralDir64
	DD	imagerel unz64local_SearchCentralDir64+872
	DD	imagerel $unwind$unz64local_SearchCentralDir64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unz64local_SearchCentralDir64 DD 010e01H
	DD	0e20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unz64local_SearchCentralDir64
_TEXT	SEGMENT
uSizeFile$ = 32
uPosFound$ = 40
uBackRead$ = 48
relativeOffset$ = 56
uL$ = 64
uMaxBack$ = 72
buf$ = 80
i$80187 = 88
uReadPos$80186 = 96
uReadSize$80185 = 104
tv86 = 108
pzlib_filefunc_def$ = 128
filestream$ = 136
unz64local_SearchCentralDir64 PROC			; COMDAT

; 480  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 481  :     unsigned char* buf;
; 482  :     ZPOS64_T uSizeFile;
; 483  :     ZPOS64_T uBackRead;
; 484  :     ZPOS64_T uMaxBack=0xffff; /* maximum size of global comment */

  0000e	48 c7 44 24 48
	ff ff 00 00	 mov	 QWORD PTR uMaxBack$[rsp], 65535 ; 0000ffffH

; 485  :     ZPOS64_T uPosFound=0;

  00017	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR uPosFound$[rsp], 0

; 486  :     uLong uL;
; 487  :                 ZPOS64_T relativeOffset;
; 488  : 
; 489  :     if (ZSEEK64(*pzlib_filefunc_def,filestream,0,ZLIB_FILEFUNC_SEEK_END) != 0)

  00020	41 b9 02 00 00
	00		 mov	 r9d, 2
  00026	45 33 c0	 xor	 r8d, r8d
  00029	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00031	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00039	e8 00 00 00 00	 call	 call_zseek64
  0003e	85 c0		 test	 eax, eax
  00040	74 07		 je	 SHORT $LN25@unz64local@8

; 490  :         return 0;

  00042	33 c0		 xor	 eax, eax
  00044	e9 1a 03 00 00	 jmp	 $LN26@unz64local@8
$LN25@unz64local@8:

; 491  : 
; 492  : 
; 493  :     uSizeFile = ZTELL64(*pzlib_filefunc_def,filestream);

  00049	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00051	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00059	e8 00 00 00 00	 call	 call_ztell64
  0005e	48 89 44 24 20	 mov	 QWORD PTR uSizeFile$[rsp], rax

; 494  : 
; 495  :     if (uMaxBack>uSizeFile)

  00063	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  00068	48 39 44 24 48	 cmp	 QWORD PTR uMaxBack$[rsp], rax
  0006d	76 0a		 jbe	 SHORT $LN24@unz64local@8

; 496  :         uMaxBack = uSizeFile;

  0006f	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  00074	48 89 44 24 48	 mov	 QWORD PTR uMaxBack$[rsp], rax
$LN24@unz64local@8:

; 497  : 
; 498  :     buf = (unsigned char*)ALLOC(BUFREADCOMMENT+4);

  00079	b9 04 04 00 00	 mov	 ecx, 1028		; 00000404H
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  00084	48 89 44 24 50	 mov	 QWORD PTR buf$[rsp], rax

; 499  :     if (buf==NULL)

  00089	48 83 7c 24 50
	00		 cmp	 QWORD PTR buf$[rsp], 0
  0008f	75 07		 jne	 SHORT $LN23@unz64local@8

; 500  :         return 0;

  00091	33 c0		 xor	 eax, eax
  00093	e9 cb 02 00 00	 jmp	 $LN26@unz64local@8
$LN23@unz64local@8:

; 501  : 
; 502  :     uBackRead = 4;

  00098	48 c7 44 24 30
	04 00 00 00	 mov	 QWORD PTR uBackRead$[rsp], 4
$LN22@unz64local@8:

; 503  :     while (uBackRead<uMaxBack)

  000a1	48 8b 44 24 48	 mov	 rax, QWORD PTR uMaxBack$[rsp]
  000a6	48 39 44 24 30	 cmp	 QWORD PTR uBackRead$[rsp], rax
  000ab	0f 83 64 01 00
	00		 jae	 $LN21@unz64local@8

; 504  :     {
; 505  :         uLong uReadSize;
; 506  :         ZPOS64_T uReadPos;
; 507  :         int i;
; 508  :         if (uBackRead+BUFREADCOMMENT>uMaxBack)

  000b1	48 8b 44 24 30	 mov	 rax, QWORD PTR uBackRead$[rsp]
  000b6	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  000bc	48 3b 44 24 48	 cmp	 rax, QWORD PTR uMaxBack$[rsp]
  000c1	76 0c		 jbe	 SHORT $LN20@unz64local@8

; 509  :             uBackRead = uMaxBack;

  000c3	48 8b 44 24 48	 mov	 rax, QWORD PTR uMaxBack$[rsp]
  000c8	48 89 44 24 30	 mov	 QWORD PTR uBackRead$[rsp], rax

; 510  :         else

  000cd	eb 10		 jmp	 SHORT $LN19@unz64local@8
$LN20@unz64local@8:

; 511  :             uBackRead+=BUFREADCOMMENT;

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR uBackRead$[rsp]
  000d4	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  000da	48 89 44 24 30	 mov	 QWORD PTR uBackRead$[rsp], rax
$LN19@unz64local@8:

; 512  :         uReadPos = uSizeFile-uBackRead ;

  000df	48 8b 4c 24 30	 mov	 rcx, QWORD PTR uBackRead$[rsp]
  000e4	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  000e9	48 2b c1	 sub	 rax, rcx
  000ec	48 89 44 24 60	 mov	 QWORD PTR uReadPos$80186[rsp], rax

; 513  : 
; 514  :         uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?
; 515  :                      (BUFREADCOMMENT+4) : (uLong)(uSizeFile-uReadPos);

  000f1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR uReadPos$80186[rsp]
  000f6	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  000fb	48 2b c1	 sub	 rax, rcx
  000fe	48 3d 04 04 00
	00		 cmp	 rax, 1028		; 00000404H
  00104	76 0a		 jbe	 SHORT $LN28@unz64local@8
  00106	c7 44 24 6c 04
	04 00 00	 mov	 DWORD PTR tv86[rsp], 1028 ; 00000404H
  0010e	eb 11		 jmp	 SHORT $LN29@unz64local@8
$LN28@unz64local@8:
  00110	48 8b 4c 24 60	 mov	 rcx, QWORD PTR uReadPos$80186[rsp]
  00115	48 8b 44 24 20	 mov	 rax, QWORD PTR uSizeFile$[rsp]
  0011a	48 2b c1	 sub	 rax, rcx
  0011d	89 44 24 6c	 mov	 DWORD PTR tv86[rsp], eax
$LN29@unz64local@8:
  00121	8b 44 24 6c	 mov	 eax, DWORD PTR tv86[rsp]
  00125	89 44 24 68	 mov	 DWORD PTR uReadSize$80185[rsp], eax

; 516  :         if (ZSEEK64(*pzlib_filefunc_def,filestream,uReadPos,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00129	45 33 c9	 xor	 r9d, r9d
  0012c	4c 8b 44 24 60	 mov	 r8, QWORD PTR uReadPos$80186[rsp]
  00131	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00139	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00141	e8 00 00 00 00	 call	 call_zseek64
  00146	85 c0		 test	 eax, eax
  00148	74 05		 je	 SHORT $LN18@unz64local@8

; 517  :             break;

  0014a	e9 c6 00 00 00	 jmp	 $LN21@unz64local@8
$LN18@unz64local@8:

; 518  : 
; 519  :         if (ZREAD64(*pzlib_filefunc_def,filestream,buf,uReadSize)!=uReadSize)

  0014f	44 8b 4c 24 68	 mov	 r9d, DWORD PTR uReadSize$80185[rsp]
  00154	4c 8b 44 24 50	 mov	 r8, QWORD PTR buf$[rsp]
  00159	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00161	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00169	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  0016d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR pzlib_filefunc_def$[rsp]
  00175	ff 50 08	 call	 QWORD PTR [rax+8]
  00178	3b 44 24 68	 cmp	 eax, DWORD PTR uReadSize$80185[rsp]
  0017c	74 05		 je	 SHORT $LN17@unz64local@8

; 520  :             break;

  0017e	e9 92 00 00 00	 jmp	 $LN21@unz64local@8
$LN17@unz64local@8:

; 521  : 
; 522  :         for (i=(int)uReadSize-3; (i--)>0;)

  00183	8b 44 24 68	 mov	 eax, DWORD PTR uReadSize$80185[rsp]
  00187	83 e8 03	 sub	 eax, 3
  0018a	89 44 24 58	 mov	 DWORD PTR i$80187[rsp], eax
$LN16@unz64local@8:
  0018e	8b 4c 24 58	 mov	 ecx, DWORD PTR i$80187[rsp]
  00192	8b 44 24 58	 mov	 eax, DWORD PTR i$80187[rsp]
  00196	83 e8 01	 sub	 eax, 1
  00199	89 44 24 58	 mov	 DWORD PTR i$80187[rsp], eax
  0019d	85 c9		 test	 ecx, ecx
  0019f	7e 65		 jle	 SHORT $LN15@unz64local@8

; 523  :             if (((*(buf+i))==0x50) && ((*(buf+i+1))==0x4b) &&
; 524  :                 ((*(buf+i+2))==0x06) && ((*(buf+i+3))==0x07))

  001a1	48 63 4c 24 58	 movsxd	 rcx, DWORD PTR i$80187[rsp]
  001a6	48 8b 44 24 50	 mov	 rax, QWORD PTR buf$[rsp]
  001ab	0f b6 04 08	 movzx	 eax, BYTE PTR [rax+rcx]
  001af	83 f8 50	 cmp	 eax, 80			; 00000050H
  001b2	75 50		 jne	 SHORT $LN14@unz64local@8
  001b4	48 63 4c 24 58	 movsxd	 rcx, DWORD PTR i$80187[rsp]
  001b9	48 8b 44 24 50	 mov	 rax, QWORD PTR buf$[rsp]
  001be	0f b6 44 08 01	 movzx	 eax, BYTE PTR [rax+rcx+1]
  001c3	83 f8 4b	 cmp	 eax, 75			; 0000004bH
  001c6	75 3c		 jne	 SHORT $LN14@unz64local@8
  001c8	48 63 4c 24 58	 movsxd	 rcx, DWORD PTR i$80187[rsp]
  001cd	48 8b 44 24 50	 mov	 rax, QWORD PTR buf$[rsp]
  001d2	0f b6 44 08 02	 movzx	 eax, BYTE PTR [rax+rcx+2]
  001d7	83 f8 06	 cmp	 eax, 6
  001da	75 28		 jne	 SHORT $LN14@unz64local@8
  001dc	48 63 4c 24 58	 movsxd	 rcx, DWORD PTR i$80187[rsp]
  001e1	48 8b 44 24 50	 mov	 rax, QWORD PTR buf$[rsp]
  001e6	0f b6 44 08 03	 movzx	 eax, BYTE PTR [rax+rcx+3]
  001eb	83 f8 07	 cmp	 eax, 7
  001ee	75 14		 jne	 SHORT $LN14@unz64local@8

; 525  :             {
; 526  :                 uPosFound = uReadPos+i;

  001f0	48 63 4c 24 58	 movsxd	 rcx, DWORD PTR i$80187[rsp]
  001f5	48 8b 44 24 60	 mov	 rax, QWORD PTR uReadPos$80186[rsp]
  001fa	48 03 c1	 add	 rax, rcx
  001fd	48 89 44 24 28	 mov	 QWORD PTR uPosFound$[rsp], rax

; 527  :                 break;

  00202	eb 02		 jmp	 SHORT $LN15@unz64local@8
$LN14@unz64local@8:

; 528  :             }

  00204	eb 88		 jmp	 SHORT $LN16@unz64local@8
$LN15@unz64local@8:

; 529  : 
; 530  :         if (uPosFound!=0)

  00206	48 83 7c 24 28
	00		 cmp	 QWORD PTR uPosFound$[rsp], 0
  0020c	74 02		 je	 SHORT $LN13@unz64local@8

; 531  :             break;

  0020e	eb 05		 jmp	 SHORT $LN21@unz64local@8
$LN13@unz64local@8:

; 532  :     }

  00210	e9 8c fe ff ff	 jmp	 $LN22@unz64local@8
$LN21@unz64local@8:

; 533  :     TRYFREE(buf);

  00215	48 83 7c 24 50
	00		 cmp	 QWORD PTR buf$[rsp], 0
  0021b	74 0b		 je	 SHORT $LN12@unz64local@8
  0021d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR buf$[rsp]
  00222	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN12@unz64local@8:

; 534  :     if (uPosFound == 0)

  00228	48 83 7c 24 28
	00		 cmp	 QWORD PTR uPosFound$[rsp], 0
  0022e	75 07		 jne	 SHORT $LN11@unz64local@8

; 535  :         return 0;

  00230	33 c0		 xor	 eax, eax
  00232	e9 2c 01 00 00	 jmp	 $LN26@unz64local@8
$LN11@unz64local@8:

; 536  : 
; 537  :     /* Zip64 end of central directory locator */
; 538  :     if (ZSEEK64(*pzlib_filefunc_def,filestream, uPosFound,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00237	45 33 c9	 xor	 r9d, r9d
  0023a	4c 8b 44 24 28	 mov	 r8, QWORD PTR uPosFound$[rsp]
  0023f	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00247	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  0024f	e8 00 00 00 00	 call	 call_zseek64
  00254	85 c0		 test	 eax, eax
  00256	74 07		 je	 SHORT $LN10@unz64local@8

; 539  :         return 0;

  00258	33 c0		 xor	 eax, eax
  0025a	e9 04 01 00 00	 jmp	 $LN26@unz64local@8
$LN10@unz64local@8:

; 540  : 
; 541  :     /* the signature, already checked */
; 542  :     if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)

  0025f	4c 8d 44 24 40	 lea	 r8, QWORD PTR uL$[rsp]
  00264	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  0026c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00274	e8 00 00 00 00	 call	 unz64local_getLong
  00279	85 c0		 test	 eax, eax
  0027b	74 07		 je	 SHORT $LN9@unz64local@8

; 543  :         return 0;

  0027d	33 c0		 xor	 eax, eax
  0027f	e9 df 00 00 00	 jmp	 $LN26@unz64local@8
$LN9@unz64local@8:

; 544  : 
; 545  :     /* number of the disk with the start of the zip64 end of  central directory */
; 546  :     if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)

  00284	4c 8d 44 24 40	 lea	 r8, QWORD PTR uL$[rsp]
  00289	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00291	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00299	e8 00 00 00 00	 call	 unz64local_getLong
  0029e	85 c0		 test	 eax, eax
  002a0	74 07		 je	 SHORT $LN8@unz64local@8

; 547  :         return 0;

  002a2	33 c0		 xor	 eax, eax
  002a4	e9 ba 00 00 00	 jmp	 $LN26@unz64local@8
$LN8@unz64local@8:

; 548  :     if (uL != 0)

  002a9	83 7c 24 40 00	 cmp	 DWORD PTR uL$[rsp], 0
  002ae	74 07		 je	 SHORT $LN7@unz64local@8

; 549  :         return 0;

  002b0	33 c0		 xor	 eax, eax
  002b2	e9 ac 00 00 00	 jmp	 $LN26@unz64local@8
$LN7@unz64local@8:

; 550  : 
; 551  :     /* relative offset of the zip64 end of central directory record */
; 552  :     if (unz64local_getLong64(pzlib_filefunc_def,filestream,&relativeOffset)!=UNZ_OK)

  002b7	4c 8d 44 24 38	 lea	 r8, QWORD PTR relativeOffset$[rsp]
  002bc	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  002c4	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  002cc	e8 00 00 00 00	 call	 unz64local_getLong64
  002d1	85 c0		 test	 eax, eax
  002d3	74 07		 je	 SHORT $LN6@unz64local@8

; 553  :         return 0;

  002d5	33 c0		 xor	 eax, eax
  002d7	e9 87 00 00 00	 jmp	 $LN26@unz64local@8
$LN6@unz64local@8:

; 554  : 
; 555  :     /* total number of disks */
; 556  :     if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)

  002dc	4c 8d 44 24 40	 lea	 r8, QWORD PTR uL$[rsp]
  002e1	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  002e9	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  002f1	e8 00 00 00 00	 call	 unz64local_getLong
  002f6	85 c0		 test	 eax, eax
  002f8	74 04		 je	 SHORT $LN5@unz64local@8

; 557  :         return 0;

  002fa	33 c0		 xor	 eax, eax
  002fc	eb 65		 jmp	 SHORT $LN26@unz64local@8
$LN5@unz64local@8:

; 558  :     if (uL != 1)

  002fe	83 7c 24 40 01	 cmp	 DWORD PTR uL$[rsp], 1
  00303	74 04		 je	 SHORT $LN4@unz64local@8

; 559  :         return 0;

  00305	33 c0		 xor	 eax, eax
  00307	eb 5a		 jmp	 SHORT $LN26@unz64local@8
$LN4@unz64local@8:

; 560  : 
; 561  :     /* Goto end of central directory record */
; 562  :     if (ZSEEK64(*pzlib_filefunc_def,filestream, relativeOffset,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00309	45 33 c9	 xor	 r9d, r9d
  0030c	4c 8b 44 24 38	 mov	 r8, QWORD PTR relativeOffset$[rsp]
  00311	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  00319	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00321	e8 00 00 00 00	 call	 call_zseek64
  00326	85 c0		 test	 eax, eax
  00328	74 04		 je	 SHORT $LN3@unz64local@8

; 563  :         return 0;

  0032a	33 c0		 xor	 eax, eax
  0032c	eb 35		 jmp	 SHORT $LN26@unz64local@8
$LN3@unz64local@8:

; 564  : 
; 565  :      /* the signature */
; 566  :     if (unz64local_getLong(pzlib_filefunc_def,filestream,&uL)!=UNZ_OK)

  0032e	4c 8d 44 24 40	 lea	 r8, QWORD PTR uL$[rsp]
  00333	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR filestream$[rsp]
  0033b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pzlib_filefunc_def$[rsp]
  00343	e8 00 00 00 00	 call	 unz64local_getLong
  00348	85 c0		 test	 eax, eax
  0034a	74 04		 je	 SHORT $LN2@unz64local@8

; 567  :         return 0;

  0034c	33 c0		 xor	 eax, eax
  0034e	eb 13		 jmp	 SHORT $LN26@unz64local@8
$LN2@unz64local@8:

; 568  : 
; 569  :     if (uL != 0x06064b50)

  00350	81 7c 24 40 50
	4b 06 06	 cmp	 DWORD PTR uL$[rsp], 101075792 ; 06064b50H
  00358	74 04		 je	 SHORT $LN1@unz64local@8

; 570  :         return 0;

  0035a	33 c0		 xor	 eax, eax
  0035c	eb 05		 jmp	 SHORT $LN26@unz64local@8
$LN1@unz64local@8:

; 571  : 
; 572  :     return relativeOffset;

  0035e	48 8b 44 24 38	 mov	 rax, QWORD PTR relativeOffset$[rsp]
$LN26@unz64local@8:

; 573  : }

  00363	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00367	c3		 ret	 0
unz64local_SearchCentralDir64 ENDP
PUBLIC	$T83997
PUBLIC	unzOpenCurrentFile3
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpenCurrentFile3 DD imagerel $LN25
	DD	imagerel $LN25+1084
	DD	imagerel $unwind$unzOpenCurrentFile3
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpenCurrentFile3 DD 041d01H
	DD	017011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpenCurrentFile3
_TEXT	SEGMENT
s$ = 32
size_local_extrafield$ = 40
pfile_in_zip_read_info$ = 48
iSizeVar$ = 56
err$ = 60
offset_local_extrafield$ = 64
$T83997 = 72
tv95 = 160
file$ = 208
method$ = 216
level$ = 224
raw$ = 232
password$ = 240
unzOpenCurrentFile3 PROC				; COMDAT

; 1474 : {

$LN25:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H

; 1475 :     int err=UNZ_OK;

  0001d	c7 44 24 3c 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 1476 :     uInt iSizeVar;
; 1477 :     unz64_s* s;
; 1478 :     file_in_zip64_read_info_s* pfile_in_zip_read_info;
; 1479 :     ZPOS64_T offset_local_extrafield;  /* offset of the local extra field */
; 1480 :     uInt  size_local_extrafield;    /* size of the local extra field */
; 1481 : #    ifndef NOUNCRYPT
; 1482 :     char source[12];
; 1483 : #    else
; 1484 :     if (password != NULL)

  00025	48 83 bc 24 f0
	00 00 00 00	 cmp	 QWORD PTR password$[rsp], 0
  0002e	74 0a		 je	 SHORT $LN22@unzOpenCur

; 1485 :         return UNZ_PARAMERROR;

  00030	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00035	e9 f8 03 00 00	 jmp	 $LN23@unzOpenCur
$LN22@unzOpenCur:

; 1486 : #    endif
; 1487 : 
; 1488 :     if (file==NULL)

  0003a	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR file$[rsp], 0
  00043	75 0a		 jne	 SHORT $LN21@unzOpenCur

; 1489 :         return UNZ_PARAMERROR;

  00045	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0004a	e9 e3 03 00 00	 jmp	 $LN23@unzOpenCur
$LN21@unzOpenCur:

; 1490 :     s=(unz64_s*)file;

  0004f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR file$[rsp]
  00057	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 1491 :     if (!s->current_file_ok)

  0005c	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00061	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00069	75 0a		 jne	 SHORT $LN20@unzOpenCur

; 1492 :         return UNZ_PARAMERROR;

  0006b	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00070	e9 bd 03 00 00	 jmp	 $LN23@unzOpenCur
$LN20@unzOpenCur:

; 1493 : 
; 1494 :     if (s->pfile_in_zip_read != NULL)

  00075	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0007a	48 83 b8 10 01
	00 00 00	 cmp	 QWORD PTR [rax+272], 0
  00082	74 0d		 je	 SHORT $LN19@unzOpenCur

; 1495 :         unzCloseCurrentFile(file);

  00084	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  0008c	e8 00 00 00 00	 call	 unzCloseCurrentFile
$LN19@unzOpenCur:

; 1496 : 
; 1497 :     if (unz64local_CheckCurrentFileCoherencyHeader(s,&iSizeVar, &offset_local_extrafield,&size_local_extrafield)!=UNZ_OK)

  00091	4c 8d 4c 24 28	 lea	 r9, QWORD PTR size_local_extrafield$[rsp]
  00096	4c 8d 44 24 40	 lea	 r8, QWORD PTR offset_local_extrafield$[rsp]
  0009b	48 8d 54 24 38	 lea	 rdx, QWORD PTR iSizeVar$[rsp]
  000a0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  000a5	e8 00 00 00 00	 call	 unz64local_CheckCurrentFileCoherencyHeader
  000aa	85 c0		 test	 eax, eax
  000ac	74 0a		 je	 SHORT $LN18@unzOpenCur

; 1498 :         return UNZ_BADZIPFILE;

  000ae	b8 99 ff ff ff	 mov	 eax, -103		; ffffffffffffff99H
  000b3	e9 7a 03 00 00	 jmp	 $LN23@unzOpenCur
$LN18@unzOpenCur:

; 1499 : 
; 1500 :     pfile_in_zip_read_info = (file_in_zip64_read_info_s*)ALLOC(sizeof(file_in_zip64_read_info_s));

  000b8	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  000bd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  000c3	48 89 44 24 30	 mov	 QWORD PTR pfile_in_zip_read_info$[rsp], rax

; 1501 :     if (pfile_in_zip_read_info==NULL)

  000c8	48 83 7c 24 30
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  000ce	75 0a		 jne	 SHORT $LN17@unzOpenCur

; 1502 :         return UNZ_INTERNALERROR;

  000d0	b8 98 ff ff ff	 mov	 eax, -104		; ffffffffffffff98H
  000d5	e9 58 03 00 00	 jmp	 $LN23@unzOpenCur
$LN17@unzOpenCur:

; 1503 : 
; 1504 :     pfile_in_zip_read_info->read_buffer=(char*)ALLOC(UNZ_BUFSIZE);

  000da	b9 00 40 00 00	 mov	 ecx, 16384		; 00004000H
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  000e5	48 8b d0	 mov	 rdx, rax
  000e8	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  000ed	48 89 10	 mov	 QWORD PTR [rax], rdx

; 1505 :     pfile_in_zip_read_info->offset_local_extrafield = offset_local_extrafield;

  000f0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  000f5	48 8b 44 24 40	 mov	 rax, QWORD PTR offset_local_extrafield$[rsp]
  000fa	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax

; 1506 :     pfile_in_zip_read_info->size_local_extrafield = size_local_extrafield;

  000fe	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00103	8b 44 24 28	 mov	 eax, DWORD PTR size_local_extrafield$[rsp]
  00107	89 41 78	 mov	 DWORD PTR [rcx+120], eax

; 1507 :     pfile_in_zip_read_info->pos_local_extrafield=0;

  0010a	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0010f	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 1508 :     pfile_in_zip_read_info->raw=raw;

  0011a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0011f	8b 84 24 e8 00
	00 00		 mov	 eax, DWORD PTR raw$[rsp]
  00126	89 81 18 01 00
	00		 mov	 DWORD PTR [rcx+280], eax

; 1509 : 
; 1510 :     if (pfile_in_zip_read_info->read_buffer==NULL)

  0012c	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00131	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00135	75 1d		 jne	 SHORT $LN16@unzOpenCur

; 1511 :     {
; 1512 :         TRYFREE(pfile_in_zip_read_info);

  00137	48 83 7c 24 30
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  0013d	74 0b		 je	 SHORT $LN15@unzOpenCur
  0013f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00144	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN15@unzOpenCur:

; 1513 :         return UNZ_INTERNALERROR;

  0014a	b8 98 ff ff ff	 mov	 eax, -104		; ffffffffffffff98H
  0014f	e9 de 02 00 00	 jmp	 $LN23@unzOpenCur
$LN16@unzOpenCur:

; 1514 :     }
; 1515 : 
; 1516 :     pfile_in_zip_read_info->stream_initialised=0;

  00154	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00159	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [rax+104], 0

; 1517 : 
; 1518 :     if (method!=NULL)

  00160	48 83 bc 24 d8
	00 00 00 00	 cmp	 QWORD PTR method$[rsp], 0
  00169	74 15		 je	 SHORT $LN14@unzOpenCur

; 1519 :         *method = (int)s->cur_file_info.compression_method;

  0016b	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR method$[rsp]
  00173	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00178	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [rax+188]
  0017e	89 01		 mov	 DWORD PTR [rcx], eax
$LN14@unzOpenCur:

; 1520 : 
; 1521 :     if (level!=NULL)

  00180	48 83 bc 24 e0
	00 00 00 00	 cmp	 QWORD PTR level$[rsp], 0
  00189	74 71		 je	 SHORT $LN13@unzOpenCur

; 1522 :     {
; 1523 :         *level = 6;

  0018b	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR level$[rsp]
  00193	c7 00 06 00 00
	00		 mov	 DWORD PTR [rax], 6

; 1524 :         switch (s->cur_file_info.flag & 0x06)

  00199	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0019e	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [rax+184]
  001a4	83 e0 06	 and	 eax, 6
  001a7	89 84 24 a0 00
	00 00		 mov	 DWORD PTR tv95[rsp], eax
  001ae	83 bc 24 a0 00
	00 00 02	 cmp	 DWORD PTR tv95[rsp], 2
  001b6	74 36		 je	 SHORT $LN8@unzOpenCur
  001b8	83 bc 24 a0 00
	00 00 04	 cmp	 DWORD PTR tv95[rsp], 4
  001c0	74 1c		 je	 SHORT $LN9@unzOpenCur
  001c2	83 bc 24 a0 00
	00 00 06	 cmp	 DWORD PTR tv95[rsp], 6
  001ca	74 02		 je	 SHORT $LN10@unzOpenCur
  001cc	eb 2e		 jmp	 SHORT $LN11@unzOpenCur
$LN10@unzOpenCur:

; 1525 :         {
; 1526 :           case 6 : *level = 1; break;

  001ce	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR level$[rsp]
  001d6	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1
  001dc	eb 1e		 jmp	 SHORT $LN11@unzOpenCur
$LN9@unzOpenCur:

; 1527 :           case 4 : *level = 2; break;

  001de	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR level$[rsp]
  001e6	c7 00 02 00 00
	00		 mov	 DWORD PTR [rax], 2
  001ec	eb 0e		 jmp	 SHORT $LN11@unzOpenCur
$LN8@unzOpenCur:

; 1528 :           case 2 : *level = 9; break;

  001ee	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR level$[rsp]
  001f6	c7 00 09 00 00
	00		 mov	 DWORD PTR [rax], 9
$LN11@unzOpenCur:
$LN13@unzOpenCur:

; 1529 :         }
; 1530 :     }
; 1531 : 
; 1532 :     if ((s->cur_file_info.compression_method!=0) &&
; 1533 : /* #ifdef HAVE_BZIP2 */
; 1534 :         (s->cur_file_info.compression_method!=Z_BZIP2ED) &&
; 1535 : /* #endif */
; 1536 :         (s->cur_file_info.compression_method!=Z_DEFLATED))

  001fc	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00201	83 b8 bc 00 00
	00 00		 cmp	 DWORD PTR [rax+188], 0
  00208	74 24		 je	 SHORT $LN7@unzOpenCur
  0020a	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0020f	83 b8 bc 00 00
	00 0c		 cmp	 DWORD PTR [rax+188], 12
  00216	74 16		 je	 SHORT $LN7@unzOpenCur
  00218	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0021d	83 b8 bc 00 00
	00 08		 cmp	 DWORD PTR [rax+188], 8
  00224	74 08		 je	 SHORT $LN7@unzOpenCur

; 1537 : 
; 1538 :         err=UNZ_BADZIPFILE;

  00226	c7 44 24 3c 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN7@unzOpenCur:

; 1539 : 
; 1540 :     pfile_in_zip_read_info->crc32_wait=s->cur_file_info.crc;

  0022e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00233	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00238	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [rax+196]
  0023e	89 81 94 00 00
	00		 mov	 DWORD PTR [rcx+148], eax

; 1541 :     pfile_in_zip_read_info->crc32=0;

  00244	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00249	c7 80 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+144], 0

; 1542 :     pfile_in_zip_read_info->total_out_64=0;

  00253	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00258	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 1543 :     pfile_in_zip_read_info->compression_method = s->cur_file_info.compression_method;

  00263	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00268	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  0026d	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR [rax+188]
  00273	89 81 08 01 00
	00		 mov	 DWORD PTR [rcx+264], eax

; 1544 :     pfile_in_zip_read_info->filestream=s->filestream;

  00279	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  0027e	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00283	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00287	48 89 81 00 01
	00 00		 mov	 QWORD PTR [rcx+256], rax

; 1545 :     pfile_in_zip_read_info->z_filefunc=s->z_filefunc;

  0028e	48 8d 7c 24 48	 lea	 rdi, QWORD PTR $T83997[rsp]
  00293	48 8b 74 24 20	 mov	 rsi, QWORD PTR s$[rsp]
  00298	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  0029d	f3 a4		 rep movsb
  0029f	48 8b 7c 24 30	 mov	 rdi, QWORD PTR pfile_in_zip_read_info$[rsp]
  002a4	48 8d 74 24 48	 lea	 rsi, QWORD PTR $T83997[rsp]
  002a9	48 81 c7 a8 00
	00 00		 add	 rdi, 168		; 000000a8H
  002b0	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  002b5	f3 a4		 rep movsb

; 1546 :     pfile_in_zip_read_info->byte_before_the_zipfile=s->byte_before_the_zipfile;

  002b7	48 8b 54 24 30	 mov	 rdx, QWORD PTR pfile_in_zip_read_info$[rsp]
  002bc	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  002c1	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  002c5	48 89 82 10 01
	00 00		 mov	 QWORD PTR [rdx+272], rax

; 1547 : 
; 1548 :     pfile_in_zip_read_info->stream.total_out = 0;

  002cc	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  002d1	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [rax+36], 0

; 1549 : 
; 1550 :     if ((s->cur_file_info.compression_method==Z_BZIP2ED) && (!raw))

  002d8	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  002dd	83 b8 bc 00 00
	00 0c		 cmp	 DWORD PTR [rax+188], 12
  002e4	75 1e		 jne	 SHORT $LN6@unzOpenCur
  002e6	83 bc 24 e8 00
	00 00 00	 cmp	 DWORD PTR raw$[rsp], 0
  002ee	75 14		 jne	 SHORT $LN6@unzOpenCur

; 1551 :     {
; 1552 : #ifdef HAVE_BZIP2
; 1553 :       pfile_in_zip_read_info->bstream.bzalloc = (void *(*) (void *, int, int))0;
; 1554 :       pfile_in_zip_read_info->bstream.bzfree = (free_func)0;
; 1555 :       pfile_in_zip_read_info->bstream.opaque = (voidpf)0;
; 1556 :       pfile_in_zip_read_info->bstream.state = (voidpf)0;
; 1557 : 
; 1558 :       pfile_in_zip_read_info->stream.zalloc = (alloc_func)0;
; 1559 :       pfile_in_zip_read_info->stream.zfree = (free_func)0;
; 1560 :       pfile_in_zip_read_info->stream.opaque = (voidpf)0;
; 1561 :       pfile_in_zip_read_info->stream.next_in = (voidpf)0;
; 1562 :       pfile_in_zip_read_info->stream.avail_in = 0;
; 1563 : 
; 1564 :       err=BZ2_bzDecompressInit(&pfile_in_zip_read_info->bstream, 0, 0);
; 1565 :       if (err == Z_OK)
; 1566 :         pfile_in_zip_read_info->stream_initialised=Z_BZIP2ED;
; 1567 :       else
; 1568 :       {
; 1569 :         TRYFREE(pfile_in_zip_read_info);
; 1570 :         return err;
; 1571 :       }
; 1572 : #else
; 1573 :       pfile_in_zip_read_info->raw=1;

  002f0	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  002f5	c7 80 18 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+280], 1
  002ff	e9 b2 00 00 00	 jmp	 $LN5@unzOpenCur
$LN6@unzOpenCur:

; 1574 : #endif
; 1575 :     }
; 1576 :     else if ((s->cur_file_info.compression_method==Z_DEFLATED) && (!raw))

  00304	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00309	83 b8 bc 00 00
	00 08		 cmp	 DWORD PTR [rax+188], 8
  00310	0f 85 a0 00 00
	00		 jne	 $LN4@unzOpenCur
  00316	83 bc 24 e8 00
	00 00 00	 cmp	 DWORD PTR raw$[rsp], 0
  0031e	0f 85 92 00 00
	00		 jne	 $LN4@unzOpenCur

; 1577 :     {
; 1578 :       pfile_in_zip_read_info->stream.zalloc = (alloc_func)0;

  00324	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00329	48 c7 40 38 00
	00 00 00	 mov	 QWORD PTR [rax+56], 0

; 1579 :       pfile_in_zip_read_info->stream.zfree = (free_func)0;

  00331	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00336	48 c7 40 40 00
	00 00 00	 mov	 QWORD PTR [rax+64], 0

; 1580 :       pfile_in_zip_read_info->stream.opaque = (voidpf)0;

  0033e	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00343	48 c7 40 48 00
	00 00 00	 mov	 QWORD PTR [rax+72], 0

; 1581 :       pfile_in_zip_read_info->stream.next_in = 0;

  0034b	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00350	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1582 :       pfile_in_zip_read_info->stream.avail_in = 0;

  00358	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0035d	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0

; 1583 : 
; 1584 :       err=inflateInit2(&pfile_in_zip_read_info->stream, -MAX_WBITS);

  00364	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  00369	48 83 c1 08	 add	 rcx, 8
  0036d	41 b9 58 00 00
	00		 mov	 r9d, 88			; 00000058H
  00373	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05DFCKICEH@1?42?45?$AA@
  0037a	ba f1 ff ff ff	 mov	 edx, -15
  0037f	e8 00 00 00 00	 call	 inflateInit2_
  00384	89 44 24 3c	 mov	 DWORD PTR err$[rsp], eax

; 1585 :       if (err == Z_OK)

  00388	83 7c 24 3c 00	 cmp	 DWORD PTR err$[rsp], 0
  0038d	75 0e		 jne	 SHORT $LN3@unzOpenCur

; 1586 :         pfile_in_zip_read_info->stream_initialised=Z_DEFLATED;

  0038f	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00394	c7 40 68 08 00
	00 00		 mov	 DWORD PTR [rax+104], 8

; 1587 :       else

  0039b	eb 19		 jmp	 SHORT $LN2@unzOpenCur
$LN3@unzOpenCur:

; 1588 :       {
; 1589 :         TRYFREE(pfile_in_zip_read_info);

  0039d	48 83 7c 24 30
	00		 cmp	 QWORD PTR pfile_in_zip_read_info$[rsp], 0
  003a3	74 0b		 je	 SHORT $LN1@unzOpenCur
  003a5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  003aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN1@unzOpenCur:

; 1590 :         return err;

  003b0	8b 44 24 3c	 mov	 eax, DWORD PTR err$[rsp]
  003b4	eb 7c		 jmp	 SHORT $LN23@unzOpenCur
$LN2@unzOpenCur:
$LN4@unzOpenCur:
$LN5@unzOpenCur:

; 1591 :       }
; 1592 :         /* windowBits is passed < 0 to tell that there is no zlib header.
; 1593 :          * Note that in this case inflate *requires* an extra "dummy" byte
; 1594 :          * after the compressed stream in order to complete decompression and
; 1595 :          * return Z_STREAM_END.
; 1596 :          * In unzip, i don't wait absolutely Z_STREAM_END because I known the
; 1597 :          * size of both compressed and uncompressed data
; 1598 :          */
; 1599 :     }
; 1600 :     pfile_in_zip_read_info->rest_read_compressed =
; 1601 :             s->cur_file_info.compressed_size ;

  003b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  003bb	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  003c0	48 8b 80 c8 00
	00 00		 mov	 rax, QWORD PTR [rax+200]
  003c7	48 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], rax

; 1602 :     pfile_in_zip_read_info->rest_read_uncompressed =
; 1603 :             s->cur_file_info.uncompressed_size ;

  003ce	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pfile_in_zip_read_info$[rsp]
  003d3	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  003d8	48 8b 80 d0 00
	00 00		 mov	 rax, QWORD PTR [rax+208]
  003df	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax

; 1604 : 
; 1605 : 
; 1606 :     pfile_in_zip_read_info->pos_in_zipfile =
; 1607 :             s->cur_file_info_internal.offset_curfile + SIZEZIPLOCALHEADER +
; 1608 :               iSizeVar;

  003e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  003eb	48 8b 89 08 01
	00 00		 mov	 rcx, QWORD PTR [rcx+264]
  003f2	8b 44 24 38	 mov	 eax, DWORD PTR iSizeVar$[rsp]
  003f6	48 8d 4c 01 1e	 lea	 rcx, QWORD PTR [rcx+rax+30]
  003fb	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00400	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 1609 : 
; 1610 :     pfile_in_zip_read_info->stream.avail_in = (uInt)0;

  00404	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  00409	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0

; 1611 : 
; 1612 :     s->pfile_in_zip_read = pfile_in_zip_read_info;

  00410	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  00415	48 8b 44 24 30	 mov	 rax, QWORD PTR pfile_in_zip_read_info$[rsp]
  0041a	48 89 81 10 01
	00 00		 mov	 QWORD PTR [rcx+272], rax

; 1613 :                 s->encrypted = 0;

  00421	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]
  00426	c7 80 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+280], 0

; 1614 : 
; 1615 : #    ifndef NOUNCRYPT
; 1616 :     if (password != NULL)
; 1617 :     {
; 1618 :         int i;
; 1619 :         s->pcrc_32_tab = get_crc_table();
; 1620 :         init_keys(password,s->keys,s->pcrc_32_tab);
; 1621 :         if (ZSEEK64(s->z_filefunc, s->filestream,
; 1622 :                   s->pfile_in_zip_read->pos_in_zipfile +
; 1623 :                      s->pfile_in_zip_read->byte_before_the_zipfile,
; 1624 :                   SEEK_SET)!=0)
; 1625 :             return UNZ_INTERNALERROR;
; 1626 :         if(ZREAD64(s->z_filefunc, s->filestream,source, 12)<12)
; 1627 :             return UNZ_INTERNALERROR;
; 1628 : 
; 1629 :         for (i = 0; i<12; i++)
; 1630 :             zdecode(s->keys,s->pcrc_32_tab,source[i]);
; 1631 : 
; 1632 :         s->pfile_in_zip_read->pos_in_zipfile+=12;
; 1633 :         s->encrypted=1;
; 1634 :     }
; 1635 : #    endif
; 1636 : 
; 1637 : 
; 1638 :     return UNZ_OK;

  00430	33 c0		 xor	 eax, eax
$LN23@unzOpenCur:

; 1639 : }

  00432	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  00439	5f		 pop	 rdi
  0043a	5e		 pop	 rsi
  0043b	c3		 ret	 0
unzOpenCurrentFile3 ENDP
_TEXT	ENDS
PUBLIC	unzGoToFilePos64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGoToFilePos64 DD imagerel $LN7
	DD	imagerel $LN7+225
	DD	imagerel $unwind$unzGoToFilePos64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGoToFilePos64 DD 010e01H
	DD	0c20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGoToFilePos64
_TEXT	SEGMENT
s$ = 80
err$ = 88
tv83 = 92
file$ = 112
file_pos$ = 120
unzGoToFilePos64 PROC					; COMDAT

; 1339 : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1340 :     unz64_s* s;
; 1341 :     int err;
; 1342 : 
; 1343 :     if (file==NULL || file_pos==NULL)

  0000e	48 83 7c 24 70
	00		 cmp	 QWORD PTR file$[rsp], 0
  00014	74 08		 je	 SHORT $LN1@unzGoToFil
  00016	48 83 7c 24 78
	00		 cmp	 QWORD PTR file_pos$[rsp], 0
  0001c	75 0a		 jne	 SHORT $LN2@unzGoToFil
$LN1@unzGoToFil:

; 1344 :         return UNZ_PARAMERROR;

  0001e	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00023	e9 b4 00 00 00	 jmp	 $LN3@unzGoToFil
$LN2@unzGoToFil:

; 1345 :     s=(unz64_s*)file;

  00028	48 8b 44 24 70	 mov	 rax, QWORD PTR file$[rsp]
  0002d	48 89 44 24 50	 mov	 QWORD PTR s$[rsp], rax

; 1346 : 
; 1347 :     /* jump to the right spot */
; 1348 :     s->pos_in_central_dir = file_pos->pos_in_zip_directory;

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00037	48 8b 44 24 78	 mov	 rax, QWORD PTR file_pos$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax

; 1349 :     s->num_file           = file_pos->num_of_file;

  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  0004b	48 8b 44 24 78	 mov	 rax, QWORD PTR file_pos$[rsp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax

; 1350 : 
; 1351 :     /* set the current file */
; 1352 :     err = unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,
; 1353 :                                                &s->cur_file_info_internal,
; 1354 :                                                NULL,0,NULL,0,NULL,0);

  0005b	4c 8b 44 24 50	 mov	 r8, QWORD PTR s$[rsp]
  00060	49 81 c0 08 01
	00 00		 add	 r8, 264			; 00000108H
  00067	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  0006c	48 81 c2 b0 00
	00 00		 add	 rdx, 176		; 000000b0H
  00073	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR [rsp+64], 0
  0007b	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00084	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  0008c	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00095	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0009d	45 33 c9	 xor	 r9d, r9d
  000a0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR file$[rsp]
  000a5	e8 00 00 00 00	 call	 unz64local_GetCurrentFileInfoInternal
  000aa	89 44 24 58	 mov	 DWORD PTR err$[rsp], eax

; 1355 :     /* return results */
; 1356 :     s->current_file_ok = (err == UNZ_OK);

  000ae	83 7c 24 58 00	 cmp	 DWORD PTR err$[rsp], 0
  000b3	75 0a		 jne	 SHORT $LN5@unzGoToFil
  000b5	c7 44 24 5c 01
	00 00 00	 mov	 DWORD PTR tv83[rsp], 1
  000bd	eb 08		 jmp	 SHORT $LN6@unzGoToFil
$LN5@unzGoToFil:
  000bf	c7 44 24 5c 00
	00 00 00	 mov	 DWORD PTR tv83[rsp], 0
$LN6@unzGoToFil:
  000c7	48 63 4c 24 5c	 movsxd	 rcx, DWORD PTR tv83[rsp]
  000cc	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  000d1	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 1357 :     return err;

  000d8	8b 44 24 58	 mov	 eax, DWORD PTR err$[rsp]
$LN3@unzGoToFil:

; 1358 : }

  000dc	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000e0	c3		 ret	 0
unzGoToFilePos64 ENDP
_TEXT	ENDS
PUBLIC	unzGoToNextFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGoToNextFile DD imagerel $LN9
	DD	imagerel $LN9+339
	DD	imagerel $unwind$unzGoToNextFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGoToNextFile DD 010901H
	DD	0c209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGoToNextFile
_TEXT	SEGMENT
s$ = 80
err$ = 88
tv133 = 92
file$ = 112
unzGoToNextFile PROC					; COMDAT

; 1200 : {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1201 :     unz64_s* s;
; 1202 :     int err;
; 1203 : 
; 1204 :     if (file==NULL)

  00009	48 83 7c 24 70
	00		 cmp	 QWORD PTR file$[rsp], 0
  0000f	75 0a		 jne	 SHORT $LN4@unzGoToNex

; 1205 :         return UNZ_PARAMERROR;

  00011	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00016	e9 33 01 00 00	 jmp	 $LN5@unzGoToNex
$LN4@unzGoToNex:

; 1206 :     s=(unz64_s*)file;

  0001b	48 8b 44 24 70	 mov	 rax, QWORD PTR file$[rsp]
  00020	48 89 44 24 50	 mov	 QWORD PTR s$[rsp], rax

; 1207 :     if (!s->current_file_ok)

  00025	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  0002a	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00032	75 0a		 jne	 SHORT $LN3@unzGoToNex

; 1208 :         return UNZ_END_OF_LIST_OF_FILE;

  00034	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  00039	e9 10 01 00 00	 jmp	 $LN5@unzGoToNex
$LN3@unzGoToNex:

; 1209 :     if (s->gi.number_entry != 0xffff)    /* 2^16 files overflow hack */

  0003e	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00043	48 81 78 68 ff
	ff 00 00	 cmp	 QWORD PTR [rax+104], 65535 ; 0000ffffH
  0004b	74 25		 je	 SHORT $LN2@unzGoToNex

; 1210 :       if (s->num_file+1==s->gi.number_entry)

  0004d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00052	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00059	48 83 c1 01	 add	 rcx, 1
  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00062	48 3b 48 68	 cmp	 rcx, QWORD PTR [rax+104]
  00066	75 0a		 jne	 SHORT $LN1@unzGoToNex

; 1211 :         return UNZ_END_OF_LIST_OF_FILE;

  00068	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  0006d	e9 dc 00 00 00	 jmp	 $LN5@unzGoToNex
$LN1@unzGoToNex:
$LN2@unzGoToNex:

; 1212 : 
; 1213 :     s->pos_in_central_dir += SIZECENTRALDIRITEM + s->cur_file_info.size_filename +
; 1214 :             s->cur_file_info.size_file_extra + s->cur_file_info.size_file_comment ;

  00072	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00077	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [rax+216]
  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00082	8b 80 dc 00 00
	00		 mov	 eax, DWORD PTR [rax+220]
  00088	8d 44 01 2e	 lea	 eax, DWORD PTR [rcx+rax+46]
  0008c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00091	03 81 e0 00 00
	00		 add	 eax, DWORD PTR [rcx+224]
  00097	8b c8		 mov	 ecx, eax
  00099	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  0009e	48 03 88 88 00
	00 00		 add	 rcx, QWORD PTR [rax+136]
  000a5	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  000aa	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 1215 :     s->num_file++;

  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  000b6	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  000bd	48 83 c1 01	 add	 rcx, 1
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  000c6	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 1216 :     err = unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,
; 1217 :                                                &s->cur_file_info_internal,
; 1218 :                                                NULL,0,NULL,0,NULL,0);

  000cd	4c 8b 44 24 50	 mov	 r8, QWORD PTR s$[rsp]
  000d2	49 81 c0 08 01
	00 00		 add	 r8, 264			; 00000108H
  000d9	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  000de	48 81 c2 b0 00
	00 00		 add	 rdx, 176		; 000000b0H
  000e5	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR [rsp+64], 0
  000ed	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  000f6	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  000fe	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00107	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0010f	45 33 c9	 xor	 r9d, r9d
  00112	48 8b 4c 24 70	 mov	 rcx, QWORD PTR file$[rsp]
  00117	e8 00 00 00 00	 call	 unz64local_GetCurrentFileInfoInternal
  0011c	89 44 24 58	 mov	 DWORD PTR err$[rsp], eax

; 1219 :     s->current_file_ok = (err == UNZ_OK);

  00120	83 7c 24 58 00	 cmp	 DWORD PTR err$[rsp], 0
  00125	75 0a		 jne	 SHORT $LN7@unzGoToNex
  00127	c7 44 24 5c 01
	00 00 00	 mov	 DWORD PTR tv133[rsp], 1
  0012f	eb 08		 jmp	 SHORT $LN8@unzGoToNex
$LN7@unzGoToNex:
  00131	c7 44 24 5c 00
	00 00 00	 mov	 DWORD PTR tv133[rsp], 0
$LN8@unzGoToNex:
  00139	48 63 4c 24 5c	 movsxd	 rcx, DWORD PTR tv133[rsp]
  0013e	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00143	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 1220 :     return err;

  0014a	8b 44 24 58	 mov	 eax, DWORD PTR err$[rsp]
$LN5@unzGoToNex:

; 1221 : }

  0014e	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00152	c3		 ret	 0
unzGoToNextFile ENDP
_TEXT	ENDS
PUBLIC	unzGoToFirstFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGoToFirstFile DD imagerel $LN6
	DD	imagerel $LN6+219
	DD	imagerel $unwind$unzGoToFirstFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGoToFirstFile DD 010901H
	DD	0c209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGoToFirstFile
_TEXT	SEGMENT
s$ = 80
err$ = 88
tv82 = 92
file$ = 112
unzGoToFirstFile PROC					; COMDAT

; 1179 : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1180 :     int err=UNZ_OK;

  00009	c7 44 24 58 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 1181 :     unz64_s* s;
; 1182 :     if (file==NULL)

  00011	48 83 7c 24 70
	00		 cmp	 QWORD PTR file$[rsp], 0
  00017	75 0a		 jne	 SHORT $LN1@unzGoToFir

; 1183 :         return UNZ_PARAMERROR;

  00019	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0001e	e9 b3 00 00 00	 jmp	 $LN2@unzGoToFir
$LN1@unzGoToFir:

; 1184 :     s=(unz64_s*)file;

  00023	48 8b 44 24 70	 mov	 rax, QWORD PTR file$[rsp]
  00028	48 89 44 24 50	 mov	 QWORD PTR s$[rsp], rax

; 1185 :     s->pos_in_central_dir=s->offset_central_dir;

  0002d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR s$[rsp]
  00032	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  00037	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  0003e	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax

; 1186 :     s->num_file=0;

  00045	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  0004a	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 1187 :     err=unz64local_GetCurrentFileInfoInternal(file,&s->cur_file_info,
; 1188 :                                              &s->cur_file_info_internal,
; 1189 :                                              NULL,0,NULL,0,NULL,0);

  00055	4c 8b 44 24 50	 mov	 r8, QWORD PTR s$[rsp]
  0005a	49 81 c0 08 01
	00 00		 add	 r8, 264			; 00000108H
  00061	48 8b 54 24 50	 mov	 rdx, QWORD PTR s$[rsp]
  00066	48 81 c2 b0 00
	00 00		 add	 rdx, 176		; 000000b0H
  0006d	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR [rsp+64], 0
  00075	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  0007e	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00086	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  0008f	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00097	45 33 c9	 xor	 r9d, r9d
  0009a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR file$[rsp]
  0009f	e8 00 00 00 00	 call	 unz64local_GetCurrentFileInfoInternal
  000a4	89 44 24 58	 mov	 DWORD PTR err$[rsp], eax

; 1190 :     s->current_file_ok = (err == UNZ_OK);

  000a8	83 7c 24 58 00	 cmp	 DWORD PTR err$[rsp], 0
  000ad	75 0a		 jne	 SHORT $LN4@unzGoToFir
  000af	c7 44 24 5c 01
	00 00 00	 mov	 DWORD PTR tv82[rsp], 1
  000b7	eb 08		 jmp	 SHORT $LN5@unzGoToFir
$LN4@unzGoToFir:
  000b9	c7 44 24 5c 00
	00 00 00	 mov	 DWORD PTR tv82[rsp], 0
$LN5@unzGoToFir:
  000c1	48 63 4c 24 5c	 movsxd	 rcx, DWORD PTR tv82[rsp]
  000c6	48 8b 44 24 50	 mov	 rax, QWORD PTR s$[rsp]
  000cb	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 1191 :     return err;

  000d2	8b 44 24 58	 mov	 eax, DWORD PTR err$[rsp]
$LN2@unzGoToFir:

; 1192 : }

  000d6	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000da	c3		 ret	 0
unzGoToFirstFile ENDP
_TEXT	ENDS
PUBLIC	unzGetCurrentFileInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetCurrentFileInfo DD imagerel $LN4
	DD	imagerel $LN4+403
	DD	imagerel $unwind$unzGetCurrentFileInfo
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetCurrentFileInfo DD 041d01H
	DD	019011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetCurrentFileInfo
_TEXT	SEGMENT
file_info64$ = 80
err$ = 176
file$ = 224
pfile_info$ = 232
szFileName$ = 240
fileNameBufferSize$ = 248
extraField$ = 256
extraFieldBufferSize$ = 264
szComment$ = 272
commentBufferSize$ = 280
unzGetCurrentFileInfo PROC				; COMDAT

; 1141 : {

$LN4:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H

; 1142 :     int err;
; 1143 :     unz_file_info64 file_info64;
; 1144 :     err = unz64local_GetCurrentFileInfoInternal(file,&file_info64,NULL,
; 1145 :                                                 szFileName,fileNameBufferSize,
; 1146 :                                                 extraField,extraFieldBufferSize,
; 1147 :                                                 szComment,commentBufferSize);

  0001d	8b 84 24 18 01
	00 00		 mov	 eax, DWORD PTR commentBufferSize$[rsp]
  00024	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  00028	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR szComment$[rsp]
  00030	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00035	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR extraFieldBufferSize$[rsp]
  0003c	89 44 24 30	 mov	 DWORD PTR [rsp+48], eax
  00040	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR extraField$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0004d	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR fileNameBufferSize$[rsp]
  00054	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00058	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR szFileName$[rsp]
  00060	45 33 c0	 xor	 r8d, r8d
  00063	48 8d 54 24 50	 lea	 rdx, QWORD PTR file_info64$[rsp]
  00068	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  00070	e8 00 00 00 00	 call	 unz64local_GetCurrentFileInfoInternal
  00075	89 84 24 b0 00
	00 00		 mov	 DWORD PTR err$[rsp], eax

; 1148 :     if (err==UNZ_OK)

  0007c	83 bc 24 b0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  00084	0f 85 f8 00 00
	00		 jne	 $LN1@unzGetCurr@2

; 1149 :     {
; 1150 :         pfile_info->version = file_info64.version;

  0008a	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  00092	8b 44 24 50	 mov	 eax, DWORD PTR file_info64$[rsp]
  00096	89 01		 mov	 DWORD PTR [rcx], eax

; 1151 :         pfile_info->version_needed = file_info64.version_needed;

  00098	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000a0	8b 44 24 54	 mov	 eax, DWORD PTR file_info64$[rsp+4]
  000a4	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 1152 :         pfile_info->flag = file_info64.flag;

  000a7	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000af	8b 44 24 58	 mov	 eax, DWORD PTR file_info64$[rsp+8]
  000b3	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 1153 :         pfile_info->compression_method = file_info64.compression_method;

  000b6	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000be	8b 44 24 5c	 mov	 eax, DWORD PTR file_info64$[rsp+12]
  000c2	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 1154 :         pfile_info->dosDate = file_info64.dosDate;

  000c5	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000cd	8b 44 24 60	 mov	 eax, DWORD PTR file_info64$[rsp+16]
  000d1	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 1155 :         pfile_info->crc = file_info64.crc;

  000d4	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000dc	8b 44 24 64	 mov	 eax, DWORD PTR file_info64$[rsp+20]
  000e0	89 41 14	 mov	 DWORD PTR [rcx+20], eax

; 1156 : 
; 1157 :         pfile_info->size_filename = file_info64.size_filename;

  000e3	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000eb	8b 44 24 78	 mov	 eax, DWORD PTR file_info64$[rsp+40]
  000ef	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 1158 :         pfile_info->size_file_extra = file_info64.size_file_extra;

  000f2	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  000fa	8b 44 24 7c	 mov	 eax, DWORD PTR file_info64$[rsp+44]
  000fe	89 41 24	 mov	 DWORD PTR [rcx+36], eax

; 1159 :         pfile_info->size_file_comment = file_info64.size_file_comment;

  00101	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  00109	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR file_info64$[rsp+48]
  00110	89 41 28	 mov	 DWORD PTR [rcx+40], eax

; 1160 : 
; 1161 :         pfile_info->disk_num_start = file_info64.disk_num_start;

  00113	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  0011b	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR file_info64$[rsp+52]
  00122	89 41 2c	 mov	 DWORD PTR [rcx+44], eax

; 1162 :         pfile_info->internal_fa = file_info64.internal_fa;

  00125	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  0012d	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR file_info64$[rsp+56]
  00134	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 1163 :         pfile_info->external_fa = file_info64.external_fa;

  00137	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  0013f	8b 84 24 8c 00
	00 00		 mov	 eax, DWORD PTR file_info64$[rsp+60]
  00146	89 41 34	 mov	 DWORD PTR [rcx+52], eax

; 1164 : 
; 1165 :         pfile_info->tmu_date = file_info64.tmu_date,
; 1166 : 
; 1167 : 
; 1168 :         pfile_info->compressed_size = (uLong)file_info64.compressed_size;

  00149	48 8b bc 24 e8
	00 00 00	 mov	 rdi, QWORD PTR pfile_info$[rsp]
  00151	48 8d b4 24 90
	00 00 00	 lea	 rsi, QWORD PTR file_info64$[rsp+64]
  00159	48 83 c7 38	 add	 rdi, 56			; 00000038H
  0015d	b9 18 00 00 00	 mov	 ecx, 24
  00162	f3 a4		 rep movsb
  00164	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR pfile_info$[rsp]
  0016c	8b 44 24 68	 mov	 eax, DWORD PTR file_info64$[rsp+24]
  00170	89 42 18	 mov	 DWORD PTR [rdx+24], eax

; 1169 :         pfile_info->uncompressed_size = (uLong)file_info64.uncompressed_size;

  00173	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR pfile_info$[rsp]
  0017b	8b 44 24 70	 mov	 eax, DWORD PTR file_info64$[rsp+32]
  0017f	89 41 1c	 mov	 DWORD PTR [rcx+28], eax
$LN1@unzGetCurr@2:

; 1170 : 
; 1171 :     }
; 1172 :     return err;

  00182	8b 84 24 b0 00
	00 00		 mov	 eax, DWORD PTR err$[rsp]

; 1173 : }

  00189	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  00190	5f		 pop	 rdi
  00191	5e		 pop	 rsi
  00192	c3		 ret	 0
unzGetCurrentFileInfo ENDP
_TEXT	ENDS
PUBLIC	unzGetCurrentFileInfo64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGetCurrentFileInfo64 DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$unzGetCurrentFileInfo64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGetCurrentFileInfo64 DD 011801H
	DD	0a218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGetCurrentFileInfo64
_TEXT	SEGMENT
file$ = 96
pfile_info$ = 104
szFileName$ = 112
fileNameBufferSize$ = 120
extraField$ = 128
extraFieldBufferSize$ = 136
szComment$ = 144
commentBufferSize$ = 152
unzGetCurrentFileInfo64 PROC				; COMDAT

; 1129 : {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 1130 :     return unz64local_GetCurrentFileInfoInternal(file,pfile_info,NULL,
; 1131 :                                                 szFileName,fileNameBufferSize,
; 1132 :                                                 extraField,extraFieldBufferSize,
; 1133 :                                                 szComment,commentBufferSize);

  00018	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR commentBufferSize$[rsp]
  0001f	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  00023	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR szComment$[rsp]
  0002b	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00030	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR extraFieldBufferSize$[rsp]
  00037	89 44 24 30	 mov	 DWORD PTR [rsp+48], eax
  0003b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR extraField$[rsp]
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	8b 44 24 78	 mov	 eax, DWORD PTR fileNameBufferSize$[rsp]
  0004c	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00050	4c 8b 4c 24 70	 mov	 r9, QWORD PTR szFileName$[rsp]
  00055	45 33 c0	 xor	 r8d, r8d
  00058	48 8b 54 24 68	 mov	 rdx, QWORD PTR pfile_info$[rsp]
  0005d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR file$[rsp]
  00062	e8 00 00 00 00	 call	 unz64local_GetCurrentFileInfoInternal

; 1134 : }

  00067	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0006b	c3		 ret	 0
unzGetCurrentFileInfo64 ENDP
_TEXT	ENDS
PUBLIC	$T84040
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpenInternal DD imagerel unzOpenInternal
	DD	imagerel unzOpenInternal+1402
	DD	imagerel $unwind$unzOpenInternal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpenInternal DD 041801H
	DD	03d0118H
	DD	060107011H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpenInternal
_TEXT	SEGMENT
number_disk$ = 32
s$ = 40
uL$ = 48
err$ = 52
number_entry_CD$ = 56
number_disk_with_CD$ = 64
us$ = 80
central_pos$ = 368
uL64$80239 = 376
uS$80238 = 384
$T84040 = 392
path$ = 512
pzlib_filefunc64_32_def$ = 520
is64bitOpenFunction$ = 528
unzOpenInternal PROC					; COMDAT

; 587  : {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H

; 588  :     unz64_s us;
; 589  :     unz64_s *s;
; 590  :     ZPOS64_T central_pos;
; 591  :     uLong   uL;
; 592  : 
; 593  :     uLong number_disk;          /* number of the current dist, used for
; 594  :                                    spaning ZIP, unsupported, always 0*/
; 595  :     uLong number_disk_with_CD;  /* number the the disk with central dir, used
; 596  :                                    for spaning ZIP, unsupported, always 0*/
; 597  :     ZPOS64_T number_entry_CD;      /* total number of entries in
; 598  :                                    the central dir
; 599  :                                    (same than number_entry on nospan) */
; 600  : 
; 601  :     int err=UNZ_OK;

  00018	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR err$[rsp], 0

; 602  : 
; 603  :     if (unz_copyright[0]!=' ')

  00020	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR unz_copyright
  00027	83 f8 20	 cmp	 eax, 32			; 00000020H
  0002a	74 07		 je	 SHORT $LN34@unzOpenInt

; 604  :         return NULL;

  0002c	33 c0		 xor	 eax, eax
  0002e	e9 3d 05 00 00	 jmp	 $LN35@unzOpenInt
$LN34@unzOpenInt:

; 605  : 
; 606  :     us.z_filefunc.zseek32_file = NULL;

  00033	48 c7 84 24 a0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR us$[rsp+80], 0

; 607  :     us.z_filefunc.ztell32_file = NULL;

  0003f	48 c7 84 24 98
	00 00 00 00 00
	00 00		 mov	 QWORD PTR us$[rsp+72], 0

; 608  :     if (pzlib_filefunc64_32_def==NULL)

  0004b	48 83 bc 24 08
	02 00 00 00	 cmp	 QWORD PTR pzlib_filefunc64_32_def$[rsp], 0
  00054	75 0c		 jne	 SHORT $LN33@unzOpenInt

; 609  :         fill_fopen64_filefunc(&us.z_filefunc.zfile_func64);

  00056	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0005b	e8 00 00 00 00	 call	 fill_fopen64_filefunc

; 610  :     else

  00060	eb 2b		 jmp	 SHORT $LN32@unzOpenInt
$LN33@unzOpenInt:

; 611  :         us.z_filefunc = *pzlib_filefunc64_32_def;

  00062	48 8d bc 24 88
	01 00 00	 lea	 rdi, QWORD PTR $T84040[rsp]
  0006a	48 8b b4 24 08
	02 00 00	 mov	 rsi, QWORD PTR pzlib_filefunc64_32_def$[rsp]
  00072	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00077	f3 a4		 rep movsb
  00079	48 8d 7c 24 50	 lea	 rdi, QWORD PTR us$[rsp]
  0007e	48 8d b4 24 88
	01 00 00	 lea	 rsi, QWORD PTR $T84040[rsp]
  00086	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  0008b	f3 a4		 rep movsb
$LN32@unzOpenInt:

; 612  :     us.is64bitOpenFunction = is64bitOpenFunction;

  0008d	8b 84 24 10 02
	00 00		 mov	 eax, DWORD PTR is64bitOpenFunction$[rsp]
  00094	89 84 24 a8 00
	00 00		 mov	 DWORD PTR us$[rsp+88], eax

; 613  : 
; 614  : 
; 615  : 
; 616  :     us.filestream = ZOPEN64(us.z_filefunc,
; 617  :                                                  path,
; 618  :                                                  ZLIB_FILEFUNC_MODE_READ |
; 619  :                                                  ZLIB_FILEFUNC_MODE_EXISTING);

  0009b	41 b8 05 00 00
	00		 mov	 r8d, 5
  000a1	48 8b 94 24 00
	02 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  000a9	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  000ae	e8 00 00 00 00	 call	 call_zopen64
  000b3	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR us$[rsp+96], rax

; 620  :     if (us.filestream==NULL)

  000bb	48 83 bc 24 b0
	00 00 00 00	 cmp	 QWORD PTR us$[rsp+96], 0
  000c4	75 07		 jne	 SHORT $LN31@unzOpenInt

; 621  :         return NULL;

  000c6	33 c0		 xor	 eax, eax
  000c8	e9 a3 04 00 00	 jmp	 $LN35@unzOpenInt
$LN31@unzOpenInt:

; 622  : 
; 623  :     central_pos = unz64local_SearchCentralDir64(&us.z_filefunc,us.filestream);

  000cd	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  000d5	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  000da	e8 00 00 00 00	 call	 unz64local_SearchCentralDir64
  000df	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR central_pos$[rsp], rax

; 624  :     if (central_pos)

  000e7	48 83 bc 24 70
	01 00 00 00	 cmp	 QWORD PTR central_pos$[rsp], 0
  000f0	0f 84 d9 01 00
	00		 je	 $LN30@unzOpenInt

; 625  :     {
; 626  :         uLong uS;
; 627  :         ZPOS64_T uL64;
; 628  : 
; 629  :         us.isZip64 = 1;

  000f6	c7 84 24 6c 01
	00 00 01 00 00
	00		 mov	 DWORD PTR us$[rsp+284], 1

; 630  : 
; 631  :         if (ZSEEK64(us.z_filefunc, us.filestream,
; 632  :                                       central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00101	45 33 c9	 xor	 r9d, r9d
  00104	4c 8b 84 24 70
	01 00 00	 mov	 r8, QWORD PTR central_pos$[rsp]
  0010c	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00114	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00119	e8 00 00 00 00	 call	 call_zseek64
  0011e	85 c0		 test	 eax, eax
  00120	74 08		 je	 SHORT $LN29@unzOpenInt

; 633  :         err=UNZ_ERRNO;

  00122	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN29@unzOpenInt:

; 634  : 
; 635  :         /* the signature, already checked */
; 636  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  0012a	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  0012f	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00137	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0013c	e8 00 00 00 00	 call	 unz64local_getLong
  00141	85 c0		 test	 eax, eax
  00143	74 08		 je	 SHORT $LN28@unzOpenInt

; 637  :             err=UNZ_ERRNO;

  00145	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN28@unzOpenInt:

; 638  : 
; 639  :         /* size of zip64 end of central directory record */
; 640  :         if (unz64local_getLong64(&us.z_filefunc, us.filestream,&uL64)!=UNZ_OK)

  0014d	4c 8d 84 24 78
	01 00 00	 lea	 r8, QWORD PTR uL64$80239[rsp]
  00155	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  0015d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00162	e8 00 00 00 00	 call	 unz64local_getLong64
  00167	85 c0		 test	 eax, eax
  00169	74 08		 je	 SHORT $LN27@unzOpenInt

; 641  :             err=UNZ_ERRNO;

  0016b	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN27@unzOpenInt:

; 642  : 
; 643  :         /* version made by */
; 644  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&uS)!=UNZ_OK)

  00173	4c 8d 84 24 80
	01 00 00	 lea	 r8, QWORD PTR uS$80238[rsp]
  0017b	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00183	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00188	e8 00 00 00 00	 call	 unz64local_getShort
  0018d	85 c0		 test	 eax, eax
  0018f	74 08		 je	 SHORT $LN26@unzOpenInt

; 645  :             err=UNZ_ERRNO;

  00191	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN26@unzOpenInt:

; 646  : 
; 647  :         /* version needed to extract */
; 648  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&uS)!=UNZ_OK)

  00199	4c 8d 84 24 80
	01 00 00	 lea	 r8, QWORD PTR uS$80238[rsp]
  001a1	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  001a9	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  001ae	e8 00 00 00 00	 call	 unz64local_getShort
  001b3	85 c0		 test	 eax, eax
  001b5	74 08		 je	 SHORT $LN25@unzOpenInt

; 649  :             err=UNZ_ERRNO;

  001b7	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN25@unzOpenInt:

; 650  : 
; 651  :         /* number of this disk */
; 652  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&number_disk)!=UNZ_OK)

  001bf	4c 8d 44 24 20	 lea	 r8, QWORD PTR number_disk$[rsp]
  001c4	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  001cc	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  001d1	e8 00 00 00 00	 call	 unz64local_getLong
  001d6	85 c0		 test	 eax, eax
  001d8	74 08		 je	 SHORT $LN24@unzOpenInt

; 653  :             err=UNZ_ERRNO;

  001da	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN24@unzOpenInt:

; 654  : 
; 655  :         /* number of the disk with the start of the central directory */
; 656  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&number_disk_with_CD)!=UNZ_OK)

  001e2	4c 8d 44 24 40	 lea	 r8, QWORD PTR number_disk_with_CD$[rsp]
  001e7	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  001ef	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  001f4	e8 00 00 00 00	 call	 unz64local_getLong
  001f9	85 c0		 test	 eax, eax
  001fb	74 08		 je	 SHORT $LN23@unzOpenInt

; 657  :             err=UNZ_ERRNO;

  001fd	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN23@unzOpenInt:

; 658  : 
; 659  :         /* total number of entries in the central directory on this disk */
; 660  :         if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.gi.number_entry)!=UNZ_OK)

  00205	4c 8d 84 24 b8
	00 00 00	 lea	 r8, QWORD PTR us$[rsp+104]
  0020d	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00215	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0021a	e8 00 00 00 00	 call	 unz64local_getLong64
  0021f	85 c0		 test	 eax, eax
  00221	74 08		 je	 SHORT $LN22@unzOpenInt

; 661  :             err=UNZ_ERRNO;

  00223	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN22@unzOpenInt:

; 662  : 
; 663  :         /* total number of entries in the central directory */
; 664  :         if (unz64local_getLong64(&us.z_filefunc, us.filestream,&number_entry_CD)!=UNZ_OK)

  0022b	4c 8d 44 24 38	 lea	 r8, QWORD PTR number_entry_CD$[rsp]
  00230	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00238	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0023d	e8 00 00 00 00	 call	 unz64local_getLong64
  00242	85 c0		 test	 eax, eax
  00244	74 08		 je	 SHORT $LN21@unzOpenInt

; 665  :             err=UNZ_ERRNO;

  00246	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN21@unzOpenInt:

; 666  : 
; 667  :         if ((number_entry_CD!=us.gi.number_entry) ||
; 668  :             (number_disk_with_CD!=0) ||
; 669  :             (number_disk!=0))

  0024e	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR us$[rsp+104]
  00256	48 39 44 24 38	 cmp	 QWORD PTR number_entry_CD$[rsp], rax
  0025b	75 0e		 jne	 SHORT $LN19@unzOpenInt
  0025d	83 7c 24 40 00	 cmp	 DWORD PTR number_disk_with_CD$[rsp], 0
  00262	75 07		 jne	 SHORT $LN19@unzOpenInt
  00264	83 7c 24 20 00	 cmp	 DWORD PTR number_disk$[rsp], 0
  00269	74 08		 je	 SHORT $LN20@unzOpenInt
$LN19@unzOpenInt:

; 670  :             err=UNZ_BADZIPFILE;

  0026b	c7 44 24 34 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN20@unzOpenInt:

; 671  : 
; 672  :         /* size of the central directory */
; 673  :         if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.size_central_dir)!=UNZ_OK)

  00273	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR us$[rsp+160]
  0027b	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00283	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00288	e8 00 00 00 00	 call	 unz64local_getLong64
  0028d	85 c0		 test	 eax, eax
  0028f	74 08		 je	 SHORT $LN18@unzOpenInt

; 674  :             err=UNZ_ERRNO;

  00291	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN18@unzOpenInt:

; 675  : 
; 676  :         /* offset of start of central directory with respect to the
; 677  :           starting disk number */
; 678  :         if (unz64local_getLong64(&us.z_filefunc, us.filestream,&us.offset_central_dir)!=UNZ_OK)

  00299	4c 8d 84 24 f8
	00 00 00	 lea	 r8, QWORD PTR us$[rsp+168]
  002a1	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  002a9	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  002ae	e8 00 00 00 00	 call	 unz64local_getLong64
  002b3	85 c0		 test	 eax, eax
  002b5	74 08		 je	 SHORT $LN17@unzOpenInt

; 679  :             err=UNZ_ERRNO;

  002b7	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN17@unzOpenInt:

; 680  : 
; 681  :         us.gi.size_comment = 0;

  002bf	c7 84 24 c0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR us$[rsp+112], 0

; 682  :     }
; 683  :     else

  002ca	e9 ce 01 00 00	 jmp	 $LN16@unzOpenInt
$LN30@unzOpenInt:

; 684  :     {
; 685  :         central_pos = unz64local_SearchCentralDir(&us.z_filefunc,us.filestream);

  002cf	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  002d7	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  002dc	e8 00 00 00 00	 call	 unz64local_SearchCentralDir
  002e1	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR central_pos$[rsp], rax

; 686  :         if (central_pos==0)

  002e9	48 83 bc 24 70
	01 00 00 00	 cmp	 QWORD PTR central_pos$[rsp], 0
  002f2	75 08		 jne	 SHORT $LN15@unzOpenInt

; 687  :             err=UNZ_ERRNO;

  002f4	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN15@unzOpenInt:

; 688  : 
; 689  :         us.isZip64 = 0;

  002fc	c7 84 24 6c 01
	00 00 00 00 00
	00		 mov	 DWORD PTR us$[rsp+284], 0

; 690  : 
; 691  :         if (ZSEEK64(us.z_filefunc, us.filestream,
; 692  :                                         central_pos,ZLIB_FILEFUNC_SEEK_SET)!=0)

  00307	45 33 c9	 xor	 r9d, r9d
  0030a	4c 8b 84 24 70
	01 00 00	 mov	 r8, QWORD PTR central_pos$[rsp]
  00312	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  0031a	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0031f	e8 00 00 00 00	 call	 call_zseek64
  00324	85 c0		 test	 eax, eax
  00326	74 08		 je	 SHORT $LN14@unzOpenInt

; 693  :             err=UNZ_ERRNO;

  00328	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN14@unzOpenInt:

; 694  : 
; 695  :         /* the signature, already checked */
; 696  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  00330	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  00335	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  0033d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00342	e8 00 00 00 00	 call	 unz64local_getLong
  00347	85 c0		 test	 eax, eax
  00349	74 08		 je	 SHORT $LN13@unzOpenInt

; 697  :             err=UNZ_ERRNO;

  0034b	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN13@unzOpenInt:

; 698  : 
; 699  :         /* number of this disk */
; 700  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&number_disk)!=UNZ_OK)

  00353	4c 8d 44 24 20	 lea	 r8, QWORD PTR number_disk$[rsp]
  00358	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00360	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00365	e8 00 00 00 00	 call	 unz64local_getShort
  0036a	85 c0		 test	 eax, eax
  0036c	74 08		 je	 SHORT $LN12@unzOpenInt

; 701  :             err=UNZ_ERRNO;

  0036e	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN12@unzOpenInt:

; 702  : 
; 703  :         /* number of the disk with the start of the central directory */
; 704  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&number_disk_with_CD)!=UNZ_OK)

  00376	4c 8d 44 24 40	 lea	 r8, QWORD PTR number_disk_with_CD$[rsp]
  0037b	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00383	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  00388	e8 00 00 00 00	 call	 unz64local_getShort
  0038d	85 c0		 test	 eax, eax
  0038f	74 08		 je	 SHORT $LN11@unzOpenInt

; 705  :             err=UNZ_ERRNO;

  00391	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN11@unzOpenInt:

; 706  : 
; 707  :         /* total number of entries in the central dir on this disk */
; 708  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  00399	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  0039e	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  003a6	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  003ab	e8 00 00 00 00	 call	 unz64local_getShort
  003b0	85 c0		 test	 eax, eax
  003b2	74 08		 je	 SHORT $LN10@unzOpenInt

; 709  :             err=UNZ_ERRNO;

  003b4	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN10@unzOpenInt:

; 710  :         us.gi.number_entry = uL;

  003bc	8b 44 24 30	 mov	 eax, DWORD PTR uL$[rsp]
  003c0	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR us$[rsp+104], rax

; 711  : 
; 712  :         /* total number of entries in the central dir */
; 713  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  003c8	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  003cd	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  003d5	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  003da	e8 00 00 00 00	 call	 unz64local_getShort
  003df	85 c0		 test	 eax, eax
  003e1	74 08		 je	 SHORT $LN9@unzOpenInt

; 714  :             err=UNZ_ERRNO;

  003e3	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN9@unzOpenInt:

; 715  :         number_entry_CD = uL;

  003eb	8b 44 24 30	 mov	 eax, DWORD PTR uL$[rsp]
  003ef	48 89 44 24 38	 mov	 QWORD PTR number_entry_CD$[rsp], rax

; 716  : 
; 717  :         if ((number_entry_CD!=us.gi.number_entry) ||
; 718  :             (number_disk_with_CD!=0) ||
; 719  :             (number_disk!=0))

  003f4	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR us$[rsp+104]
  003fc	48 39 44 24 38	 cmp	 QWORD PTR number_entry_CD$[rsp], rax
  00401	75 0e		 jne	 SHORT $LN7@unzOpenInt
  00403	83 7c 24 40 00	 cmp	 DWORD PTR number_disk_with_CD$[rsp], 0
  00408	75 07		 jne	 SHORT $LN7@unzOpenInt
  0040a	83 7c 24 20 00	 cmp	 DWORD PTR number_disk$[rsp], 0
  0040f	74 08		 je	 SHORT $LN8@unzOpenInt
$LN7@unzOpenInt:

; 720  :             err=UNZ_BADZIPFILE;

  00411	c7 44 24 34 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN8@unzOpenInt:

; 721  : 
; 722  :         /* size of the central directory */
; 723  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  00419	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  0041e	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00426	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0042b	e8 00 00 00 00	 call	 unz64local_getLong
  00430	85 c0		 test	 eax, eax
  00432	74 08		 je	 SHORT $LN6@unzOpenInt

; 724  :             err=UNZ_ERRNO;

  00434	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN6@unzOpenInt:

; 725  :         us.size_central_dir = uL;

  0043c	8b 44 24 30	 mov	 eax, DWORD PTR uL$[rsp]
  00440	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR us$[rsp+160], rax

; 726  : 
; 727  :         /* offset of start of central directory with respect to the
; 728  :             starting disk number */
; 729  :         if (unz64local_getLong(&us.z_filefunc, us.filestream,&uL)!=UNZ_OK)

  00448	4c 8d 44 24 30	 lea	 r8, QWORD PTR uL$[rsp]
  0044d	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00455	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0045a	e8 00 00 00 00	 call	 unz64local_getLong
  0045f	85 c0		 test	 eax, eax
  00461	74 08		 je	 SHORT $LN5@unzOpenInt

; 730  :             err=UNZ_ERRNO;

  00463	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN5@unzOpenInt:

; 731  :         us.offset_central_dir = uL;

  0046b	8b 44 24 30	 mov	 eax, DWORD PTR uL$[rsp]
  0046f	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR us$[rsp+168], rax

; 732  : 
; 733  :         /* zipfile comment length */
; 734  :         if (unz64local_getShort(&us.z_filefunc, us.filestream,&us.gi.size_comment)!=UNZ_OK)

  00477	4c 8d 84 24 c0
	00 00 00	 lea	 r8, QWORD PTR us$[rsp+112]
  0047f	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  00487	48 8d 4c 24 50	 lea	 rcx, QWORD PTR us$[rsp]
  0048c	e8 00 00 00 00	 call	 unz64local_getShort
  00491	85 c0		 test	 eax, eax
  00493	74 08		 je	 SHORT $LN4@unzOpenInt

; 735  :             err=UNZ_ERRNO;

  00495	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR err$[rsp], -1
$LN4@unzOpenInt:
$LN16@unzOpenInt:

; 736  :     }
; 737  : 
; 738  :     if ((central_pos<us.offset_central_dir+us.size_central_dir) &&
; 739  :         (err==UNZ_OK))

  0049d	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR us$[rsp+160]
  004a5	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR us$[rsp+168]
  004ad	48 03 c1	 add	 rax, rcx
  004b0	48 39 84 24 70
	01 00 00	 cmp	 QWORD PTR central_pos$[rsp], rax
  004b8	73 0f		 jae	 SHORT $LN3@unzOpenInt
  004ba	83 7c 24 34 00	 cmp	 DWORD PTR err$[rsp], 0
  004bf	75 08		 jne	 SHORT $LN3@unzOpenInt

; 740  :         err=UNZ_BADZIPFILE;

  004c1	c7 44 24 34 99
	ff ff ff	 mov	 DWORD PTR err$[rsp], -103 ; ffffffffffffff99H
$LN3@unzOpenInt:

; 741  : 
; 742  :     if (err!=UNZ_OK)

  004c9	83 7c 24 34 00	 cmp	 DWORD PTR err$[rsp], 0
  004ce	74 1b		 je	 SHORT $LN2@unzOpenInt

; 743  :     {
; 744  :         ZCLOSE64(us.z_filefunc, us.filestream);

  004d0	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR us$[rsp+96]
  004d8	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR us$[rsp+56]
  004e0	ff 54 24 78	 call	 QWORD PTR us$[rsp+40]

; 745  :         return NULL;

  004e4	33 c0		 xor	 eax, eax
  004e6	e9 85 00 00 00	 jmp	 $LN35@unzOpenInt
$LN2@unzOpenInt:

; 746  :     }
; 747  : 
; 748  :     us.byte_before_the_zipfile = central_pos -
; 749  :                             (us.offset_central_dir+us.size_central_dir);

  004eb	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR us$[rsp+160]
  004f3	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR us$[rsp+168]
  004fb	48 03 c8	 add	 rcx, rax
  004fe	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR central_pos$[rsp]
  00506	48 2b c1	 sub	 rax, rcx
  00509	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR us$[rsp+120], rax

; 750  :     us.central_pos = central_pos;

  00511	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR central_pos$[rsp]
  00519	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR us$[rsp+152], rax

; 751  :     us.pfile_in_zip_read = NULL;

  00521	48 c7 84 24 60
	01 00 00 00 00
	00 00		 mov	 QWORD PTR us$[rsp+272], 0

; 752  :     us.encrypted = 0;

  0052d	c7 84 24 68 01
	00 00 00 00 00
	00		 mov	 DWORD PTR us$[rsp+280], 0

; 753  : 
; 754  : 
; 755  :     s=(unz64_s*)ALLOC(sizeof(unz64_s));

  00538	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  0053d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  00543	48 89 44 24 28	 mov	 QWORD PTR s$[rsp], rax

; 756  :     if( s != NULL)

  00548	48 83 7c 24 28
	00		 cmp	 QWORD PTR s$[rsp], 0
  0054e	74 1b		 je	 SHORT $LN1@unzOpenInt

; 757  :     {
; 758  :         *s=us;

  00550	48 8d 74 24 50	 lea	 rsi, QWORD PTR us$[rsp]
  00555	48 8b 7c 24 28	 mov	 rdi, QWORD PTR s$[rsp]
  0055a	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  0055f	f3 a4		 rep movsb

; 759  :         unzGoToFirstFile((unzFile)s);

  00561	48 8b 4c 24 28	 mov	 rcx, QWORD PTR s$[rsp]
  00566	e8 00 00 00 00	 call	 unzGoToFirstFile
$LN1@unzOpenInt:

; 760  :     }
; 761  :     return (unzFile)s;

  0056b	48 8b 44 24 28	 mov	 rax, QWORD PTR s$[rsp]
$LN35@unzOpenInt:

; 762  : }

  00570	48 81 c4 e8 01
	00 00		 add	 rsp, 488		; 000001e8H
  00577	5f		 pop	 rdi
  00578	5e		 pop	 rsi
  00579	c3		 ret	 0
unzOpenInternal ENDP
PUBLIC	unzOpenCurrentFile2
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpenCurrentFile2 DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$unzOpenCurrentFile2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpenCurrentFile2 DD 011801H
	DD	06218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpenCurrentFile2
_TEXT	SEGMENT
file$ = 64
method$ = 72
level$ = 80
raw$ = 88
unzOpenCurrentFile2 PROC				; COMDAT

; 1652 : {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1653 :     return unzOpenCurrentFile3(file, method, level, raw, NULL);

  00018	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00021	44 8b 4c 24 58	 mov	 r9d, DWORD PTR raw$[rsp]
  00026	4c 8b 44 24 50	 mov	 r8, QWORD PTR level$[rsp]
  0002b	48 8b 54 24 48	 mov	 rdx, QWORD PTR method$[rsp]
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR file$[rsp]
  00035	e8 00 00 00 00	 call	 unzOpenCurrentFile3

; 1654 : }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
unzOpenCurrentFile2 ENDP
_TEXT	ENDS
PUBLIC	unzOpenCurrentFilePassword
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpenCurrentFilePassword DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$unzOpenCurrentFilePassword
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpenCurrentFilePassword DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpenCurrentFilePassword
_TEXT	SEGMENT
file$ = 64
password$ = 72
unzOpenCurrentFilePassword PROC				; COMDAT

; 1647 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1648 :     return unzOpenCurrentFile3(file, NULL, NULL, 0, password);

  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR password$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00018	45 33 c9	 xor	 r9d, r9d
  0001b	45 33 c0	 xor	 r8d, r8d
  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 40	 mov	 rcx, QWORD PTR file$[rsp]
  00025	e8 00 00 00 00	 call	 unzOpenCurrentFile3

; 1649 : }

  0002a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0002e	c3		 ret	 0
unzOpenCurrentFilePassword ENDP
_TEXT	ENDS
PUBLIC	unzOpenCurrentFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpenCurrentFile DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$unzOpenCurrentFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpenCurrentFile DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpenCurrentFile
_TEXT	SEGMENT
file$ = 64
unzOpenCurrentFile PROC					; COMDAT

; 1642 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1643 :     return unzOpenCurrentFile3(file, NULL, NULL, 0, NULL);

  00009	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00012	45 33 c9	 xor	 r9d, r9d
  00015	45 33 c0	 xor	 r8d, r8d
  00018	33 d2		 xor	 edx, edx
  0001a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR file$[rsp]
  0001f	e8 00 00 00 00	 call	 unzOpenCurrentFile3

; 1644 : }

  00024	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00028	c3		 ret	 0
unzOpenCurrentFile ENDP
_TEXT	ENDS
PUBLIC	unzGoToFilePos
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzGoToFilePos DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$unzGoToFilePos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzGoToFilePos DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzGoToFilePos
_TEXT	SEGMENT
file_pos64$ = 32
file$ = 64
file_pos$ = 72
unzGoToFilePos PROC					; COMDAT

; 1363 : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1364 :     unz64_file_pos file_pos64;
; 1365 :     if (file_pos == NULL)

  0000e	48 83 7c 24 48
	00		 cmp	 QWORD PTR file_pos$[rsp], 0
  00014	75 07		 jne	 SHORT $LN1@unzGoToFil@2

; 1366 :         return UNZ_PARAMERROR;

  00016	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  0001b	eb 28		 jmp	 SHORT $LN2@unzGoToFil@2
$LN1@unzGoToFil@2:

; 1367 : 
; 1368 :     file_pos64.pos_in_zip_directory = file_pos->pos_in_zip_directory;

  0001d	48 8b 44 24 48	 mov	 rax, QWORD PTR file_pos$[rsp]
  00022	8b 00		 mov	 eax, DWORD PTR [rax]
  00024	48 89 44 24 20	 mov	 QWORD PTR file_pos64$[rsp], rax

; 1369 :     file_pos64.num_of_file = file_pos->num_of_file;

  00029	48 8b 44 24 48	 mov	 rax, QWORD PTR file_pos$[rsp]
  0002e	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00031	48 89 44 24 28	 mov	 QWORD PTR file_pos64$[rsp+8], rax

; 1370 :     return unzGoToFilePos64(file,&file_pos64);

  00036	48 8d 54 24 20	 lea	 rdx, QWORD PTR file_pos64$[rsp]
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR file$[rsp]
  00040	e8 00 00 00 00	 call	 unzGoToFilePos64
$LN2@unzGoToFil@2:

; 1371 : }

  00045	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00049	c3		 ret	 0
unzGoToFilePos ENDP
_TEXT	ENDS
PUBLIC	$T84355
PUBLIC	unzLocateFile
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzLocateFile DD imagerel $LN10
	DD	imagerel $LN10+531
	DD	imagerel $unwind$unzLocateFile
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzLocateFile DD 041801H
	DD	0490118H
	DD	060107011H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzLocateFile
_TEXT	SEGMENT
cur_file_infoSaved$ = 64
pos_in_central_dirSaved$ = 160
s$ = 168
cur_file_info_internalSaved$ = 176
num_fileSaved$ = 184
err$ = 192
szCurrentFileName$80570 = 208
$T84355 = 480
file$ = 608
szFileName$ = 616
iCaseSensitivity$ = 624
unzLocateFile PROC					; COMDAT

; 1233 : {

$LN10:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H

; 1234 :     unz64_s* s;
; 1235 :     int err;
; 1236 : 
; 1237 :     /* We remember the 'current' position in the file so that we can jump
; 1238 :      * back there if we fail.
; 1239 :      */
; 1240 :     unz_file_info64 cur_file_infoSaved;
; 1241 :     unz_file_info64_internal cur_file_info_internalSaved;
; 1242 :     ZPOS64_T num_fileSaved;
; 1243 :     ZPOS64_T pos_in_central_dirSaved;
; 1244 : 
; 1245 : 
; 1246 :     if (file==NULL)

  00018	48 83 bc 24 60
	02 00 00 00	 cmp	 QWORD PTR file$[rsp], 0
  00021	75 0a		 jne	 SHORT $LN7@unzLocateF

; 1247 :         return UNZ_PARAMERROR;

  00023	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00028	e9 dc 01 00 00	 jmp	 $LN8@unzLocateF
$LN7@unzLocateF:

; 1248 : 
; 1249 :     if (strlen(szFileName)>=UNZ_MAXFILENAMEINZIP)

  0002d	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR szFileName$[rsp]
  00035	e8 00 00 00 00	 call	 strlen
  0003a	48 3d 00 01 00
	00		 cmp	 rax, 256		; 00000100H
  00040	72 0a		 jb	 SHORT $LN6@unzLocateF

; 1250 :         return UNZ_PARAMERROR;

  00042	b8 9a ff ff ff	 mov	 eax, -102		; ffffffffffffff9aH
  00047	e9 bd 01 00 00	 jmp	 $LN8@unzLocateF
$LN6@unzLocateF:

; 1251 : 
; 1252 :     s=(unz64_s*)file;

  0004c	48 8b 84 24 60
	02 00 00	 mov	 rax, QWORD PTR file$[rsp]
  00054	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR s$[rsp], rax

; 1253 :     if (!s->current_file_ok)

  0005c	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR s$[rsp]
  00064	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0006c	75 0a		 jne	 SHORT $LN5@unzLocateF

; 1254 :         return UNZ_END_OF_LIST_OF_FILE;

  0006e	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  00073	e9 91 01 00 00	 jmp	 $LN8@unzLocateF
$LN5@unzLocateF:

; 1255 : 
; 1256 :     /* Save the current state */
; 1257 :     num_fileSaved = s->num_file;

  00078	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR s$[rsp]
  00080	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00087	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR num_fileSaved$[rsp], rax

; 1258 :     pos_in_central_dirSaved = s->pos_in_central_dir;

  0008f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR s$[rsp]
  00097	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  0009e	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR pos_in_central_dirSaved$[rsp], rax

; 1259 :     cur_file_infoSaved = s->cur_file_info;

  000a6	48 8d bc 24 e0
	01 00 00	 lea	 rdi, QWORD PTR $T84355[rsp]
  000ae	48 8b b4 24 a8
	00 00 00	 mov	 rsi, QWORD PTR s$[rsp]
  000b6	48 81 c6 b0 00
	00 00		 add	 rsi, 176		; 000000b0H
  000bd	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  000c2	f3 a4		 rep movsb
  000c4	48 8d 7c 24 40	 lea	 rdi, QWORD PTR cur_file_infoSaved$[rsp]
  000c9	48 8d b4 24 e0
	01 00 00	 lea	 rsi, QWORD PTR $T84355[rsp]
  000d1	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  000d6	f3 a4		 rep movsb

; 1260 :     cur_file_info_internalSaved = s->cur_file_info_internal;

  000d8	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR s$[rsp]
  000e0	48 8b 80 08 01
	00 00		 mov	 rax, QWORD PTR [rax+264]
  000e7	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR cur_file_info_internalSaved$[rsp], rax

; 1261 : 
; 1262 :     err = unzGoToFirstFile(file);

  000ef	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  000f7	e8 00 00 00 00	 call	 unzGoToFirstFile
  000fc	89 84 24 c0 00
	00 00		 mov	 DWORD PTR err$[rsp], eax
$LN4@unzLocateF:

; 1263 : 
; 1264 :     while (err == UNZ_OK)

  00103	83 bc 24 c0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  0010b	0f 85 91 00 00
	00		 jne	 $LN3@unzLocateF

; 1265 :     {
; 1266 :         char szCurrentFileName[UNZ_MAXFILENAMEINZIP+1];
; 1267 :         err = unzGetCurrentFileInfo64(file,NULL,
; 1268 :                                     szCurrentFileName,sizeof(szCurrentFileName)-1,
; 1269 :                                     NULL,0,NULL,0);

  00111	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  00119	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00122	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  0012a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00133	41 b9 00 01 00
	00		 mov	 r9d, 256		; 00000100H
  00139	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR szCurrentFileName$80570[rsp]
  00141	33 d2		 xor	 edx, edx
  00143	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  0014b	e8 00 00 00 00	 call	 unzGetCurrentFileInfo64
  00150	89 84 24 c0 00
	00 00		 mov	 DWORD PTR err$[rsp], eax

; 1270 :         if (err == UNZ_OK)

  00157	83 bc 24 c0 00
	00 00 00	 cmp	 DWORD PTR err$[rsp], 0
  0015f	75 3c		 jne	 SHORT $LN2@unzLocateF

; 1271 :         {
; 1272 :             if (unzStringFileNameCompare(szCurrentFileName,
; 1273 :                                             szFileName,iCaseSensitivity)==0)

  00161	44 8b 84 24 70
	02 00 00	 mov	 r8d, DWORD PTR iCaseSensitivity$[rsp]
  00169	48 8b 94 24 68
	02 00 00	 mov	 rdx, QWORD PTR szFileName$[rsp]
  00171	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR szCurrentFileName$80570[rsp]
  00179	e8 00 00 00 00	 call	 unzStringFileNameCompare
  0017e	85 c0		 test	 eax, eax
  00180	75 07		 jne	 SHORT $LN1@unzLocateF

; 1274 :                 return UNZ_OK;

  00182	33 c0		 xor	 eax, eax
  00184	e9 80 00 00 00	 jmp	 $LN8@unzLocateF
$LN1@unzLocateF:

; 1275 :             err = unzGoToNextFile(file);

  00189	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR file$[rsp]
  00191	e8 00 00 00 00	 call	 unzGoToNextFile
  00196	89 84 24 c0 00
	00 00		 mov	 DWORD PTR err$[rsp], eax
$LN2@unzLocateF:

; 1276 :         }
; 1277 :     }

  0019d	e9 61 ff ff ff	 jmp	 $LN4@unzLocateF
$LN3@unzLocateF:

; 1278 : 
; 1279 :     /* We failed, so restore the state of the 'current file' to where we
; 1280 :      * were.
; 1281 :      */
; 1282 :     s->num_file = num_fileSaved ;

  001a2	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR s$[rsp]
  001aa	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR num_fileSaved$[rsp]
  001b2	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax

; 1283 :     s->pos_in_central_dir = pos_in_central_dirSaved ;

  001b9	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR s$[rsp]
  001c1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR pos_in_central_dirSaved$[rsp]
  001c9	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax

; 1284 :     s->cur_file_info = cur_file_infoSaved;

  001d0	48 8b bc 24 a8
	00 00 00	 mov	 rdi, QWORD PTR s$[rsp]
  001d8	48 8d 74 24 40	 lea	 rsi, QWORD PTR cur_file_infoSaved$[rsp]
  001dd	48 81 c7 b0 00
	00 00		 add	 rdi, 176		; 000000b0H
  001e4	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  001e9	f3 a4		 rep movsb

; 1285 :     s->cur_file_info_internal = cur_file_info_internalSaved;

  001eb	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR s$[rsp]
  001f3	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR cur_file_info_internalSaved$[rsp]
  001fb	48 89 82 08 01
	00 00		 mov	 QWORD PTR [rdx+264], rax

; 1286 :     return err;

  00202	8b 84 24 c0 00
	00 00		 mov	 eax, DWORD PTR err$[rsp]
$LN8@unzLocateF:

; 1287 : }

  00209	48 81 c4 48 02
	00 00		 add	 rsp, 584		; 00000248H
  00210	5f		 pop	 rdi
  00211	5e		 pop	 rsi
  00212	c3		 ret	 0
unzLocateFile ENDP
_TEXT	ENDS
PUBLIC	unzOpen64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpen64 DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$unzOpen64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpen64 DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpen64
_TEXT	SEGMENT
path$ = 48
unzOpen64 PROC						; COMDAT

; 799  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 800  :     return unzOpenInternal(path, NULL, 1);

  00009	41 b8 01 00 00
	00		 mov	 r8d, 1
  0000f	33 d2		 xor	 edx, edx
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR path$[rsp]
  00016	e8 00 00 00 00	 call	 unzOpenInternal

; 801  : }

  0001b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001f	c3		 ret	 0
unzOpen64 ENDP
_TEXT	ENDS
PUBLIC	unzOpen
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpen DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$unzOpen
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpen DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpen
_TEXT	SEGMENT
path$ = 48
unzOpen	PROC						; COMDAT

; 794  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 795  :     return unzOpenInternal(path, NULL, 0);

  00009	45 33 c0	 xor	 r8d, r8d
  0000c	33 d2		 xor	 edx, edx
  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR path$[rsp]
  00013	e8 00 00 00 00	 call	 unzOpenInternal

; 796  : }

  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
unzOpen	ENDP
_TEXT	ENDS
PUBLIC	$T84374
PUBLIC	unzOpen2_64
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpen2_64 DD imagerel $LN5
	DD	imagerel $LN5+150
	DD	imagerel $unwind$unzOpen2_64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpen2_64 DD 041301H
	DD	0190113H
	DD	0600b700cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpen2_64
_TEXT	SEGMENT
zlib_filefunc64_32_def_fill$80293 = 32
$T84374 = 128
path$ = 224
pzlib_filefunc_def$ = 232
unzOpen2_64 PROC					; COMDAT

; 780  : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H

; 781  :     if (pzlib_filefunc_def != NULL)

  00013	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR pzlib_filefunc_def$[rsp], 0
  0001c	74 59		 je	 SHORT $LN2@unzOpen2_6

; 782  :     {
; 783  :         zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;
; 784  :         zlib_filefunc64_32_def_fill.zfile_func64 = *pzlib_filefunc_def;

  0001e	48 8d bc 24 80
	00 00 00	 lea	 rdi, QWORD PTR $T84374[rsp]
  00026	48 8b b4 24 e8
	00 00 00	 mov	 rsi, QWORD PTR pzlib_filefunc_def$[rsp]
  0002e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00033	f3 a4		 rep movsb
  00035	48 8d 7c 24 20	 lea	 rdi, QWORD PTR zlib_filefunc64_32_def_fill$80293[rsp]
  0003a	48 8d b4 24 80
	00 00 00	 lea	 rsi, QWORD PTR $T84374[rsp]
  00042	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00047	f3 a4		 rep movsb

; 785  :         zlib_filefunc64_32_def_fill.ztell32_file = NULL;

  00049	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR zlib_filefunc64_32_def_fill$80293[rsp+72], 0

; 786  :         zlib_filefunc64_32_def_fill.zseek32_file = NULL;

  00052	48 c7 44 24 70
	00 00 00 00	 mov	 QWORD PTR zlib_filefunc64_32_def_fill$80293[rsp+80], 0

; 787  :         return unzOpenInternal(path, &zlib_filefunc64_32_def_fill, 1);

  0005b	41 b8 01 00 00
	00		 mov	 r8d, 1
  00061	48 8d 54 24 20	 lea	 rdx, QWORD PTR zlib_filefunc64_32_def_fill$80293[rsp]
  00066	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0006e	e8 00 00 00 00	 call	 unzOpenInternal
  00073	eb 17		 jmp	 SHORT $LN3@unzOpen2_6

; 788  :     }
; 789  :     else

  00075	eb 15		 jmp	 SHORT $LN1@unzOpen2_6
$LN2@unzOpen2_6:

; 790  :         return unzOpenInternal(path, NULL, 1);

  00077	41 b8 01 00 00
	00		 mov	 r8d, 1
  0007d	33 d2		 xor	 edx, edx
  0007f	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  00087	e8 00 00 00 00	 call	 unzOpenInternal
$LN1@unzOpen2_6:
$LN3@unzOpen2_6:

; 791  : }

  0008c	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  00093	5f		 pop	 rdi
  00094	5e		 pop	 rsi
  00095	c3		 ret	 0
unzOpen2_64 ENDP
_TEXT	ENDS
PUBLIC	unzOpen2
;	COMDAT pdata
pdata	SEGMENT
$pdata$unzOpen2 DD imagerel $LN5
	DD	imagerel $LN5+97
	DD	imagerel $unwind$unzOpen2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unzOpen2 DD 021101H
	DD	0110111H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unzOpen2
_TEXT	SEGMENT
zlib_filefunc64_32_def_fill$80283 = 32
path$ = 144
pzlib_filefunc32_def$ = 152
unzOpen2 PROC						; COMDAT

; 767  : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 768  :     if (pzlib_filefunc32_def != NULL)

  00011	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR pzlib_filefunc32_def$[rsp], 0
  0001a	74 2b		 je	 SHORT $LN2@unzOpen2

; 769  :     {
; 770  :         zlib_filefunc64_32_def zlib_filefunc64_32_def_fill;
; 771  :         fill_zlib_filefunc64_32_def_from_filefunc32(&zlib_filefunc64_32_def_fill,pzlib_filefunc32_def);

  0001c	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR pzlib_filefunc32_def$[rsp]
  00024	48 8d 4c 24 20	 lea	 rcx, QWORD PTR zlib_filefunc64_32_def_fill$80283[rsp]
  00029	e8 00 00 00 00	 call	 fill_zlib_filefunc64_32_def_from_filefunc32

; 772  :         return unzOpenInternal(path, &zlib_filefunc64_32_def_fill, 0);

  0002e	45 33 c0	 xor	 r8d, r8d
  00031	48 8d 54 24 20	 lea	 rdx, QWORD PTR zlib_filefunc64_32_def_fill$80283[rsp]
  00036	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0003e	e8 00 00 00 00	 call	 unzOpenInternal
  00043	eb 14		 jmp	 SHORT $LN3@unzOpen2

; 773  :     }
; 774  :     else

  00045	eb 12		 jmp	 SHORT $LN1@unzOpen2
$LN2@unzOpen2:

; 775  :         return unzOpenInternal(path, NULL, 0);

  00047	45 33 c0	 xor	 r8d, r8d
  0004a	33 d2		 xor	 edx, edx
  0004c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  00054	e8 00 00 00 00	 call	 unzOpenInternal
$LN1@unzOpen2:
$LN3@unzOpen2:

; 776  : }

  00059	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00060	c3		 ret	 0
unzOpen2 ENDP
END
