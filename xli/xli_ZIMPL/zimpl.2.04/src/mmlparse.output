State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: stmt $end

    1 stmt: decl_set
    2     | decl_par
    3     | decl_var
    4     | decl_obj
    5     | decl_sub
    6     | decl_sos
    7     | def_numb
    8     | def_strg
    9     | def_set
   10     | exec_do

   11 decl_set: DECLSET NAME ASGN sexpr ';'
   12         | DECLSET NAME '[' idxset ']' ASGN sexpr ';'
   13         | DECLSET NAME '[' idxset ']' ASGN set_entry_list ';'
   14         | DECLSET NAME '[' ']' ASGN set_entry_list ';'

   15 set_entry_list: set_entry
   16               | set_entry_list ',' set_entry
   17               | SUBSETS '(' sexpr ',' cexpr ')'
   18               | POWERSET '(' sexpr ')'

   19 set_entry: tuple sexpr

   20 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr ';'

   21 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr ';'

   22 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr ';'

   23 name_list: NAME
   24          | name_list ',' NAME

   25 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR NAME '[' idxset ']' ASGN cexpr par_default ';'
   27         | DECLPAR NAME ASGN par_singleton ';'

   28 par_singleton: cexpr_entry_list
   29              | cexpr

   30 par_default: /* empty */
   31            | DEFAULT cexpr

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper priority startval ';'
   33         | DECLVAR NAME '[' idxset ']' BINARY priority startval ';'
   34         | DECLVAR NAME var_type lower upper priority startval ';'
   35         | DECLVAR NAME BINARY priority startval ';'

   36 var_type: /* empty */
   37         | REAL
   38         | INTEGER

   39 lower: /* empty */
   40      | CMP_GE cexpr
   41      | CMP_GE '-' INFTY

   42 upper: /* empty */
   43      | CMP_LE cexpr
   44      | CMP_LE INFTY

   45 priority: /* empty */
   46         | PRIORITY cexpr

   47 startval: /* empty */
   48         | STARTVAL cexpr

   49 cexpr_entry_list: cexpr_entry
   50                 | cexpr_entry_list ',' cexpr_entry
   51                 | read
   52                 | matrix_head matrix_body

   53 cexpr_entry: tuple cexpr

   54 matrix_head: WITH cexpr_list WITH

   55 matrix_body: matrix_head cexpr_list WITH
   56            | matrix_body matrix_head cexpr_list WITH

   57 decl_obj: DECLMIN NAME DO vexpr ';'
   58         | DECLMAX NAME DO vexpr ';'

   59 decl_sub: DECLSUB NAME DO constraint ';'

   60 constraint: vexpr con_type vexpr con_attr_list
   61           | vexpr con_type cexpr con_attr_list
   62           | cexpr con_type vexpr con_attr_list
   63           | cexpr con_type cexpr con_attr_list
   64           | cexpr con_type vexpr CMP_LE cexpr con_attr_list
   65           | cexpr con_type cexpr CMP_LE cexpr con_attr_list
   66           | cexpr con_type vexpr CMP_GE cexpr con_attr_list
   67           | cexpr con_type cexpr CMP_GE cexpr con_attr_list
   68           | FORALL idxset DO constraint
   69           | IF lexpr THEN constraint ELSE constraint END
   70           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END
   71           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END
   72           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END
   73           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END
   74           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END
   75           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END
   76           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END
   77           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END
   78           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END
   79           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END
   80           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END
   81           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END
   82           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END
   83           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END
   84           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END
   85           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END
   86           | VIF vbool THEN vexpr con_type vexpr END
   87           | VIF vbool THEN cexpr con_type vexpr END
   88           | VIF vbool THEN vexpr con_type cexpr END
   89           | VIF vbool THEN cexpr con_type cexpr END

   90 vbool: vexpr CMP_NE vexpr
   91      | cexpr CMP_NE vexpr
   92      | vexpr CMP_NE cexpr
   93      | vexpr CMP_EQ vexpr
   94      | cexpr CMP_EQ vexpr
   95      | vexpr CMP_EQ cexpr
   96      | vexpr CMP_LE vexpr
   97      | cexpr CMP_LE vexpr
   98      | vexpr CMP_LE cexpr
   99      | vexpr CMP_GE vexpr
  100      | cexpr CMP_GE vexpr
  101      | vexpr CMP_GE cexpr
  102      | vexpr CMP_LT vexpr
  103      | cexpr CMP_LT vexpr
  104      | vexpr CMP_LT cexpr
  105      | vexpr CMP_GT vexpr
  106      | cexpr CMP_GT vexpr
  107      | vexpr CMP_GT cexpr
  108      | vbool AND vbool
  109      | vbool OR vbool
  110      | vbool XOR vbool
  111      | NOT vbool
  112      | '(' vbool ')'

  113 con_attr_list: /* empty */
  114              | con_attr_list ',' con_attr

  115 con_attr: SCALE
  116         | SEPARATE

  117 con_type: CMP_LE
  118         | CMP_GE
  119         | CMP_EQ

  120 vexpr: vproduct
  121      | vexpr '+' vproduct
  122      | vexpr '-' vproduct
  123      | vexpr '+' cproduct
  124      | vexpr '-' cproduct
  125      | cexpr '+' vproduct
  126      | cexpr '-' vproduct

  127 vproduct: vfactor
  128         | vproduct '*' cfactor
  129         | vproduct '/' cfactor
  130         | cproduct '*' vfactor

  131 vfactor: VARSYM symidx
  132        | '+' vfactor
  133        | '-' vfactor
  134        | VABS '(' vexpr ')'
  135        | SUM idxset DO vproduct
  136        | IF lexpr THEN vexpr ELSE vexpr END
  137        | '(' vexpr ')'

  138 decl_sos: DECLSOS NAME DO soset ';'

  139 soset: sos_type priority DO vexpr
  140      | FORALL idxset DO soset

  141 sos_type: /* empty */
  142         | TYPE1
  143         | TYPE2

  144 exec_do: DO command ';'

  145 command: PRINT cexpr
  146        | PRINT tuple
  147        | PRINT sexpr
  148        | CHECK lexpr
  149        | FORALL idxset DO command

  150 idxset: tuple IN sexpr condition
  151       | sexpr condition

  152 condition: /* empty */
  153          | WITH lexpr

  154 sexpr: SETSYM symidx
  155      | SETDEF '(' cexpr_list ')'
  156      | EMPTY_SET
  157      | '{' cexpr TO cexpr BY cexpr '}'
  158      | '{' cexpr TO cexpr '}'
  159      | '{' cexpr UNTIL cexpr BY cexpr '}'
  160      | '{' cexpr UNTIL cexpr '}'
  161      | UNION idxset DO sexpr
  162      | sexpr UNION sexpr
  163      | sexpr '+' sexpr
  164      | sexpr SYMDIFF sexpr
  165      | sexpr WITHOUT sexpr
  166      | sexpr '-' sexpr
  167      | sexpr CROSS sexpr
  168      | sexpr '*' sexpr
  169      | sexpr INTER sexpr
  170      | INTER idxset DO sexpr
  171      | '(' sexpr ')'
  172      | '{' tuple_list '}'
  173      | '{' cexpr_list '}'
  174      | '{' idxset '}'
  175      | '{' idxset DO cexpr '}'
  176      | '{' idxset DO tuple '}'
  177      | PROJ '(' sexpr ',' tuple ')'
  178      | INDEXSET '(' SETSYM ')'
  179      | IF lexpr THEN sexpr ELSE sexpr END

  180 read: READ cexpr AS cexpr
  181     | read read_par

  182 read_par: SKIP cexpr
  183         | USE cexpr
  184         | COMMENT cexpr

  185 tuple_list: tuple
  186           | tuple_list ',' tuple
  187           | read

  188 lexpr: cexpr CMP_EQ cexpr
  189      | cexpr CMP_NE cexpr
  190      | cexpr CMP_GT cexpr
  191      | cexpr CMP_GE cexpr
  192      | cexpr CMP_LT cexpr
  193      | cexpr CMP_LE cexpr
  194      | sexpr CMP_EQ sexpr
  195      | sexpr CMP_NE sexpr
  196      | sexpr CMP_GT sexpr
  197      | sexpr CMP_GE sexpr
  198      | sexpr CMP_LT sexpr
  199      | sexpr CMP_LE sexpr
  200      | lexpr AND lexpr
  201      | lexpr OR lexpr
  202      | lexpr XOR lexpr
  203      | NOT lexpr
  204      | '(' lexpr ')'
  205      | tuple IN sexpr
  206      | EXISTS '(' idxset ')'

  207 tuple: EMPTY_TUPLE
  208      | CMP_LT cexpr_list CMP_GT

  209 symidx: /* empty */
  210       | '[' cexpr_list ']'

  211 cexpr_list: cexpr
  212           | cexpr_list ',' cexpr

  213 cexpr: cproduct
  214      | cexpr '+' cproduct
  215      | cexpr '-' cproduct

  216 cproduct: cfactor
  217         | cproduct '*' cfactor
  218         | cproduct '/' cfactor
  219         | cproduct MOD cfactor
  220         | cproduct DIV cfactor
  221         | cproduct POW cfactor

  222 cfactor: NUMB
  223        | STRG
  224        | NAME
  225        | NUMBSYM symidx
  226        | STRGSYM symidx
  227        | NUMBDEF '(' cexpr_list ')'
  228        | STRGDEF '(' cexpr_list ')'
  229        | cfactor FAC
  230        | CARD '(' sexpr ')'
  231        | ABS '(' cexpr ')'
  232        | SGN '(' cexpr ')'
  233        | FLOOR '(' cexpr ')'
  234        | CEIL '(' cexpr ')'
  235        | LOG '(' cexpr ')'
  236        | LN '(' cexpr ')'
  237        | EXP '(' cexpr ')'
  238        | SQRT '(' cexpr ')'
  239        | '+' cfactor
  240        | '-' cfactor
  241        | '(' cexpr ')'
  242        | RANDOM '(' cexpr ',' cexpr ')'
  243        | IF lexpr THEN cexpr ELSE cexpr END
  244        | MIN idxset DO cproduct
  245        | MAX idxset DO cproduct
  246        | SUM idxset DO cproduct
  247        | MIN '(' cexpr_list ')'
  248        | MAX '(' cexpr_list ')'
  249        | ORD '(' sexpr ',' cexpr ',' cexpr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 18 20 21 22 112 134 137 155 171 177 178 204 206 227 228
    230 231 232 233 234 235 236 237 238 241 242 247 248 249
')' (41) 17 18 20 21 22 112 134 137 155 171 177 178 204 206 227 228
    230 231 232 233 234 235 236 237 238 241 242 247 248 249
'*' (42) 128 130 168 217
'+' (43) 121 123 125 132 163 214 239
',' (44) 16 17 24 50 114 177 186 212 242 249
'-' (45) 41 122 124 126 133 166 215 240
'/' (47) 129 218
';' (59) 11 12 13 14 20 21 22 25 26 27 32 33 34 35 57 58 59 138 144
'[' (91) 12 13 14 25 26 32 33 210
']' (93) 12 13 14 25 26 32 33 210
'{' (123) 157 158 159 160 172 173 174 175 176
'}' (125) 157 158 159 160 172 173 174 175 176
error (256)
DECLSET (258) 11 12 13 14
DECLPAR (259) 25 26 27
DECLVAR (260) 32 33 34 35
DECLMIN (261) 57
DECLMAX (262) 58
DECLSUB (263) 59
DECLSOS (264) 138
DEFNUMB (265) 20
DEFSTRG (266) 21
DEFSET (267) 22
PRINT (268) 145 146 147
CHECK (269) 148
BINARY (270) 33 35
INTEGER (271) 38
REAL (272) 37
ASGN (273) 11 12 13 14 20 21 22 25 26 27
DO (274) 57 58 59 68 135 138 139 140 144 149 161 170 175 176 244 245
    246
WITH (275) 54 55 56 153
IN (276) 150 205
TO (277) 157 158
UNTIL (278) 159 160
BY (279) 157 159
FORALL (280) 68 140 149
EMPTY_TUPLE (281) 207
EMPTY_SET (282) 156
EXISTS (283) 206
PRIORITY (284) 46
STARTVAL (285) 48
DEFAULT (286) 31
CMP_LE (287) 43 44 64 65 96 97 98 117 193 199
CMP_GE (288) 40 41 66 67 99 100 101 118 191 197
CMP_EQ (289) 93 94 95 119 188 194
CMP_LT (290) 102 103 104 192 198 208
CMP_GT (291) 105 106 107 190 196 208
CMP_NE (292) 90 91 92 189 195
INFTY (293) 41 44
AND (294) 108 200
OR (295) 109 201
XOR (296) 110 202
NOT (297) 111 203
SUM (298) 135 246
MIN (299) 244 247
MAX (300) 245 248
IF (301) 69 136 179 243
THEN (302) 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 136 179 243
ELSE (303) 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 136 179
    243
END (304) 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 136 179 243
INTER (305) 169 170
UNION (306) 161 162
CROSS (307) 167
SYMDIFF (308) 164
WITHOUT (309) 165
PROJ (310) 177
MOD (311) 219
DIV (312) 220
POW (313) 221
FAC (314) 229
CARD (315) 230
ABS (316) 231
SGN (317) 232
FLOOR (318) 233
CEIL (319) 234
LOG (320) 235
LN (321) 236
EXP (322) 237
SQRT (323) 238
RANDOM (324) 242
ORD (325) 249
READ (326) 180
AS (327) 180
SKIP (328) 182
USE (329) 183
COMMENT (330) 184
SUBSETS (331) 17
INDEXSET (332) 178
POWERSET (333) 18
VIF (334) 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
    89
VABS (335) 134
TYPE1 (336) 142
TYPE2 (337) 143
NUMBSYM (338) 225
STRGSYM (339) 226
VARSYM (340) 131
SETSYM (341) 154 178
NUMBDEF (342) 227
STRGDEF (343) 228
SETDEF (344) 155
DEFNAME (345) 20 21 22
NAME (346) 11 12 13 14 23 24 25 26 27 32 33 34 35 57 58 59 138 224
STRG (347) 223
NUMB (348) 222
SCALE (349) 115
SEPARATE (350) 116


Nonterminals, with rules where they appear

$accept (108)
    on left: 0
stmt (109)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0
decl_set (110)
    on left: 11 12 13 14, on right: 1
set_entry_list (111)
    on left: 15 16 17 18, on right: 13 14 16
set_entry (112)
    on left: 19, on right: 15 16
def_numb (113)
    on left: 20, on right: 7
def_strg (114)
    on left: 21, on right: 8
def_set (115)
    on left: 22, on right: 9
name_list (116)
    on left: 23 24, on right: 20 21 22 24
decl_par (117)
    on left: 25 26 27, on right: 2
par_singleton (118)
    on left: 28 29, on right: 27
par_default (119)
    on left: 30 31, on right: 25 26
decl_var (120)
    on left: 32 33 34 35, on right: 3
var_type (121)
    on left: 36 37 38, on right: 32 34
lower (122)
    on left: 39 40 41, on right: 32 34
upper (123)
    on left: 42 43 44, on right: 32 34
priority (124)
    on left: 45 46, on right: 32 33 34 35 139
startval (125)
    on left: 47 48, on right: 32 33 34 35
cexpr_entry_list (126)
    on left: 49 50 51 52, on right: 25 28 50
cexpr_entry (127)
    on left: 53, on right: 49 50
matrix_head (128)
    on left: 54, on right: 52 55 56
matrix_body (129)
    on left: 55 56, on right: 52 56
decl_obj (130)
    on left: 57 58, on right: 4
decl_sub (131)
    on left: 59, on right: 5
constraint (132)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83 84 85 86 87 88 89, on right: 59 68 69
vbool (133)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 111 112, on right: 70 71 72 73 74 75 76 77
    78 79 80 81 82 83 84 85 86 87 88 89 108 109 110 111 112
con_attr_list (134)
    on left: 113 114, on right: 60 61 62 63 64 65 66 67 114
con_attr (135)
    on left: 115 116, on right: 114
con_type (136)
    on left: 117 118 119, on right: 60 61 62 63 64 65 66 67 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
vexpr (137)
    on left: 120 121 122 123 124 125 126, on right: 57 58 60 61 62
    64 66 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 86 87 88 90
    91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 121
    122 123 124 134 136 137 139
vproduct (138)
    on left: 127 128 129 130, on right: 120 121 122 125 126 128 129
    135
vfactor (139)
    on left: 131 132 133 134 135 136 137, on right: 127 130 132 133
decl_sos (140)
    on left: 138, on right: 6
soset (141)
    on left: 139 140, on right: 138 140
sos_type (142)
    on left: 141 142 143, on right: 139
exec_do (143)
    on left: 144, on right: 10
command (144)
    on left: 145 146 147 148 149, on right: 144 149
idxset (145)
    on left: 150 151, on right: 12 13 25 26 32 33 68 135 140 149 161
    170 174 175 176 206 244 245 246
condition (146)
    on left: 152 153, on right: 150 151
sexpr (147)
    on left: 154 155 156 157 158 159 160 161 162 163 164 165 166 167
    168 169 170 171 172 173 174 175 176 177 178 179,
    on right: 11 12 17 18 19 22 147 150 151 161 162 163 164 165 166
    167 168 169 170 171 177 179 194 195 196 197 198 199 205 230 249
read (148)
    on left: 180 181, on right: 51 181 187
read_par (149)
    on left: 182 183 184, on right: 181
tuple_list (150)
    on left: 185 186 187, on right: 172 186
lexpr (151)
    on left: 188 189 190 191 192 193 194 195 196 197 198 199 200 201
    202 203 204 205 206, on right: 69 136 148 153 179 200 201 202 203
    204 243
tuple (152)
    on left: 207 208, on right: 19 53 146 150 176 177 185 186 205
symidx (153)
    on left: 209 210, on right: 131 154 225 226
cexpr_list (154)
    on left: 211 212, on right: 54 55 56 155 173 208 210 212 227 228
    247 248
cexpr (155)
    on left: 213 214 215, on right: 17 20 21 26 29 31 40 43 46 48 53
    61 62 63 64 65 66 67 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 87 88 89 91 92 94 95 97 98 100 101 103 104 106 107 125 126 145
    157 158 159 160 175 180 182 183 184 188 189 190 191 192 193 211
    212 214 215 231 232 233 234 235 236 237 238 241 242 243 249
cproduct (156)
    on left: 216 217 218 219 220 221, on right: 123 124 130 213 214
    215 217 218 219 220 221 244 245 246
cfactor (157)
    on left: 222 223 224 225 226 227 228 229 230 231 232 233 234 235
    236 237 238 239 240 241 242 243 244 245 246 247 248 249,
    on right: 128 129 216 217 218 219 220 221 229 239 240


state 0

    0 $accept: . stmt $end

    DECLSET  shift, and go to state 1
    DECLPAR  shift, and go to state 2
    DECLVAR  shift, and go to state 3
    DECLMIN  shift, and go to state 4
    DECLMAX  shift, and go to state 5
    DECLSUB  shift, and go to state 6
    DECLSOS  shift, and go to state 7
    DEFNUMB  shift, and go to state 8
    DEFSTRG  shift, and go to state 9
    DEFSET   shift, and go to state 10
    DO       shift, and go to state 11

    stmt      go to state 12
    decl_set  go to state 13
    def_numb  go to state 14
    def_strg  go to state 15
    def_set   go to state 16
    decl_par  go to state 17
    decl_var  go to state 18
    decl_obj  go to state 19
    decl_sub  go to state 20
    decl_sos  go to state 21
    exec_do   go to state 22


state 1

   11 decl_set: DECLSET . NAME ASGN sexpr ';'
   12         | DECLSET . NAME '[' idxset ']' ASGN sexpr ';'
   13         | DECLSET . NAME '[' idxset ']' ASGN set_entry_list ';'
   14         | DECLSET . NAME '[' ']' ASGN set_entry_list ';'

    NAME  shift, and go to state 23


state 2

   25 decl_par: DECLPAR . NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR . NAME '[' idxset ']' ASGN cexpr par_default ';'
   27         | DECLPAR . NAME ASGN par_singleton ';'

    NAME  shift, and go to state 24


state 3

   32 decl_var: DECLVAR . NAME '[' idxset ']' var_type lower upper priority startval ';'
   33         | DECLVAR . NAME '[' idxset ']' BINARY priority startval ';'
   34         | DECLVAR . NAME var_type lower upper priority startval ';'
   35         | DECLVAR . NAME BINARY priority startval ';'

    NAME  shift, and go to state 25


state 4

   57 decl_obj: DECLMIN . NAME DO vexpr ';'

    NAME  shift, and go to state 26


state 5

   58 decl_obj: DECLMAX . NAME DO vexpr ';'

    NAME  shift, and go to state 27


state 6

   59 decl_sub: DECLSUB . NAME DO constraint ';'

    NAME  shift, and go to state 28


state 7

  138 decl_sos: DECLSOS . NAME DO soset ';'

    NAME  shift, and go to state 29


state 8

   20 def_numb: DEFNUMB . DEFNAME '(' name_list ')' ASGN cexpr ';'

    DEFNAME  shift, and go to state 30


state 9

   21 def_strg: DEFSTRG . DEFNAME '(' name_list ')' ASGN cexpr ';'

    DEFNAME  shift, and go to state 31


state 10

   22 def_set: DEFSET . DEFNAME '(' name_list ')' ASGN sexpr ';'

    DEFNAME  shift, and go to state 32


state 11

  144 exec_do: DO . command ';'

    PRINT   shift, and go to state 33
    CHECK   shift, and go to state 34
    FORALL  shift, and go to state 35

    command  go to state 36


state 12

    0 $accept: stmt . $end

    $end  shift, and go to state 37


state 13

    1 stmt: decl_set .

    $default  reduce using rule 1 (stmt)


state 14

    7 stmt: def_numb .

    $default  reduce using rule 7 (stmt)


state 15

    8 stmt: def_strg .

    $default  reduce using rule 8 (stmt)


state 16

    9 stmt: def_set .

    $default  reduce using rule 9 (stmt)


state 17

    2 stmt: decl_par .

    $default  reduce using rule 2 (stmt)


state 18

    3 stmt: decl_var .

    $default  reduce using rule 3 (stmt)


state 19

    4 stmt: decl_obj .

    $default  reduce using rule 4 (stmt)


state 20

    5 stmt: decl_sub .

    $default  reduce using rule 5 (stmt)


state 21

    6 stmt: decl_sos .

    $default  reduce using rule 6 (stmt)


state 22

   10 stmt: exec_do .

    $default  reduce using rule 10 (stmt)


state 23

   11 decl_set: DECLSET NAME . ASGN sexpr ';'
   12         | DECLSET NAME . '[' idxset ']' ASGN sexpr ';'
   13         | DECLSET NAME . '[' idxset ']' ASGN set_entry_list ';'
   14         | DECLSET NAME . '[' ']' ASGN set_entry_list ';'

    ASGN  shift, and go to state 38
    '['   shift, and go to state 39


state 24

   25 decl_par: DECLPAR NAME . '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR NAME . '[' idxset ']' ASGN cexpr par_default ';'
   27         | DECLPAR NAME . ASGN par_singleton ';'

    ASGN  shift, and go to state 40
    '['   shift, and go to state 41


state 25

   32 decl_var: DECLVAR NAME . '[' idxset ']' var_type lower upper priority startval ';'
   33         | DECLVAR NAME . '[' idxset ']' BINARY priority startval ';'
   34         | DECLVAR NAME . var_type lower upper priority startval ';'
   35         | DECLVAR NAME . BINARY priority startval ';'

    BINARY   shift, and go to state 42
    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44
    '['      shift, and go to state 45

    $default  reduce using rule 36 (var_type)

    var_type  go to state 46


state 26

   57 decl_obj: DECLMIN NAME . DO vexpr ';'

    DO  shift, and go to state 47


state 27

   58 decl_obj: DECLMAX NAME . DO vexpr ';'

    DO  shift, and go to state 48


state 28

   59 decl_sub: DECLSUB NAME . DO constraint ';'

    DO  shift, and go to state 49


state 29

  138 decl_sos: DECLSOS NAME . DO soset ';'

    DO  shift, and go to state 50


state 30

   20 def_numb: DEFNUMB DEFNAME . '(' name_list ')' ASGN cexpr ';'

    '('  shift, and go to state 51


state 31

   21 def_strg: DEFSTRG DEFNAME . '(' name_list ')' ASGN cexpr ';'

    '('  shift, and go to state 52


state 32

   22 def_set: DEFSET DEFNAME . '(' name_list ')' ASGN sexpr ';'

    '('  shift, and go to state 53


state 33

  145 command: PRINT . cexpr
  146        | PRINT . tuple
  147        | PRINT . sexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 85
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 89
    tuple     go to state 90
    cexpr     go to state 91
    cproduct  go to state 92
    cfactor   go to state 93


state 34

  148 command: CHECK . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 98
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 35

  149 command: FORALL . idxset DO command

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 103
    sexpr   go to state 104
    tuple   go to state 105


state 36

  144 exec_do: DO command . ';'

    ';'  shift, and go to state 106


state 37

    0 $accept: stmt $end .

    $default  accept


state 38

   11 decl_set: DECLSET NAME ASGN . sexpr ';'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 107


state 39

   12 decl_set: DECLSET NAME '[' . idxset ']' ASGN sexpr ';'
   13         | DECLSET NAME '[' . idxset ']' ASGN set_entry_list ';'
   14         | DECLSET NAME '[' . ']' ASGN set_entry_list ';'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    ']'          shift, and go to state 108
    '{'          shift, and go to state 88

    idxset  go to state 109
    sexpr   go to state 104
    tuple   go to state 105


state 40

   27 decl_par: DECLPAR NAME ASGN . par_singleton ';'

    WITH         shift, and go to state 110
    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 111
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    READ         shift, and go to state 112
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 113
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87

    par_singleton     go to state 114
    cexpr_entry_list  go to state 115
    cexpr_entry       go to state 116
    matrix_head       go to state 117
    read              go to state 118
    tuple             go to state 119
    cexpr             go to state 120
    cproduct          go to state 92
    cfactor           go to state 93


state 41

   25 decl_par: DECLPAR NAME '[' . idxset ']' ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR NAME '[' . idxset ']' ASGN cexpr par_default ';'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 121
    sexpr   go to state 104
    tuple   go to state 105


state 42

   35 decl_var: DECLVAR NAME BINARY . priority startval ';'

    PRIORITY  shift, and go to state 122

    $default  reduce using rule 45 (priority)

    priority  go to state 123


state 43

   38 var_type: INTEGER .

    $default  reduce using rule 38 (var_type)


state 44

   37 var_type: REAL .

    $default  reduce using rule 37 (var_type)


state 45

   32 decl_var: DECLVAR NAME '[' . idxset ']' var_type lower upper priority startval ';'
   33         | DECLVAR NAME '[' . idxset ']' BINARY priority startval ';'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 124
    sexpr   go to state 104
    tuple   go to state 105


state 46

   34 decl_var: DECLVAR NAME var_type . lower upper priority startval ';'

    CMP_GE  shift, and go to state 125

    $default  reduce using rule 39 (lower)

    lower  go to state 126


state 47

   57 decl_obj: DECLMIN NAME DO . vexpr ';'

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 134
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 48

   58 decl_obj: DECLMAX NAME DO . vexpr ';'

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 139
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 49

   59 decl_sub: DECLSUB NAME DO . constraint ';'

    FORALL   shift, and go to state 140
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 141
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VIF      shift, and go to state 142
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    constraint  go to state 143
    vexpr       go to state 144
    vproduct    go to state 135
    vfactor     go to state 136
    cexpr       go to state 145
    cproduct    go to state 138
    cfactor     go to state 93


state 50

  138 decl_sos: DECLSOS NAME DO . soset ';'

    FORALL  shift, and go to state 146
    TYPE1   shift, and go to state 147
    TYPE2   shift, and go to state 148

    $default  reduce using rule 141 (sos_type)

    soset     go to state 149
    sos_type  go to state 150


state 51

   20 def_numb: DEFNUMB DEFNAME '(' . name_list ')' ASGN cexpr ';'

    NAME  shift, and go to state 151

    name_list  go to state 152


state 52

   21 def_strg: DEFSTRG DEFNAME '(' . name_list ')' ASGN cexpr ';'

    NAME  shift, and go to state 151

    name_list  go to state 153


state 53

   22 def_set: DEFSET DEFNAME '(' . name_list ')' ASGN sexpr ';'

    NAME  shift, and go to state 151

    name_list  go to state 154


state 54

  207 tuple: EMPTY_TUPLE .

    $default  reduce using rule 207 (tuple)


state 55

  156 sexpr: EMPTY_SET .

    $default  reduce using rule 156 (sexpr)


state 56

  208 tuple: CMP_LT . cexpr_list CMP_GT

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 155
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 57

  246 cfactor: SUM . idxset DO cproduct

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 157
    sexpr   go to state 104
    tuple   go to state 105


state 58

  244 cfactor: MIN . idxset DO cproduct
  247        | MIN . '(' cexpr_list ')'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 158
    '{'          shift, and go to state 88

    idxset  go to state 159
    sexpr   go to state 104
    tuple   go to state 105


state 59

  245 cfactor: MAX . idxset DO cproduct
  248        | MAX . '(' cexpr_list ')'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 160
    '{'          shift, and go to state 88

    idxset  go to state 161
    sexpr   go to state 104
    tuple   go to state 105


state 60

  179 sexpr: IF . lexpr THEN sexpr ELSE sexpr END
  243 cfactor: IF . lexpr THEN cexpr ELSE cexpr END

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 162
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 61

  170 sexpr: INTER . idxset DO sexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 163
    sexpr   go to state 104
    tuple   go to state 105


state 62

  161 sexpr: UNION . idxset DO sexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 164
    sexpr   go to state 104
    tuple   go to state 105


state 63

  177 sexpr: PROJ . '(' sexpr ',' tuple ')'

    '('  shift, and go to state 165


state 64

  230 cfactor: CARD . '(' sexpr ')'

    '('  shift, and go to state 166


state 65

  231 cfactor: ABS . '(' cexpr ')'

    '('  shift, and go to state 167


state 66

  232 cfactor: SGN . '(' cexpr ')'

    '('  shift, and go to state 168


state 67

  233 cfactor: FLOOR . '(' cexpr ')'

    '('  shift, and go to state 169


state 68

  234 cfactor: CEIL . '(' cexpr ')'

    '('  shift, and go to state 170


state 69

  235 cfactor: LOG . '(' cexpr ')'

    '('  shift, and go to state 171


state 70

  236 cfactor: LN . '(' cexpr ')'

    '('  shift, and go to state 172


state 71

  237 cfactor: EXP . '(' cexpr ')'

    '('  shift, and go to state 173


state 72

  238 cfactor: SQRT . '(' cexpr ')'

    '('  shift, and go to state 174


state 73

  242 cfactor: RANDOM . '(' cexpr ',' cexpr ')'

    '('  shift, and go to state 175


state 74

  249 cfactor: ORD . '(' sexpr ',' cexpr ',' cexpr ')'

    '('  shift, and go to state 176


state 75

  178 sexpr: INDEXSET . '(' SETSYM ')'

    '('  shift, and go to state 177


state 76

  225 cfactor: NUMBSYM . symidx

    '['  shift, and go to state 178

    $default  reduce using rule 209 (symidx)

    symidx  go to state 179


state 77

  226 cfactor: STRGSYM . symidx

    '['  shift, and go to state 178

    $default  reduce using rule 209 (symidx)

    symidx  go to state 180


state 78

  154 sexpr: SETSYM . symidx

    '['  shift, and go to state 178

    $default  reduce using rule 209 (symidx)

    symidx  go to state 181


state 79

  227 cfactor: NUMBDEF . '(' cexpr_list ')'

    '('  shift, and go to state 182


state 80

  228 cfactor: STRGDEF . '(' cexpr_list ')'

    '('  shift, and go to state 183


state 81

  155 sexpr: SETDEF . '(' cexpr_list ')'

    '('  shift, and go to state 184


state 82

  224 cfactor: NAME .

    $default  reduce using rule 224 (cfactor)


state 83

  223 cfactor: STRG .

    $default  reduce using rule 223 (cfactor)


state 84

  222 cfactor: NUMB .

    $default  reduce using rule 222 (cfactor)


state 85

  171 sexpr: '(' . sexpr ')'
  241 cfactor: '(' . cexpr ')'

    EMPTY_SET  shift, and go to state 55
    SUM        shift, and go to state 57
    MIN        shift, and go to state 58
    MAX        shift, and go to state 59
    IF         shift, and go to state 60
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    CARD       shift, and go to state 64
    ABS        shift, and go to state 65
    SGN        shift, and go to state 66
    FLOOR      shift, and go to state 67
    CEIL       shift, and go to state 68
    LOG        shift, and go to state 69
    LN         shift, and go to state 70
    EXP        shift, and go to state 71
    SQRT       shift, and go to state 72
    RANDOM     shift, and go to state 73
    ORD        shift, and go to state 74
    INDEXSET   shift, and go to state 75
    NUMBSYM    shift, and go to state 76
    STRGSYM    shift, and go to state 77
    SETSYM     shift, and go to state 78
    NUMBDEF    shift, and go to state 79
    STRGDEF    shift, and go to state 80
    SETDEF     shift, and go to state 81
    NAME       shift, and go to state 82
    STRG       shift, and go to state 83
    NUMB       shift, and go to state 84
    '('        shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '{'        shift, and go to state 88

    sexpr     go to state 185
    cexpr     go to state 186
    cproduct  go to state 92
    cfactor   go to state 93


state 86

  239 cfactor: '+' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 187


state 87

  240 cfactor: '-' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 188


state 88

  157 sexpr: '{' . cexpr TO cexpr BY cexpr '}'
  158      | '{' . cexpr TO cexpr '}'
  159      | '{' . cexpr UNTIL cexpr BY cexpr '}'
  160      | '{' . cexpr UNTIL cexpr '}'
  172      | '{' . tuple_list '}'
  173      | '{' . cexpr_list '}'
  174      | '{' . idxset '}'
  175      | '{' . idxset DO cexpr '}'
  176      | '{' . idxset DO tuple '}'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    READ         shift, and go to state 112
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 85
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    idxset      go to state 189
    sexpr       go to state 104
    read        go to state 190
    tuple_list  go to state 191
    tuple       go to state 192
    cexpr_list  go to state 193
    cexpr       go to state 194
    cproduct    go to state 92
    cfactor     go to state 93


state 89

  147 command: PRINT sexpr .
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 147 (command)


state 90

  146 command: PRINT tuple .

    $default  reduce using rule 146 (command)


state 91

  145 command: PRINT cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 145 (command)


state 92

  213 cexpr: cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 213 (cexpr)


state 93

  216 cproduct: cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    FAC       [reduce using rule 216 (cproduct)]
    $default  reduce using rule 216 (cproduct)


state 94

  206 lexpr: EXISTS . '(' idxset ')'

    '('  shift, and go to state 211


state 95

  203 lexpr: NOT . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 212
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 96

  171 sexpr: '(' . sexpr ')'
  204 lexpr: '(' . lexpr ')'
  241 cfactor: '(' . cexpr ')'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 213
    lexpr     go to state 214
    tuple     go to state 99
    cexpr     go to state 215
    cproduct  go to state 92
    cfactor   go to state 93


state 97

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  194 lexpr: sexpr . CMP_EQ sexpr
  195      | sexpr . CMP_NE sexpr
  196      | sexpr . CMP_GT sexpr
  197      | sexpr . CMP_GE sexpr
  198      | sexpr . CMP_LT sexpr
  199      | sexpr . CMP_LE sexpr

    CMP_LE   shift, and go to state 216
    CMP_GE   shift, and go to state 217
    CMP_EQ   shift, and go to state 218
    CMP_LT   shift, and go to state 219
    CMP_GT   shift, and go to state 220
    CMP_NE   shift, and go to state 221
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 98

  148 command: CHECK lexpr .
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr

    AND  shift, and go to state 222
    OR   shift, and go to state 223
    XOR  shift, and go to state 224

    $default  reduce using rule 148 (command)


state 99

  205 lexpr: tuple . IN sexpr

    IN  shift, and go to state 225


state 100

  188 lexpr: cexpr . CMP_EQ cexpr
  189      | cexpr . CMP_NE cexpr
  190      | cexpr . CMP_GT cexpr
  191      | cexpr . CMP_GE cexpr
  192      | cexpr . CMP_LT cexpr
  193      | cexpr . CMP_LE cexpr
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 226
    CMP_GE  shift, and go to state 227
    CMP_EQ  shift, and go to state 228
    CMP_LT  shift, and go to state 229
    CMP_GT  shift, and go to state 230
    CMP_NE  shift, and go to state 231
    '+'     shift, and go to state 203
    '-'     shift, and go to state 204


state 101

  179 sexpr: IF . lexpr THEN sexpr ELSE sexpr END

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 232
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 102

  171 sexpr: '(' . sexpr ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 185


state 103

  149 command: FORALL idxset . DO command

    DO  shift, and go to state 233


state 104

  151 idxset: sexpr . condition
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    WITH     shift, and go to state 234
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 152 (condition)

    condition  go to state 235


state 105

  150 idxset: tuple . IN sexpr condition

    IN  shift, and go to state 236


state 106

  144 exec_do: DO command ';' .

    $default  reduce using rule 144 (exec_do)


state 107

   11 decl_set: DECLSET NAME ASGN sexpr . ';'
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202
    ';'      shift, and go to state 237


state 108

   14 decl_set: DECLSET NAME '[' ']' . ASGN set_entry_list ';'

    ASGN  shift, and go to state 238


state 109

   12 decl_set: DECLSET NAME '[' idxset . ']' ASGN sexpr ';'
   13         | DECLSET NAME '[' idxset . ']' ASGN set_entry_list ';'

    ']'  shift, and go to state 239


state 110

   54 matrix_head: WITH . cexpr_list WITH

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 240
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 111

  243 cfactor: IF . lexpr THEN cexpr ELSE cexpr END

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 241
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 112

  180 read: READ . cexpr AS cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 242
    cproduct  go to state 92
    cfactor   go to state 93


state 113

  241 cfactor: '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 186
    cproduct  go to state 92
    cfactor   go to state 93


state 114

   27 decl_par: DECLPAR NAME ASGN par_singleton . ';'

    ';'  shift, and go to state 243


state 115

   28 par_singleton: cexpr_entry_list .
   50 cexpr_entry_list: cexpr_entry_list . ',' cexpr_entry

    ','  shift, and go to state 244

    $default  reduce using rule 28 (par_singleton)


state 116

   49 cexpr_entry_list: cexpr_entry .

    $default  reduce using rule 49 (cexpr_entry_list)


state 117

   52 cexpr_entry_list: matrix_head . matrix_body

    WITH  shift, and go to state 110

    matrix_head  go to state 245
    matrix_body  go to state 246


state 118

   51 cexpr_entry_list: read .
  181 read: read . read_par

    SKIP     shift, and go to state 247
    USE      shift, and go to state 248
    COMMENT  shift, and go to state 249

    $default  reduce using rule 51 (cexpr_entry_list)

    read_par  go to state 250


state 119

   53 cexpr_entry: tuple . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 251
    cproduct  go to state 92
    cfactor   go to state 93


state 120

   29 par_singleton: cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 29 (par_singleton)


state 121

   25 decl_par: DECLPAR NAME '[' idxset . ']' ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR NAME '[' idxset . ']' ASGN cexpr par_default ';'

    ']'  shift, and go to state 252


state 122

   46 priority: PRIORITY . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 253
    cproduct  go to state 92
    cfactor   go to state 93


state 123

   35 decl_var: DECLVAR NAME BINARY priority . startval ';'

    STARTVAL  shift, and go to state 254

    $default  reduce using rule 47 (startval)

    startval  go to state 255


state 124

   32 decl_var: DECLVAR NAME '[' idxset . ']' var_type lower upper priority startval ';'
   33         | DECLVAR NAME '[' idxset . ']' BINARY priority startval ';'

    ']'  shift, and go to state 256


state 125

   40 lower: CMP_GE . cexpr
   41      | CMP_GE . '-' INFTY

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 257

    cexpr     go to state 258
    cproduct  go to state 92
    cfactor   go to state 93


state 126

   34 decl_var: DECLVAR NAME var_type lower . upper priority startval ';'

    CMP_LE  shift, and go to state 259

    $default  reduce using rule 42 (upper)

    upper  go to state 260


state 127

  135 vfactor: SUM . idxset DO vproduct
  246 cfactor: SUM . idxset DO cproduct

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 261
    sexpr   go to state 104
    tuple   go to state 105


state 128

  136 vfactor: IF . lexpr THEN vexpr ELSE vexpr END
  243 cfactor: IF . lexpr THEN cexpr ELSE cexpr END

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 262
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 129

  134 vfactor: VABS . '(' vexpr ')'

    '('  shift, and go to state 263


state 130

  131 vfactor: VARSYM . symidx

    '['  shift, and go to state 178

    $default  reduce using rule 209 (symidx)

    symidx  go to state 264


state 131

  137 vfactor: '(' . vexpr ')'
  241 cfactor: '(' . cexpr ')'

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 265
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 266
    cproduct  go to state 138
    cfactor   go to state 93


state 132

  132 vfactor: '+' . vfactor
  239 cfactor: '+' . cfactor

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vfactor  go to state 267
    cfactor  go to state 187


state 133

  133 vfactor: '-' . vfactor
  240 cfactor: '-' . cfactor

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vfactor  go to state 268
    cfactor  go to state 188


state 134

   57 decl_obj: DECLMIN NAME DO vexpr . ';'
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270
    ';'  shift, and go to state 271


state 135

  120 vexpr: vproduct .
  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 120 (vexpr)


state 136

  127 vproduct: vfactor .

    $default  reduce using rule 127 (vproduct)


state 137

  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 138

  130 vproduct: cproduct . '*' vfactor
  213 cexpr: cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 213 (cexpr)


state 139

   58 decl_obj: DECLMAX NAME DO vexpr . ';'
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270
    ';'  shift, and go to state 277


state 140

   68 constraint: FORALL . idxset DO constraint

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 278
    sexpr   go to state 104
    tuple   go to state 105


state 141

   69 constraint: IF . lexpr THEN constraint ELSE constraint END
  136 vfactor: IF . lexpr THEN vexpr ELSE vexpr END
  243 cfactor: IF . lexpr THEN cexpr ELSE cexpr END

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 279
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 142

   70 constraint: VIF . vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END
   71           | VIF . vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END
   72           | VIF . vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END
   73           | VIF . vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END
   74           | VIF . vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END
   75           | VIF . vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END
   76           | VIF . vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END
   77           | VIF . vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END
   78           | VIF . vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END
   79           | VIF . vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END
   80           | VIF . vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END
   81           | VIF . vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END
   82           | VIF . vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END
   83           | VIF . vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END
   84           | VIF . vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END
   85           | VIF . vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END
   86           | VIF . vbool THEN vexpr con_type vexpr END
   87           | VIF . vbool THEN cexpr con_type vexpr END
   88           | VIF . vbool THEN vexpr con_type cexpr END
   89           | VIF . vbool THEN cexpr con_type cexpr END

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 282
    vexpr     go to state 283
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 284
    cproduct  go to state 138
    cfactor   go to state 93


state 143

   59 decl_sub: DECLSUB NAME DO constraint . ';'

    ';'  shift, and go to state 285


state 144

   60 constraint: vexpr . con_type vexpr con_attr_list
   61           | vexpr . con_type cexpr con_attr_list
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 289


state 145

   62 constraint: cexpr . con_type vexpr con_attr_list
   63           | cexpr . con_type cexpr con_attr_list
   64           | cexpr . con_type vexpr CMP_LE cexpr con_attr_list
   65           | cexpr . con_type cexpr CMP_LE cexpr con_attr_list
   66           | cexpr . con_type vexpr CMP_GE cexpr con_attr_list
   67           | cexpr . con_type cexpr CMP_GE cexpr con_attr_list
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 290


state 146

  140 soset: FORALL . idxset DO soset

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 291
    sexpr   go to state 104
    tuple   go to state 105


state 147

  142 sos_type: TYPE1 .

    $default  reduce using rule 142 (sos_type)


state 148

  143 sos_type: TYPE2 .

    $default  reduce using rule 143 (sos_type)


state 149

  138 decl_sos: DECLSOS NAME DO soset . ';'

    ';'  shift, and go to state 292


state 150

  139 soset: sos_type . priority DO vexpr

    PRIORITY  shift, and go to state 122

    $default  reduce using rule 45 (priority)

    priority  go to state 293


state 151

   23 name_list: NAME .

    $default  reduce using rule 23 (name_list)


state 152

   20 def_numb: DEFNUMB DEFNAME '(' name_list . ')' ASGN cexpr ';'
   24 name_list: name_list . ',' NAME

    ','  shift, and go to state 294
    ')'  shift, and go to state 295


state 153

   21 def_strg: DEFSTRG DEFNAME '(' name_list . ')' ASGN cexpr ';'
   24 name_list: name_list . ',' NAME

    ','  shift, and go to state 294
    ')'  shift, and go to state 296


state 154

   22 def_set: DEFSET DEFNAME '(' name_list . ')' ASGN sexpr ';'
   24 name_list: name_list . ',' NAME

    ','  shift, and go to state 294
    ')'  shift, and go to state 297


state 155

  208 tuple: CMP_LT cexpr_list . CMP_GT
  212 cexpr_list: cexpr_list . ',' cexpr

    CMP_GT  shift, and go to state 298
    ','     shift, and go to state 299


state 156

  211 cexpr_list: cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 211 (cexpr_list)


state 157

  246 cfactor: SUM idxset . DO cproduct

    DO  shift, and go to state 300


state 158

  171 sexpr: '(' . sexpr ')'
  247 cfactor: MIN '(' . cexpr_list ')'

    EMPTY_SET  shift, and go to state 55
    SUM        shift, and go to state 57
    MIN        shift, and go to state 58
    MAX        shift, and go to state 59
    IF         shift, and go to state 60
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    CARD       shift, and go to state 64
    ABS        shift, and go to state 65
    SGN        shift, and go to state 66
    FLOOR      shift, and go to state 67
    CEIL       shift, and go to state 68
    LOG        shift, and go to state 69
    LN         shift, and go to state 70
    EXP        shift, and go to state 71
    SQRT       shift, and go to state 72
    RANDOM     shift, and go to state 73
    ORD        shift, and go to state 74
    INDEXSET   shift, and go to state 75
    NUMBSYM    shift, and go to state 76
    STRGSYM    shift, and go to state 77
    SETSYM     shift, and go to state 78
    NUMBDEF    shift, and go to state 79
    STRGDEF    shift, and go to state 80
    SETDEF     shift, and go to state 81
    NAME       shift, and go to state 82
    STRG       shift, and go to state 83
    NUMB       shift, and go to state 84
    '('        shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '{'        shift, and go to state 88

    sexpr       go to state 185
    cexpr_list  go to state 301
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 159

  244 cfactor: MIN idxset . DO cproduct

    DO  shift, and go to state 302


state 160

  171 sexpr: '(' . sexpr ')'
  248 cfactor: MAX '(' . cexpr_list ')'

    EMPTY_SET  shift, and go to state 55
    SUM        shift, and go to state 57
    MIN        shift, and go to state 58
    MAX        shift, and go to state 59
    IF         shift, and go to state 60
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    CARD       shift, and go to state 64
    ABS        shift, and go to state 65
    SGN        shift, and go to state 66
    FLOOR      shift, and go to state 67
    CEIL       shift, and go to state 68
    LOG        shift, and go to state 69
    LN         shift, and go to state 70
    EXP        shift, and go to state 71
    SQRT       shift, and go to state 72
    RANDOM     shift, and go to state 73
    ORD        shift, and go to state 74
    INDEXSET   shift, and go to state 75
    NUMBSYM    shift, and go to state 76
    STRGSYM    shift, and go to state 77
    SETSYM     shift, and go to state 78
    NUMBDEF    shift, and go to state 79
    STRGDEF    shift, and go to state 80
    SETDEF     shift, and go to state 81
    NAME       shift, and go to state 82
    STRG       shift, and go to state 83
    NUMB       shift, and go to state 84
    '('        shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '{'        shift, and go to state 88

    sexpr       go to state 185
    cexpr_list  go to state 303
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 161

  245 cfactor: MAX idxset . DO cproduct

    DO  shift, and go to state 304


state 162

  179 sexpr: IF lexpr . THEN sexpr ELSE sexpr END
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  243 cfactor: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 222
    OR    shift, and go to state 223
    XOR   shift, and go to state 224
    THEN  shift, and go to state 305


state 163

  170 sexpr: INTER idxset . DO sexpr

    DO  shift, and go to state 306


state 164

  161 sexpr: UNION idxset . DO sexpr

    DO  shift, and go to state 307


state 165

  177 sexpr: PROJ '(' . sexpr ',' tuple ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 308


state 166

  230 cfactor: CARD '(' . sexpr ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 309


state 167

  231 cfactor: ABS '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 310
    cproduct  go to state 92
    cfactor   go to state 93


state 168

  232 cfactor: SGN '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 311
    cproduct  go to state 92
    cfactor   go to state 93


state 169

  233 cfactor: FLOOR '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 312
    cproduct  go to state 92
    cfactor   go to state 93


state 170

  234 cfactor: CEIL '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 313
    cproduct  go to state 92
    cfactor   go to state 93


state 171

  235 cfactor: LOG '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 314
    cproduct  go to state 92
    cfactor   go to state 93


state 172

  236 cfactor: LN '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 315
    cproduct  go to state 92
    cfactor   go to state 93


state 173

  237 cfactor: EXP '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 316
    cproduct  go to state 92
    cfactor   go to state 93


state 174

  238 cfactor: SQRT '(' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 317
    cproduct  go to state 92
    cfactor   go to state 93


state 175

  242 cfactor: RANDOM '(' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 318
    cproduct  go to state 92
    cfactor   go to state 93


state 176

  249 cfactor: ORD '(' . sexpr ',' cexpr ',' cexpr ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 319


state 177

  178 sexpr: INDEXSET '(' . SETSYM ')'

    SETSYM  shift, and go to state 320


state 178

  210 symidx: '[' . cexpr_list ']'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 321
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 179

  225 cfactor: NUMBSYM symidx .

    $default  reduce using rule 225 (cfactor)


state 180

  226 cfactor: STRGSYM symidx .

    $default  reduce using rule 226 (cfactor)


state 181

  154 sexpr: SETSYM symidx .

    $default  reduce using rule 154 (sexpr)


state 182

  227 cfactor: NUMBDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 322
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 183

  228 cfactor: STRGDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 323
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 184

  155 sexpr: SETDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 324
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 185

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  171      | '(' sexpr . ')'

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ')'      shift, and go to state 325
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 186

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  241 cfactor: '(' cexpr . ')'

    ')'  shift, and go to state 326
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 187

  229 cfactor: cfactor . FAC
  239        | '+' cfactor .

    FAC  shift, and go to state 210

    $default  reduce using rule 239 (cfactor)


state 188

  229 cfactor: cfactor . FAC
  240        | '-' cfactor .

    FAC  shift, and go to state 210

    $default  reduce using rule 240 (cfactor)


state 189

  174 sexpr: '{' idxset . '}'
  175      | '{' idxset . DO cexpr '}'
  176      | '{' idxset . DO tuple '}'

    DO   shift, and go to state 327
    '}'  shift, and go to state 328


state 190

  181 read: read . read_par
  187 tuple_list: read .

    SKIP     shift, and go to state 247
    USE      shift, and go to state 248
    COMMENT  shift, and go to state 249

    $default  reduce using rule 187 (tuple_list)

    read_par  go to state 250


state 191

  172 sexpr: '{' tuple_list . '}'
  186 tuple_list: tuple_list . ',' tuple

    ','  shift, and go to state 329
    '}'  shift, and go to state 330


state 192

  150 idxset: tuple . IN sexpr condition
  185 tuple_list: tuple .

    IN  shift, and go to state 236

    $default  reduce using rule 185 (tuple_list)


state 193

  173 sexpr: '{' cexpr_list . '}'
  212 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 299
    '}'  shift, and go to state 331


state 194

  157 sexpr: '{' cexpr . TO cexpr BY cexpr '}'
  158      | '{' cexpr . TO cexpr '}'
  159      | '{' cexpr . UNTIL cexpr BY cexpr '}'
  160      | '{' cexpr . UNTIL cexpr '}'
  211 cexpr_list: cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    TO     shift, and go to state 332
    UNTIL  shift, and go to state 333
    '+'    shift, and go to state 203
    '-'    shift, and go to state 204

    $default  reduce using rule 211 (cexpr_list)


state 195

  169 sexpr: sexpr INTER . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 334


state 196

  162 sexpr: sexpr UNION . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 335


state 197

  167 sexpr: sexpr CROSS . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 336


state 198

  164 sexpr: sexpr SYMDIFF . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 337


state 199

  165 sexpr: sexpr WITHOUT . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 338


state 200

  163 sexpr: sexpr '+' . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 339


state 201

  166 sexpr: sexpr '-' . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 340


state 202

  168 sexpr: sexpr '*' . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 341


state 203

  214 cexpr: cexpr '+' . cproduct

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cproduct  go to state 342
    cfactor   go to state 93


state 204

  215 cexpr: cexpr '-' . cproduct

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cproduct  go to state 343
    cfactor   go to state 93


state 205

  219 cproduct: cproduct MOD . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 344


state 206

  220 cproduct: cproduct DIV . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 345


state 207

  221 cproduct: cproduct POW . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 346


state 208

  217 cproduct: cproduct '*' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 347


state 209

  218 cproduct: cproduct '/' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 348


state 210

  229 cfactor: cfactor FAC .

    $default  reduce using rule 229 (cfactor)


state 211

  206 lexpr: EXISTS '(' . idxset ')'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    INDEXSET     shift, and go to state 75
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    idxset  go to state 349
    sexpr   go to state 104
    tuple   go to state 105


state 212

  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  203      | NOT lexpr .

    $default  reduce using rule 203 (lexpr)


state 213

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  171      | '(' sexpr . ')'
  194 lexpr: sexpr . CMP_EQ sexpr
  195      | sexpr . CMP_NE sexpr
  196      | sexpr . CMP_GT sexpr
  197      | sexpr . CMP_GE sexpr
  198      | sexpr . CMP_LT sexpr
  199      | sexpr . CMP_LE sexpr

    CMP_LE   shift, and go to state 216
    CMP_GE   shift, and go to state 217
    CMP_EQ   shift, and go to state 218
    CMP_LT   shift, and go to state 219
    CMP_GT   shift, and go to state 220
    CMP_NE   shift, and go to state 221
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ')'      shift, and go to state 325
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 214

  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  204      | '(' lexpr . ')'

    AND  shift, and go to state 222
    OR   shift, and go to state 223
    XOR  shift, and go to state 224
    ')'  shift, and go to state 350


state 215

  188 lexpr: cexpr . CMP_EQ cexpr
  189      | cexpr . CMP_NE cexpr
  190      | cexpr . CMP_GT cexpr
  191      | cexpr . CMP_GE cexpr
  192      | cexpr . CMP_LT cexpr
  193      | cexpr . CMP_LE cexpr
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  241 cfactor: '(' cexpr . ')'

    CMP_LE  shift, and go to state 226
    CMP_GE  shift, and go to state 227
    CMP_EQ  shift, and go to state 228
    CMP_LT  shift, and go to state 229
    CMP_GT  shift, and go to state 230
    CMP_NE  shift, and go to state 231
    ')'     shift, and go to state 326
    '+'     shift, and go to state 203
    '-'     shift, and go to state 204


state 216

  199 lexpr: sexpr CMP_LE . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 351


state 217

  197 lexpr: sexpr CMP_GE . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 352


state 218

  194 lexpr: sexpr CMP_EQ . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 353


state 219

  198 lexpr: sexpr CMP_LT . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 354


state 220

  196 lexpr: sexpr CMP_GT . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 355


state 221

  195 lexpr: sexpr CMP_NE . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 356


state 222

  200 lexpr: lexpr AND . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 357
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 223

  201 lexpr: lexpr OR . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 358
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 224

  202 lexpr: lexpr XOR . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 359
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 225

  205 lexpr: tuple IN . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 360


state 226

  193 lexpr: cexpr CMP_LE . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 361
    cproduct  go to state 92
    cfactor   go to state 93


state 227

  191 lexpr: cexpr CMP_GE . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 362
    cproduct  go to state 92
    cfactor   go to state 93


state 228

  188 lexpr: cexpr CMP_EQ . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 363
    cproduct  go to state 92
    cfactor   go to state 93


state 229

  192 lexpr: cexpr CMP_LT . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 364
    cproduct  go to state 92
    cfactor   go to state 93


state 230

  190 lexpr: cexpr CMP_GT . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 365
    cproduct  go to state 92
    cfactor   go to state 93


state 231

  189 lexpr: cexpr CMP_NE . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 366
    cproduct  go to state 92
    cfactor   go to state 93


state 232

  179 sexpr: IF lexpr . THEN sexpr ELSE sexpr END
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr

    AND   shift, and go to state 222
    OR    shift, and go to state 223
    XOR   shift, and go to state 224
    THEN  shift, and go to state 367


state 233

  149 command: FORALL idxset DO . command

    PRINT   shift, and go to state 33
    CHECK   shift, and go to state 34
    FORALL  shift, and go to state 35

    command  go to state 368


state 234

  153 condition: WITH . lexpr

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    EXISTS       shift, and go to state 94
    CMP_LT       shift, and go to state 56
    NOT          shift, and go to state 95
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 60
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    INDEXSET     shift, and go to state 75
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    SETSYM       shift, and go to state 78
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    SETDEF       shift, and go to state 81
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 96
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '{'          shift, and go to state 88

    sexpr     go to state 97
    lexpr     go to state 369
    tuple     go to state 99
    cexpr     go to state 100
    cproduct  go to state 92
    cfactor   go to state 93


state 235

  151 idxset: sexpr condition .

    $default  reduce using rule 151 (idxset)


state 236

  150 idxset: tuple IN . sexpr condition

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 370


state 237

   11 decl_set: DECLSET NAME ASGN sexpr ';' .

    $default  reduce using rule 11 (decl_set)


state 238

   14 decl_set: DECLSET NAME '[' ']' ASGN . set_entry_list ';'

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56
    SUBSETS      shift, and go to state 371
    POWERSET     shift, and go to state 372

    set_entry_list  go to state 373
    set_entry       go to state 374
    tuple           go to state 375


state 239

   12 decl_set: DECLSET NAME '[' idxset ']' . ASGN sexpr ';'
   13         | DECLSET NAME '[' idxset ']' . ASGN set_entry_list ';'

    ASGN  shift, and go to state 376


state 240

   54 matrix_head: WITH cexpr_list . WITH
  212 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 377
    ','   shift, and go to state 299


state 241

  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  243 cfactor: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 222
    OR    shift, and go to state 223
    XOR   shift, and go to state 224
    THEN  shift, and go to state 378


state 242

  180 read: READ cexpr . AS cexpr
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    AS   shift, and go to state 379
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 243

   27 decl_par: DECLPAR NAME ASGN par_singleton ';' .

    $default  reduce using rule 27 (decl_par)


state 244

   50 cexpr_entry_list: cexpr_entry_list ',' . cexpr_entry

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56

    cexpr_entry  go to state 380
    tuple        go to state 119


state 245

   55 matrix_body: matrix_head . cexpr_list WITH

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 381
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 246

   52 cexpr_entry_list: matrix_head matrix_body .
   56 matrix_body: matrix_body . matrix_head cexpr_list WITH

    WITH  shift, and go to state 110

    $default  reduce using rule 52 (cexpr_entry_list)

    matrix_head  go to state 382


state 247

  182 read_par: SKIP . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 383
    cproduct  go to state 92
    cfactor   go to state 93


state 248

  183 read_par: USE . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 384
    cproduct  go to state 92
    cfactor   go to state 93


state 249

  184 read_par: COMMENT . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 385
    cproduct  go to state 92
    cfactor   go to state 93


state 250

  181 read: read read_par .

    $default  reduce using rule 181 (read)


state 251

   53 cexpr_entry: tuple cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 53 (cexpr_entry)


state 252

   25 decl_par: DECLPAR NAME '[' idxset ']' . ASGN cexpr_entry_list par_default ';'
   26         | DECLPAR NAME '[' idxset ']' . ASGN cexpr par_default ';'

    ASGN  shift, and go to state 386


state 253

   46 priority: PRIORITY cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 46 (priority)


state 254

   48 startval: STARTVAL . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 387
    cproduct  go to state 92
    cfactor   go to state 93


state 255

   35 decl_var: DECLVAR NAME BINARY priority startval . ';'

    ';'  shift, and go to state 388


state 256

   32 decl_var: DECLVAR NAME '[' idxset ']' . var_type lower upper priority startval ';'
   33         | DECLVAR NAME '[' idxset ']' . BINARY priority startval ';'

    BINARY   shift, and go to state 389
    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    $default  reduce using rule 36 (var_type)

    var_type  go to state 390


state 257

   41 lower: CMP_GE '-' . INFTY
  240 cfactor: '-' . cfactor

    INFTY    shift, and go to state 391
    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 188


state 258

   40 lower: CMP_GE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 40 (lower)


state 259

   43 upper: CMP_LE . cexpr
   44      | CMP_LE . INFTY

    INFTY    shift, and go to state 392
    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 393
    cproduct  go to state 92
    cfactor   go to state 93


state 260

   34 decl_var: DECLVAR NAME var_type lower upper . priority startval ';'

    PRIORITY  shift, and go to state 122

    $default  reduce using rule 45 (priority)

    priority  go to state 394


state 261

  135 vfactor: SUM idxset . DO vproduct
  246 cfactor: SUM idxset . DO cproduct

    DO  shift, and go to state 395


state 262

  136 vfactor: IF lexpr . THEN vexpr ELSE vexpr END
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  243 cfactor: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 222
    OR    shift, and go to state 223
    XOR   shift, and go to state 224
    THEN  shift, and go to state 396


state 263

  134 vfactor: VABS '(' . vexpr ')'

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 397
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 264

  131 vfactor: VARSYM symidx .

    $default  reduce using rule 131 (vfactor)


state 265

  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  137 vfactor: '(' vexpr . ')'

    ')'  shift, and go to state 398
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 266

  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  241 cfactor: '(' cexpr . ')'

    ')'  shift, and go to state 326
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 267

  132 vfactor: '+' vfactor .

    $default  reduce using rule 132 (vfactor)


state 268

  133 vfactor: '-' vfactor .

    $default  reduce using rule 133 (vfactor)


state 269

  121 vexpr: vexpr '+' . vproduct
  123      | vexpr '+' . cproduct

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vproduct  go to state 399
    vfactor   go to state 136
    cproduct  go to state 400
    cfactor   go to state 93


state 270

  122 vexpr: vexpr '-' . vproduct
  124      | vexpr '-' . cproduct

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vproduct  go to state 401
    vfactor   go to state 136
    cproduct  go to state 402
    cfactor   go to state 93


state 271

   57 decl_obj: DECLMIN NAME DO vexpr ';' .

    $default  reduce using rule 57 (decl_obj)


state 272

  128 vproduct: vproduct '*' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 403


state 273

  129 vproduct: vproduct '/' . cfactor

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cfactor  go to state 404


state 274

  125 vexpr: cexpr '+' . vproduct
  214 cexpr: cexpr '+' . cproduct

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vproduct  go to state 405
    vfactor   go to state 136
    cproduct  go to state 406
    cfactor   go to state 93


state 275

  126 vexpr: cexpr '-' . vproduct
  215 cexpr: cexpr '-' . cproduct

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vproduct  go to state 407
    vfactor   go to state 136
    cproduct  go to state 408
    cfactor   go to state 93


state 276

  130 vproduct: cproduct '*' . vfactor
  217 cproduct: cproduct '*' . cfactor

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vfactor  go to state 409
    cfactor  go to state 347


state 277

   58 decl_obj: DECLMAX NAME DO vexpr ';' .

    $default  reduce using rule 58 (decl_obj)


state 278

   68 constraint: FORALL idxset . DO constraint

    DO  shift, and go to state 410


state 279

   69 constraint: IF lexpr . THEN constraint ELSE constraint END
  136 vfactor: IF lexpr . THEN vexpr ELSE vexpr END
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  243 cfactor: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 222
    OR    shift, and go to state 223
    XOR   shift, and go to state 224
    THEN  shift, and go to state 411


state 280

  111 vbool: NOT . vbool

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 412
    vexpr     go to state 283
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 284
    cproduct  go to state 138
    cfactor   go to state 93


state 281

  112 vbool: '(' . vbool ')'
  137 vfactor: '(' . vexpr ')'
  241 cfactor: '(' . cexpr ')'

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 413
    vexpr     go to state 414
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 415
    cproduct  go to state 138
    cfactor   go to state 93


state 282

   70 constraint: VIF vbool . THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END
   71           | VIF vbool . THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END
   72           | VIF vbool . THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END
   73           | VIF vbool . THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END
   74           | VIF vbool . THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END
   75           | VIF vbool . THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END
   76           | VIF vbool . THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END
   77           | VIF vbool . THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END
   78           | VIF vbool . THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END
   79           | VIF vbool . THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END
   80           | VIF vbool . THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END
   81           | VIF vbool . THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END
   82           | VIF vbool . THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END
   83           | VIF vbool . THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END
   84           | VIF vbool . THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END
   85           | VIF vbool . THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END
   86           | VIF vbool . THEN vexpr con_type vexpr END
   87           | VIF vbool . THEN cexpr con_type vexpr END
   88           | VIF vbool . THEN vexpr con_type cexpr END
   89           | VIF vbool . THEN cexpr con_type cexpr END
  108 vbool: vbool . AND vbool
  109      | vbool . OR vbool
  110      | vbool . XOR vbool

    AND   shift, and go to state 416
    OR    shift, and go to state 417
    XOR   shift, and go to state 418
    THEN  shift, and go to state 419


state 283

   90 vbool: vexpr . CMP_NE vexpr
   92      | vexpr . CMP_NE cexpr
   93      | vexpr . CMP_EQ vexpr
   95      | vexpr . CMP_EQ cexpr
   96      | vexpr . CMP_LE vexpr
   98      | vexpr . CMP_LE cexpr
   99      | vexpr . CMP_GE vexpr
  101      | vexpr . CMP_GE cexpr
  102      | vexpr . CMP_LT vexpr
  104      | vexpr . CMP_LT cexpr
  105      | vexpr . CMP_GT vexpr
  107      | vexpr . CMP_GT cexpr
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 420
    CMP_GE  shift, and go to state 421
    CMP_EQ  shift, and go to state 422
    CMP_LT  shift, and go to state 423
    CMP_GT  shift, and go to state 424
    CMP_NE  shift, and go to state 425
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270


state 284

   91 vbool: cexpr . CMP_NE vexpr
   94      | cexpr . CMP_EQ vexpr
   97      | cexpr . CMP_LE vexpr
  100      | cexpr . CMP_GE vexpr
  103      | cexpr . CMP_LT vexpr
  106      | cexpr . CMP_GT vexpr
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 426
    CMP_GE  shift, and go to state 427
    CMP_EQ  shift, and go to state 428
    CMP_LT  shift, and go to state 429
    CMP_GT  shift, and go to state 430
    CMP_NE  shift, and go to state 431
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275


state 285

   59 decl_sub: DECLSUB NAME DO constraint ';' .

    $default  reduce using rule 59 (decl_sub)


state 286

  117 con_type: CMP_LE .

    $default  reduce using rule 117 (con_type)


state 287

  118 con_type: CMP_GE .

    $default  reduce using rule 118 (con_type)


state 288

  119 con_type: CMP_EQ .

    $default  reduce using rule 119 (con_type)


state 289

   60 constraint: vexpr con_type . vexpr con_attr_list
   61           | vexpr con_type . cexpr con_attr_list

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 432
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 433
    cproduct  go to state 138
    cfactor   go to state 93


state 290

   62 constraint: cexpr con_type . vexpr con_attr_list
   63           | cexpr con_type . cexpr con_attr_list
   64           | cexpr con_type . vexpr CMP_LE cexpr con_attr_list
   65           | cexpr con_type . cexpr CMP_LE cexpr con_attr_list
   66           | cexpr con_type . vexpr CMP_GE cexpr con_attr_list
   67           | cexpr con_type . cexpr CMP_GE cexpr con_attr_list

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 434
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 435
    cproduct  go to state 138
    cfactor   go to state 93


state 291

  140 soset: FORALL idxset . DO soset

    DO  shift, and go to state 436


state 292

  138 decl_sos: DECLSOS NAME DO soset ';' .

    $default  reduce using rule 138 (decl_sos)


state 293

  139 soset: sos_type priority . DO vexpr

    DO  shift, and go to state 437


state 294

   24 name_list: name_list ',' . NAME

    NAME  shift, and go to state 438


state 295

   20 def_numb: DEFNUMB DEFNAME '(' name_list ')' . ASGN cexpr ';'

    ASGN  shift, and go to state 439


state 296

   21 def_strg: DEFSTRG DEFNAME '(' name_list ')' . ASGN cexpr ';'

    ASGN  shift, and go to state 440


state 297

   22 def_set: DEFSET DEFNAME '(' name_list ')' . ASGN sexpr ';'

    ASGN  shift, and go to state 441


state 298

  208 tuple: CMP_LT cexpr_list CMP_GT .

    $default  reduce using rule 208 (tuple)


state 299

  212 cexpr_list: cexpr_list ',' . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 442
    cproduct  go to state 92
    cfactor   go to state 93


state 300

  246 cfactor: SUM idxset DO . cproduct

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cproduct  go to state 443
    cfactor   go to state 93


state 301

  212 cexpr_list: cexpr_list . ',' cexpr
  247 cfactor: MIN '(' cexpr_list . ')'

    ','  shift, and go to state 299
    ')'  shift, and go to state 444


state 302

  244 cfactor: MIN idxset DO . cproduct

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cproduct  go to state 445
    cfactor   go to state 93


state 303

  212 cexpr_list: cexpr_list . ',' cexpr
  248 cfactor: MAX '(' cexpr_list . ')'

    ','  shift, and go to state 299
    ')'  shift, and go to state 446


state 304

  245 cfactor: MAX idxset DO . cproduct

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cproduct  go to state 447
    cfactor   go to state 93


state 305

  179 sexpr: IF lexpr THEN . sexpr ELSE sexpr END
  243 cfactor: IF lexpr THEN . cexpr ELSE cexpr END

    EMPTY_SET  shift, and go to state 55
    SUM        shift, and go to state 57
    MIN        shift, and go to state 58
    MAX        shift, and go to state 59
    IF         shift, and go to state 60
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    CARD       shift, and go to state 64
    ABS        shift, and go to state 65
    SGN        shift, and go to state 66
    FLOOR      shift, and go to state 67
    CEIL       shift, and go to state 68
    LOG        shift, and go to state 69
    LN         shift, and go to state 70
    EXP        shift, and go to state 71
    SQRT       shift, and go to state 72
    RANDOM     shift, and go to state 73
    ORD        shift, and go to state 74
    INDEXSET   shift, and go to state 75
    NUMBSYM    shift, and go to state 76
    STRGSYM    shift, and go to state 77
    SETSYM     shift, and go to state 78
    NUMBDEF    shift, and go to state 79
    STRGDEF    shift, and go to state 80
    SETDEF     shift, and go to state 81
    NAME       shift, and go to state 82
    STRG       shift, and go to state 83
    NUMB       shift, and go to state 84
    '('        shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '{'        shift, and go to state 88

    sexpr     go to state 448
    cexpr     go to state 449
    cproduct  go to state 92
    cfactor   go to state 93


state 306

  170 sexpr: INTER idxset DO . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 450


state 307

  161 sexpr: UNION idxset DO . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 451


state 308

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  177      | PROJ '(' sexpr . ',' tuple ')'

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ','      shift, and go to state 452
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 309

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  230 cfactor: CARD '(' sexpr . ')'

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ')'      shift, and go to state 453
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 310

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  231 cfactor: ABS '(' cexpr . ')'

    ')'  shift, and go to state 454
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 311

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  232 cfactor: SGN '(' cexpr . ')'

    ')'  shift, and go to state 455
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 312

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  233 cfactor: FLOOR '(' cexpr . ')'

    ')'  shift, and go to state 456
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 313

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  234 cfactor: CEIL '(' cexpr . ')'

    ')'  shift, and go to state 457
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 314

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  235 cfactor: LOG '(' cexpr . ')'

    ')'  shift, and go to state 458
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 315

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  236 cfactor: LN '(' cexpr . ')'

    ')'  shift, and go to state 459
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 316

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  237 cfactor: EXP '(' cexpr . ')'

    ')'  shift, and go to state 460
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 317

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  238 cfactor: SQRT '(' cexpr . ')'

    ')'  shift, and go to state 461
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 318

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  242 cfactor: RANDOM '(' cexpr . ',' cexpr ')'

    ','  shift, and go to state 462
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 319

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  249 cfactor: ORD '(' sexpr . ',' cexpr ',' cexpr ')'

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ','      shift, and go to state 463
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 320

  178 sexpr: INDEXSET '(' SETSYM . ')'

    ')'  shift, and go to state 464


state 321

  210 symidx: '[' cexpr_list . ']'
  212 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 299
    ']'  shift, and go to state 465


state 322

  212 cexpr_list: cexpr_list . ',' cexpr
  227 cfactor: NUMBDEF '(' cexpr_list . ')'

    ','  shift, and go to state 299
    ')'  shift, and go to state 466


state 323

  212 cexpr_list: cexpr_list . ',' cexpr
  228 cfactor: STRGDEF '(' cexpr_list . ')'

    ','  shift, and go to state 299
    ')'  shift, and go to state 467


state 324

  155 sexpr: SETDEF '(' cexpr_list . ')'
  212 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 299
    ')'  shift, and go to state 468


state 325

  171 sexpr: '(' sexpr ')' .

    $default  reduce using rule 171 (sexpr)


state 326

  241 cfactor: '(' cexpr ')' .

    $default  reduce using rule 241 (cfactor)


state 327

  175 sexpr: '{' idxset DO . cexpr '}'
  176      | '{' idxset DO . tuple '}'

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 111
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 113
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87

    tuple     go to state 469
    cexpr     go to state 470
    cproduct  go to state 92
    cfactor   go to state 93


state 328

  174 sexpr: '{' idxset '}' .

    $default  reduce using rule 174 (sexpr)


state 329

  186 tuple_list: tuple_list ',' . tuple

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56

    tuple  go to state 471


state 330

  172 sexpr: '{' tuple_list '}' .

    $default  reduce using rule 172 (sexpr)


state 331

  173 sexpr: '{' cexpr_list '}' .

    $default  reduce using rule 173 (sexpr)


state 332

  157 sexpr: '{' cexpr TO . cexpr BY cexpr '}'
  158      | '{' cexpr TO . cexpr '}'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 472
    cproduct  go to state 92
    cfactor   go to state 93


state 333

  159 sexpr: '{' cexpr UNTIL . cexpr BY cexpr '}'
  160      | '{' cexpr UNTIL . cexpr '}'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 473
    cproduct  go to state 92
    cfactor   go to state 93


state 334

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  169      | sexpr INTER sexpr .

    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 169 (sexpr)


state 335

  162 sexpr: sexpr . UNION sexpr
  162      | sexpr UNION sexpr .
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER  shift, and go to state 195
    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 162 (sexpr)


state 336

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  167      | sexpr CROSS sexpr .
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    '+'  shift, and go to state 200
    '-'  shift, and go to state 201
    '*'  shift, and go to state 202

    $default  reduce using rule 167 (sexpr)


state 337

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  164      | sexpr SYMDIFF sexpr .
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER  shift, and go to state 195
    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 164 (sexpr)


state 338

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  165      | sexpr WITHOUT sexpr .
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER  shift, and go to state 195
    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 165 (sexpr)


state 339

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  163      | sexpr '+' sexpr .
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER  shift, and go to state 195
    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 163 (sexpr)


state 340

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  166      | sexpr '-' sexpr .
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER  shift, and go to state 195
    CROSS  shift, and go to state 197
    '+'    shift, and go to state 200
    '-'    shift, and go to state 201
    '*'    shift, and go to state 202

    $default  reduce using rule 166 (sexpr)


state 341

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  168      | sexpr '*' sexpr .
  169      | sexpr . INTER sexpr

    $default  reduce using rule 168 (sexpr)


state 342

  214 cexpr: cexpr '+' cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 214 (cexpr)


state 343

  215 cexpr: cexpr '-' cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 215 (cexpr)


state 344

  219 cproduct: cproduct MOD cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 219 (cproduct)


state 345

  220 cproduct: cproduct DIV cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 220 (cproduct)


state 346

  221 cproduct: cproduct POW cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 221 (cproduct)


state 347

  217 cproduct: cproduct '*' cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 217 (cproduct)


state 348

  218 cproduct: cproduct '/' cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 218 (cproduct)


state 349

  206 lexpr: EXISTS '(' idxset . ')'

    ')'  shift, and go to state 474


state 350

  204 lexpr: '(' lexpr ')' .

    $default  reduce using rule 204 (lexpr)


state 351

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  199 lexpr: sexpr CMP_LE sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 199 (lexpr)


state 352

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  197 lexpr: sexpr CMP_GE sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 197 (lexpr)


state 353

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  194 lexpr: sexpr CMP_EQ sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 194 (lexpr)


state 354

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  198 lexpr: sexpr CMP_LT sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 198 (lexpr)


state 355

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  196 lexpr: sexpr CMP_GT sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 196 (lexpr)


state 356

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  195 lexpr: sexpr CMP_NE sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 195 (lexpr)


state 357

  200 lexpr: lexpr . AND lexpr
  200      | lexpr AND lexpr .
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr

    $default  reduce using rule 200 (lexpr)


state 358

  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  201      | lexpr OR lexpr .
  202      | lexpr . XOR lexpr

    AND  shift, and go to state 222

    $default  reduce using rule 201 (lexpr)


state 359

  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr
  202      | lexpr XOR lexpr .

    AND  shift, and go to state 222

    $default  reduce using rule 202 (lexpr)


state 360

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  205 lexpr: tuple IN sexpr .

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 205 (lexpr)


state 361

  193 lexpr: cexpr CMP_LE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 193 (lexpr)


state 362

  191 lexpr: cexpr CMP_GE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 191 (lexpr)


state 363

  188 lexpr: cexpr CMP_EQ cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 188 (lexpr)


state 364

  192 lexpr: cexpr CMP_LT cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 192 (lexpr)


state 365

  190 lexpr: cexpr CMP_GT cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 190 (lexpr)


state 366

  189 lexpr: cexpr CMP_NE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 189 (lexpr)


state 367

  179 sexpr: IF lexpr THEN . sexpr ELSE sexpr END

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 448


state 368

  149 command: FORALL idxset DO command .

    $default  reduce using rule 149 (command)


state 369

  153 condition: WITH lexpr .
  200 lexpr: lexpr . AND lexpr
  201      | lexpr . OR lexpr
  202      | lexpr . XOR lexpr

    AND  shift, and go to state 222
    OR   shift, and go to state 223
    XOR  shift, and go to state 224

    $default  reduce using rule 153 (condition)


state 370

  150 idxset: tuple IN sexpr . condition
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    WITH     shift, and go to state 234
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 152 (condition)

    condition  go to state 475


state 371

   17 set_entry_list: SUBSETS . '(' sexpr ',' cexpr ')'

    '('  shift, and go to state 476


state 372

   18 set_entry_list: POWERSET . '(' sexpr ')'

    '('  shift, and go to state 477


state 373

   14 decl_set: DECLSET NAME '[' ']' ASGN set_entry_list . ';'
   16 set_entry_list: set_entry_list . ',' set_entry

    ','  shift, and go to state 478
    ';'  shift, and go to state 479


state 374

   15 set_entry_list: set_entry .

    $default  reduce using rule 15 (set_entry_list)


state 375

   19 set_entry: tuple . sexpr

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 480


state 376

   12 decl_set: DECLSET NAME '[' idxset ']' ASGN . sexpr ';'
   13         | DECLSET NAME '[' idxset ']' ASGN . set_entry_list ';'

    EMPTY_TUPLE  shift, and go to state 54
    EMPTY_SET    shift, and go to state 55
    CMP_LT       shift, and go to state 56
    IF           shift, and go to state 101
    INTER        shift, and go to state 61
    UNION        shift, and go to state 62
    PROJ         shift, and go to state 63
    SUBSETS      shift, and go to state 371
    INDEXSET     shift, and go to state 75
    POWERSET     shift, and go to state 372
    SETSYM       shift, and go to state 78
    SETDEF       shift, and go to state 81
    '('          shift, and go to state 102
    '{'          shift, and go to state 88

    set_entry_list  go to state 481
    set_entry       go to state 374
    sexpr           go to state 482
    tuple           go to state 375


state 377

   54 matrix_head: WITH cexpr_list WITH .

    $default  reduce using rule 54 (matrix_head)


state 378

  243 cfactor: IF lexpr THEN . cexpr ELSE cexpr END

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 449
    cproduct  go to state 92
    cfactor   go to state 93


state 379

  180 read: READ cexpr AS . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 483
    cproduct  go to state 92
    cfactor   go to state 93


state 380

   50 cexpr_entry_list: cexpr_entry_list ',' cexpr_entry .

    $default  reduce using rule 50 (cexpr_entry_list)


state 381

   55 matrix_body: matrix_head cexpr_list . WITH
  212 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 484
    ','   shift, and go to state 299


state 382

   56 matrix_body: matrix_body matrix_head . cexpr_list WITH

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr_list  go to state 485
    cexpr       go to state 156
    cproduct    go to state 92
    cfactor     go to state 93


state 383

  182 read_par: SKIP cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 182 (read_par)


state 384

  183 read_par: USE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 183 (read_par)


state 385

  184 read_par: COMMENT cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 184 (read_par)


state 386

   25 decl_par: DECLPAR NAME '[' idxset ']' ASGN . cexpr_entry_list par_default ';'
   26         | DECLPAR NAME '[' idxset ']' ASGN . cexpr par_default ';'

    WITH         shift, and go to state 110
    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56
    SUM          shift, and go to state 57
    MIN          shift, and go to state 58
    MAX          shift, and go to state 59
    IF           shift, and go to state 111
    CARD         shift, and go to state 64
    ABS          shift, and go to state 65
    SGN          shift, and go to state 66
    FLOOR        shift, and go to state 67
    CEIL         shift, and go to state 68
    LOG          shift, and go to state 69
    LN           shift, and go to state 70
    EXP          shift, and go to state 71
    SQRT         shift, and go to state 72
    RANDOM       shift, and go to state 73
    ORD          shift, and go to state 74
    READ         shift, and go to state 112
    NUMBSYM      shift, and go to state 76
    STRGSYM      shift, and go to state 77
    NUMBDEF      shift, and go to state 79
    STRGDEF      shift, and go to state 80
    NAME         shift, and go to state 82
    STRG         shift, and go to state 83
    NUMB         shift, and go to state 84
    '('          shift, and go to state 113
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87

    cexpr_entry_list  go to state 486
    cexpr_entry       go to state 116
    matrix_head       go to state 117
    read              go to state 118
    tuple             go to state 119
    cexpr             go to state 487
    cproduct          go to state 92
    cfactor           go to state 93


state 387

   48 startval: STARTVAL cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 48 (startval)


state 388

   35 decl_var: DECLVAR NAME BINARY priority startval ';' .

    $default  reduce using rule 35 (decl_var)


state 389

   33 decl_var: DECLVAR NAME '[' idxset ']' BINARY . priority startval ';'

    PRIORITY  shift, and go to state 122

    $default  reduce using rule 45 (priority)

    priority  go to state 488


state 390

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type . lower upper priority startval ';'

    CMP_GE  shift, and go to state 125

    $default  reduce using rule 39 (lower)

    lower  go to state 489


state 391

   41 lower: CMP_GE '-' INFTY .

    $default  reduce using rule 41 (lower)


state 392

   44 upper: CMP_LE INFTY .

    $default  reduce using rule 44 (upper)


state 393

   43 upper: CMP_LE cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 43 (upper)


state 394

   34 decl_var: DECLVAR NAME var_type lower upper priority . startval ';'

    STARTVAL  shift, and go to state 254

    $default  reduce using rule 47 (startval)

    startval  go to state 490


state 395

  135 vfactor: SUM idxset DO . vproduct
  246 cfactor: SUM idxset DO . cproduct

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vproduct  go to state 491
    vfactor   go to state 136
    cproduct  go to state 492
    cfactor   go to state 93


state 396

  136 vfactor: IF lexpr THEN . vexpr ELSE vexpr END
  243 cfactor: IF lexpr THEN . cexpr ELSE cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 493
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 494
    cproduct  go to state 138
    cfactor   go to state 93


state 397

  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  134 vfactor: VABS '(' vexpr . ')'

    ')'  shift, and go to state 495
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 398

  137 vfactor: '(' vexpr ')' .

    $default  reduce using rule 137 (vfactor)


state 399

  121 vexpr: vexpr '+' vproduct .
  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 121 (vexpr)


state 400

  123 vexpr: vexpr '+' cproduct .
  130 vproduct: cproduct . '*' vfactor
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 123 (vexpr)


state 401

  122 vexpr: vexpr '-' vproduct .
  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 122 (vexpr)


state 402

  124 vexpr: vexpr '-' cproduct .
  130 vproduct: cproduct . '*' vfactor
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 124 (vexpr)


state 403

  128 vproduct: vproduct '*' cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 128 (vproduct)


state 404

  129 vproduct: vproduct '/' cfactor .
  229 cfactor: cfactor . FAC

    FAC  shift, and go to state 210

    $default  reduce using rule 129 (vproduct)


state 405

  125 vexpr: cexpr '+' vproduct .
  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 125 (vexpr)


state 406

  130 vproduct: cproduct . '*' vfactor
  214 cexpr: cexpr '+' cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 214 (cexpr)


state 407

  126 vexpr: cexpr '-' vproduct .
  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 126 (vexpr)


state 408

  130 vproduct: cproduct . '*' vfactor
  215 cexpr: cexpr '-' cproduct .
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 215 (cexpr)


state 409

  130 vproduct: cproduct '*' vfactor .

    $default  reduce using rule 130 (vproduct)


state 410

   68 constraint: FORALL idxset DO . constraint

    FORALL   shift, and go to state 140
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 141
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VIF      shift, and go to state 142
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    constraint  go to state 496
    vexpr       go to state 144
    vproduct    go to state 135
    vfactor     go to state 136
    cexpr       go to state 145
    cproduct    go to state 138
    cfactor     go to state 93


state 411

   69 constraint: IF lexpr THEN . constraint ELSE constraint END
  136 vfactor: IF lexpr THEN . vexpr ELSE vexpr END
  243 cfactor: IF lexpr THEN . cexpr ELSE cexpr END

    FORALL   shift, and go to state 140
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 141
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VIF      shift, and go to state 142
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    constraint  go to state 497
    vexpr       go to state 498
    vproduct    go to state 135
    vfactor     go to state 136
    cexpr       go to state 499
    cproduct    go to state 138
    cfactor     go to state 93


state 412

  108 vbool: vbool . AND vbool
  109      | vbool . OR vbool
  110      | vbool . XOR vbool
  111      | NOT vbool .

    $default  reduce using rule 111 (vbool)


state 413

  108 vbool: vbool . AND vbool
  109      | vbool . OR vbool
  110      | vbool . XOR vbool
  112      | '(' vbool . ')'

    AND  shift, and go to state 416
    OR   shift, and go to state 417
    XOR  shift, and go to state 418
    ')'  shift, and go to state 500


state 414

   90 vbool: vexpr . CMP_NE vexpr
   92      | vexpr . CMP_NE cexpr
   93      | vexpr . CMP_EQ vexpr
   95      | vexpr . CMP_EQ cexpr
   96      | vexpr . CMP_LE vexpr
   98      | vexpr . CMP_LE cexpr
   99      | vexpr . CMP_GE vexpr
  101      | vexpr . CMP_GE cexpr
  102      | vexpr . CMP_LT vexpr
  104      | vexpr . CMP_LT cexpr
  105      | vexpr . CMP_GT vexpr
  107      | vexpr . CMP_GT cexpr
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  137 vfactor: '(' vexpr . ')'

    CMP_LE  shift, and go to state 420
    CMP_GE  shift, and go to state 421
    CMP_EQ  shift, and go to state 422
    CMP_LT  shift, and go to state 423
    CMP_GT  shift, and go to state 424
    CMP_NE  shift, and go to state 425
    ')'     shift, and go to state 398
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270


state 415

   91 vbool: cexpr . CMP_NE vexpr
   94      | cexpr . CMP_EQ vexpr
   97      | cexpr . CMP_LE vexpr
  100      | cexpr . CMP_GE vexpr
  103      | cexpr . CMP_LT vexpr
  106      | cexpr . CMP_GT vexpr
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  241 cfactor: '(' cexpr . ')'

    CMP_LE  shift, and go to state 426
    CMP_GE  shift, and go to state 427
    CMP_EQ  shift, and go to state 428
    CMP_LT  shift, and go to state 429
    CMP_GT  shift, and go to state 430
    CMP_NE  shift, and go to state 431
    ')'     shift, and go to state 326
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275


state 416

  108 vbool: vbool AND . vbool

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 501
    vexpr     go to state 283
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 284
    cproduct  go to state 138
    cfactor   go to state 93


state 417

  109 vbool: vbool OR . vbool

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 502
    vexpr     go to state 283
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 284
    cproduct  go to state 138
    cfactor   go to state 93


state 418

  110 vbool: vbool XOR . vbool

    NOT      shift, and go to state 280
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 281
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vbool     go to state 503
    vexpr     go to state 283
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 284
    cproduct  go to state 138
    cfactor   go to state 93


state 419

   70 constraint: VIF vbool THEN . vexpr con_type vexpr ELSE vexpr con_type vexpr END
   71           | VIF vbool THEN . cexpr con_type vexpr ELSE vexpr con_type vexpr END
   72           | VIF vbool THEN . vexpr con_type cexpr ELSE vexpr con_type vexpr END
   73           | VIF vbool THEN . vexpr con_type vexpr ELSE cexpr con_type vexpr END
   74           | VIF vbool THEN . vexpr con_type vexpr ELSE vexpr con_type cexpr END
   75           | VIF vbool THEN . cexpr con_type cexpr ELSE vexpr con_type vexpr END
   76           | VIF vbool THEN . cexpr con_type vexpr ELSE cexpr con_type vexpr END
   77           | VIF vbool THEN . cexpr con_type vexpr ELSE vexpr con_type cexpr END
   78           | VIF vbool THEN . vexpr con_type cexpr ELSE cexpr con_type vexpr END
   79           | VIF vbool THEN . vexpr con_type cexpr ELSE vexpr con_type cexpr END
   80           | VIF vbool THEN . vexpr con_type vexpr ELSE cexpr con_type cexpr END
   81           | VIF vbool THEN . cexpr con_type cexpr ELSE cexpr con_type vexpr END
   82           | VIF vbool THEN . cexpr con_type cexpr ELSE vexpr con_type cexpr END
   83           | VIF vbool THEN . cexpr con_type vexpr ELSE cexpr con_type cexpr END
   84           | VIF vbool THEN . vexpr con_type cexpr ELSE cexpr con_type cexpr END
   85           | VIF vbool THEN . cexpr con_type cexpr ELSE cexpr con_type cexpr END
   86           | VIF vbool THEN . vexpr con_type vexpr END
   87           | VIF vbool THEN . cexpr con_type vexpr END
   88           | VIF vbool THEN . vexpr con_type cexpr END
   89           | VIF vbool THEN . cexpr con_type cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 504
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 505
    cproduct  go to state 138
    cfactor   go to state 93


state 420

   96 vbool: vexpr CMP_LE . vexpr
   98      | vexpr CMP_LE . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 506
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 507
    cproduct  go to state 138
    cfactor   go to state 93


state 421

   99 vbool: vexpr CMP_GE . vexpr
  101      | vexpr CMP_GE . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 508
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 509
    cproduct  go to state 138
    cfactor   go to state 93


state 422

   93 vbool: vexpr CMP_EQ . vexpr
   95      | vexpr CMP_EQ . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 510
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 511
    cproduct  go to state 138
    cfactor   go to state 93


state 423

  102 vbool: vexpr CMP_LT . vexpr
  104      | vexpr CMP_LT . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 512
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 513
    cproduct  go to state 138
    cfactor   go to state 93


state 424

  105 vbool: vexpr CMP_GT . vexpr
  107      | vexpr CMP_GT . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 514
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 515
    cproduct  go to state 138
    cfactor   go to state 93


state 425

   90 vbool: vexpr CMP_NE . vexpr
   92      | vexpr CMP_NE . cexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 516
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 517
    cproduct  go to state 138
    cfactor   go to state 93


state 426

   97 vbool: cexpr CMP_LE . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 518
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 427

  100 vbool: cexpr CMP_GE . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 519
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 428

   94 vbool: cexpr CMP_EQ . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 520
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 429

  103 vbool: cexpr CMP_LT . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 521
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 430

  106 vbool: cexpr CMP_GT . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 522
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 431

   91 vbool: cexpr CMP_NE . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 523
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 432

   60 constraint: vexpr con_type vexpr . con_attr_list
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 524


state 433

   61 constraint: vexpr con_type cexpr . con_attr_list
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 525


state 434

   62 constraint: cexpr con_type vexpr . con_attr_list
   64           | cexpr con_type vexpr . CMP_LE cexpr con_attr_list
   66           | cexpr con_type vexpr . CMP_GE cexpr con_attr_list
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 526
    CMP_GE  shift, and go to state 527
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 528


state 435

   63 constraint: cexpr con_type cexpr . con_attr_list
   65           | cexpr con_type cexpr . CMP_LE cexpr con_attr_list
   67           | cexpr con_type cexpr . CMP_GE cexpr con_attr_list
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 529
    CMP_GE  shift, and go to state 530
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 531


state 436

  140 soset: FORALL idxset DO . soset

    FORALL  shift, and go to state 146
    TYPE1   shift, and go to state 147
    TYPE2   shift, and go to state 148

    $default  reduce using rule 141 (sos_type)

    soset     go to state 532
    sos_type  go to state 150


state 437

  139 soset: sos_type priority DO . vexpr

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 533
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 438

   24 name_list: name_list ',' NAME .

    $default  reduce using rule 24 (name_list)


state 439

   20 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN . cexpr ';'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 534
    cproduct  go to state 92
    cfactor   go to state 93


state 440

   21 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN . cexpr ';'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 535
    cproduct  go to state 92
    cfactor   go to state 93


state 441

   22 def_set: DEFSET DEFNAME '(' name_list ')' ASGN . sexpr ';'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 536


state 442

  212 cexpr_list: cexpr_list ',' cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 212 (cexpr_list)


state 443

  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor
  246 cfactor: SUM idxset DO cproduct .

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 246 (cfactor)


state 444

  247 cfactor: MIN '(' cexpr_list ')' .

    $default  reduce using rule 247 (cfactor)


state 445

  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor
  244 cfactor: MIN idxset DO cproduct .

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 244 (cfactor)


state 446

  248 cfactor: MAX '(' cexpr_list ')' .

    $default  reduce using rule 248 (cfactor)


state 447

  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor
  245 cfactor: MAX idxset DO cproduct .

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 208
    '/'  shift, and go to state 209

    $default  reduce using rule 245 (cfactor)


state 448

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  179      | IF lexpr THEN sexpr . ELSE sexpr END

    ELSE     shift, and go to state 537
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 449

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  243 cfactor: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 538
    '+'   shift, and go to state 203
    '-'   shift, and go to state 204


state 450

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  170      | INTER idxset DO sexpr .

    '*'  shift, and go to state 202

    $default  reduce using rule 170 (sexpr)


state 451

  161 sexpr: UNION idxset DO sexpr .
  162      | sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    '*'  shift, and go to state 202

    $default  reduce using rule 161 (sexpr)


state 452

  177 sexpr: PROJ '(' sexpr ',' . tuple ')'

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56

    tuple  go to state 539


state 453

  230 cfactor: CARD '(' sexpr ')' .

    $default  reduce using rule 230 (cfactor)


state 454

  231 cfactor: ABS '(' cexpr ')' .

    $default  reduce using rule 231 (cfactor)


state 455

  232 cfactor: SGN '(' cexpr ')' .

    $default  reduce using rule 232 (cfactor)


state 456

  233 cfactor: FLOOR '(' cexpr ')' .

    $default  reduce using rule 233 (cfactor)


state 457

  234 cfactor: CEIL '(' cexpr ')' .

    $default  reduce using rule 234 (cfactor)


state 458

  235 cfactor: LOG '(' cexpr ')' .

    $default  reduce using rule 235 (cfactor)


state 459

  236 cfactor: LN '(' cexpr ')' .

    $default  reduce using rule 236 (cfactor)


state 460

  237 cfactor: EXP '(' cexpr ')' .

    $default  reduce using rule 237 (cfactor)


state 461

  238 cfactor: SQRT '(' cexpr ')' .

    $default  reduce using rule 238 (cfactor)


state 462

  242 cfactor: RANDOM '(' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 540
    cproduct  go to state 92
    cfactor   go to state 93


state 463

  249 cfactor: ORD '(' sexpr ',' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 541
    cproduct  go to state 92
    cfactor   go to state 93


state 464

  178 sexpr: INDEXSET '(' SETSYM ')' .

    $default  reduce using rule 178 (sexpr)


state 465

  210 symidx: '[' cexpr_list ']' .

    $default  reduce using rule 210 (symidx)


state 466

  227 cfactor: NUMBDEF '(' cexpr_list ')' .

    $default  reduce using rule 227 (cfactor)


state 467

  228 cfactor: STRGDEF '(' cexpr_list ')' .

    $default  reduce using rule 228 (cfactor)


state 468

  155 sexpr: SETDEF '(' cexpr_list ')' .

    $default  reduce using rule 155 (sexpr)


state 469

  176 sexpr: '{' idxset DO tuple . '}'

    '}'  shift, and go to state 542


state 470

  175 sexpr: '{' idxset DO cexpr . '}'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    '}'  shift, and go to state 543


state 471

  186 tuple_list: tuple_list ',' tuple .

    $default  reduce using rule 186 (tuple_list)


state 472

  157 sexpr: '{' cexpr TO cexpr . BY cexpr '}'
  158      | '{' cexpr TO cexpr . '}'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    BY   shift, and go to state 544
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    '}'  shift, and go to state 545


state 473

  159 sexpr: '{' cexpr UNTIL cexpr . BY cexpr '}'
  160      | '{' cexpr UNTIL cexpr . '}'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    BY   shift, and go to state 546
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    '}'  shift, and go to state 547


state 474

  206 lexpr: EXISTS '(' idxset ')' .

    $default  reduce using rule 206 (lexpr)


state 475

  150 idxset: tuple IN sexpr condition .

    $default  reduce using rule 150 (idxset)


state 476

   17 set_entry_list: SUBSETS '(' . sexpr ',' cexpr ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 548


state 477

   18 set_entry_list: POWERSET '(' . sexpr ')'

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 549


state 478

   16 set_entry_list: set_entry_list ',' . set_entry

    EMPTY_TUPLE  shift, and go to state 54
    CMP_LT       shift, and go to state 56

    set_entry  go to state 550
    tuple      go to state 375


state 479

   14 decl_set: DECLSET NAME '[' ']' ASGN set_entry_list ';' .

    $default  reduce using rule 14 (decl_set)


state 480

   19 set_entry: tuple sexpr .
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202

    $default  reduce using rule 19 (set_entry)


state 481

   13 decl_set: DECLSET NAME '[' idxset ']' ASGN set_entry_list . ';'
   16 set_entry_list: set_entry_list . ',' set_entry

    ','  shift, and go to state 478
    ';'  shift, and go to state 551


state 482

   12 decl_set: DECLSET NAME '[' idxset ']' ASGN sexpr . ';'
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202
    ';'      shift, and go to state 552


state 483

  180 read: READ cexpr AS cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 180 (read)


state 484

   55 matrix_body: matrix_head cexpr_list WITH .

    $default  reduce using rule 55 (matrix_body)


state 485

   56 matrix_body: matrix_body matrix_head cexpr_list . WITH
  212 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 553
    ','   shift, and go to state 299


state 486

   25 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list . par_default ';'
   50 cexpr_entry_list: cexpr_entry_list . ',' cexpr_entry

    DEFAULT  shift, and go to state 554
    ','      shift, and go to state 244

    $default  reduce using rule 30 (par_default)

    par_default  go to state 555


state 487

   26 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr . par_default ';'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    DEFAULT  shift, and go to state 554
    '+'      shift, and go to state 203
    '-'      shift, and go to state 204

    $default  reduce using rule 30 (par_default)

    par_default  go to state 556


state 488

   33 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority . startval ';'

    STARTVAL  shift, and go to state 254

    $default  reduce using rule 47 (startval)

    startval  go to state 557


state 489

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower . upper priority startval ';'

    CMP_LE  shift, and go to state 259

    $default  reduce using rule 42 (upper)

    upper  go to state 558


state 490

   34 decl_var: DECLVAR NAME var_type lower upper priority startval . ';'

    ';'  shift, and go to state 559


state 491

  128 vproduct: vproduct . '*' cfactor
  129         | vproduct . '/' cfactor
  135 vfactor: SUM idxset DO vproduct .

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273

    $default  reduce using rule 135 (vfactor)


state 492

  130 vproduct: cproduct . '*' vfactor
  217 cproduct: cproduct . '*' cfactor
  218         | cproduct . '/' cfactor
  219         | cproduct . MOD cfactor
  220         | cproduct . DIV cfactor
  221         | cproduct . POW cfactor
  246 cfactor: SUM idxset DO cproduct .

    MOD  shift, and go to state 205
    DIV  shift, and go to state 206
    POW  shift, and go to state 207
    '*'  shift, and go to state 276
    '/'  shift, and go to state 209

    $default  reduce using rule 246 (cfactor)


state 493

  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  136 vfactor: IF lexpr THEN vexpr . ELSE vexpr END

    ELSE  shift, and go to state 560
    '+'   shift, and go to state 269
    '-'   shift, and go to state 270


state 494

  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  243 cfactor: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 538
    '+'   shift, and go to state 274
    '-'   shift, and go to state 275


state 495

  134 vfactor: VABS '(' vexpr ')' .

    $default  reduce using rule 134 (vfactor)


state 496

   68 constraint: FORALL idxset DO constraint .

    $default  reduce using rule 68 (constraint)


state 497

   69 constraint: IF lexpr THEN constraint . ELSE constraint END

    ELSE  shift, and go to state 561


state 498

   60 constraint: vexpr . con_type vexpr con_attr_list
   61           | vexpr . con_type cexpr con_attr_list
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  136 vfactor: IF lexpr THEN vexpr . ELSE vexpr END

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    ELSE    shift, and go to state 560
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 289


state 499

   62 constraint: cexpr . con_type vexpr con_attr_list
   63           | cexpr . con_type cexpr con_attr_list
   64           | cexpr . con_type vexpr CMP_LE cexpr con_attr_list
   65           | cexpr . con_type cexpr CMP_LE cexpr con_attr_list
   66           | cexpr . con_type vexpr CMP_GE cexpr con_attr_list
   67           | cexpr . con_type cexpr CMP_GE cexpr con_attr_list
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  243 cfactor: IF lexpr THEN cexpr . ELSE cexpr END

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    ELSE    shift, and go to state 538
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 290


state 500

  112 vbool: '(' vbool ')' .

    $default  reduce using rule 112 (vbool)


state 501

  108 vbool: vbool . AND vbool
  108      | vbool AND vbool .
  109      | vbool . OR vbool
  110      | vbool . XOR vbool

    $default  reduce using rule 108 (vbool)


state 502

  108 vbool: vbool . AND vbool
  109      | vbool . OR vbool
  109      | vbool OR vbool .
  110      | vbool . XOR vbool

    AND  shift, and go to state 416

    $default  reduce using rule 109 (vbool)


state 503

  108 vbool: vbool . AND vbool
  109      | vbool . OR vbool
  110      | vbool . XOR vbool
  110      | vbool XOR vbool .

    AND  shift, and go to state 416

    $default  reduce using rule 110 (vbool)


state 504

   70 constraint: VIF vbool THEN vexpr . con_type vexpr ELSE vexpr con_type vexpr END
   72           | VIF vbool THEN vexpr . con_type cexpr ELSE vexpr con_type vexpr END
   73           | VIF vbool THEN vexpr . con_type vexpr ELSE cexpr con_type vexpr END
   74           | VIF vbool THEN vexpr . con_type vexpr ELSE vexpr con_type cexpr END
   78           | VIF vbool THEN vexpr . con_type cexpr ELSE cexpr con_type vexpr END
   79           | VIF vbool THEN vexpr . con_type cexpr ELSE vexpr con_type cexpr END
   80           | VIF vbool THEN vexpr . con_type vexpr ELSE cexpr con_type cexpr END
   84           | VIF vbool THEN vexpr . con_type cexpr ELSE cexpr con_type cexpr END
   86           | VIF vbool THEN vexpr . con_type vexpr END
   88           | VIF vbool THEN vexpr . con_type cexpr END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 562


state 505

   71 constraint: VIF vbool THEN cexpr . con_type vexpr ELSE vexpr con_type vexpr END
   75           | VIF vbool THEN cexpr . con_type cexpr ELSE vexpr con_type vexpr END
   76           | VIF vbool THEN cexpr . con_type vexpr ELSE cexpr con_type vexpr END
   77           | VIF vbool THEN cexpr . con_type vexpr ELSE vexpr con_type cexpr END
   81           | VIF vbool THEN cexpr . con_type cexpr ELSE cexpr con_type vexpr END
   82           | VIF vbool THEN cexpr . con_type cexpr ELSE vexpr con_type cexpr END
   83           | VIF vbool THEN cexpr . con_type vexpr ELSE cexpr con_type cexpr END
   85           | VIF vbool THEN cexpr . con_type cexpr ELSE cexpr con_type cexpr END
   87           | VIF vbool THEN cexpr . con_type vexpr END
   89           | VIF vbool THEN cexpr . con_type cexpr END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 563


state 506

   96 vbool: vexpr CMP_LE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 96 (vbool)


state 507

   98 vbool: vexpr CMP_LE cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 98 (vbool)


state 508

   99 vbool: vexpr CMP_GE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 99 (vbool)


state 509

  101 vbool: vexpr CMP_GE cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 101 (vbool)


state 510

   93 vbool: vexpr CMP_EQ vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 93 (vbool)


state 511

   95 vbool: vexpr CMP_EQ cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 95 (vbool)


state 512

  102 vbool: vexpr CMP_LT vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 102 (vbool)


state 513

  104 vbool: vexpr CMP_LT cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 104 (vbool)


state 514

  105 vbool: vexpr CMP_GT vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 105 (vbool)


state 515

  107 vbool: vexpr CMP_GT cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 107 (vbool)


state 516

   90 vbool: vexpr CMP_NE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 90 (vbool)


state 517

   92 vbool: vexpr CMP_NE cexpr .
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 274
    '-'  shift, and go to state 275

    $default  reduce using rule 92 (vbool)


state 518

   97 vbool: cexpr CMP_LE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 97 (vbool)


state 519

  100 vbool: cexpr CMP_GE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 100 (vbool)


state 520

   94 vbool: cexpr CMP_EQ vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 94 (vbool)


state 521

  103 vbool: cexpr CMP_LT vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 103 (vbool)


state 522

  106 vbool: cexpr CMP_GT vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 106 (vbool)


state 523

   91 vbool: cexpr CMP_NE vexpr .
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 91 (vbool)


state 524

   60 constraint: vexpr con_type vexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 60 (constraint)


state 525

   61 constraint: vexpr con_type cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 61 (constraint)


state 526

   64 constraint: cexpr con_type vexpr CMP_LE . cexpr con_attr_list

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 565
    cproduct  go to state 92
    cfactor   go to state 93


state 527

   66 constraint: cexpr con_type vexpr CMP_GE . cexpr con_attr_list

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 566
    cproduct  go to state 92
    cfactor   go to state 93


state 528

   62 constraint: cexpr con_type vexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 62 (constraint)


state 529

   65 constraint: cexpr con_type cexpr CMP_LE . cexpr con_attr_list

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 567
    cproduct  go to state 92
    cfactor   go to state 93


state 530

   67 constraint: cexpr con_type cexpr CMP_GE . cexpr con_attr_list

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 568
    cproduct  go to state 92
    cfactor   go to state 93


state 531

   63 constraint: cexpr con_type cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 63 (constraint)


state 532

  140 soset: FORALL idxset DO soset .

    $default  reduce using rule 140 (soset)


state 533

  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  139 soset: sos_type priority DO vexpr .

    '+'  shift, and go to state 269
    '-'  shift, and go to state 270

    $default  reduce using rule 139 (soset)


state 534

   20 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr . ';'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    ';'  shift, and go to state 569


state 535

   21 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr . ';'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    ';'  shift, and go to state 570


state 536

   22 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr . ';'
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202
    ';'      shift, and go to state 571


state 537

  179 sexpr: IF lexpr THEN sexpr ELSE . sexpr END

    EMPTY_SET  shift, and go to state 55
    IF         shift, and go to state 101
    INTER      shift, and go to state 61
    UNION      shift, and go to state 62
    PROJ       shift, and go to state 63
    INDEXSET   shift, and go to state 75
    SETSYM     shift, and go to state 78
    SETDEF     shift, and go to state 81
    '('        shift, and go to state 102
    '{'        shift, and go to state 88

    sexpr  go to state 572


state 538

  243 cfactor: IF lexpr THEN cexpr ELSE . cexpr END

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 573
    cproduct  go to state 92
    cfactor   go to state 93


state 539

  177 sexpr: PROJ '(' sexpr ',' tuple . ')'

    ')'  shift, and go to state 574


state 540

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  242 cfactor: RANDOM '(' cexpr ',' cexpr . ')'

    ')'  shift, and go to state 575
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 541

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  249 cfactor: ORD '(' sexpr ',' cexpr . ',' cexpr ')'

    ','  shift, and go to state 576
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 542

  176 sexpr: '{' idxset DO tuple '}' .

    $default  reduce using rule 176 (sexpr)


state 543

  175 sexpr: '{' idxset DO cexpr '}' .

    $default  reduce using rule 175 (sexpr)


state 544

  157 sexpr: '{' cexpr TO cexpr BY . cexpr '}'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 577
    cproduct  go to state 92
    cfactor   go to state 93


state 545

  158 sexpr: '{' cexpr TO cexpr '}' .

    $default  reduce using rule 158 (sexpr)


state 546

  159 sexpr: '{' cexpr UNTIL cexpr BY . cexpr '}'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 578
    cproduct  go to state 92
    cfactor   go to state 93


state 547

  160 sexpr: '{' cexpr UNTIL cexpr '}' .

    $default  reduce using rule 160 (sexpr)


state 548

   17 set_entry_list: SUBSETS '(' sexpr . ',' cexpr ')'
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ','      shift, and go to state 579
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 549

   18 set_entry_list: POWERSET '(' sexpr . ')'
  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr

    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    ')'      shift, and go to state 580
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 550

   16 set_entry_list: set_entry_list ',' set_entry .

    $default  reduce using rule 16 (set_entry_list)


state 551

   13 decl_set: DECLSET NAME '[' idxset ']' ASGN set_entry_list ';' .

    $default  reduce using rule 13 (decl_set)


state 552

   12 decl_set: DECLSET NAME '[' idxset ']' ASGN sexpr ';' .

    $default  reduce using rule 12 (decl_set)


state 553

   56 matrix_body: matrix_body matrix_head cexpr_list WITH .

    $default  reduce using rule 56 (matrix_body)


state 554

   31 par_default: DEFAULT . cexpr

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 581
    cproduct  go to state 92
    cfactor   go to state 93


state 555

   25 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default . ';'

    ';'  shift, and go to state 582


state 556

   26 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr par_default . ';'

    ';'  shift, and go to state 583


state 557

   33 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority startval . ';'

    ';'  shift, and go to state 584


state 558

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper . priority startval ';'

    PRIORITY  shift, and go to state 122

    $default  reduce using rule 45 (priority)

    priority  go to state 585


state 559

   34 decl_var: DECLVAR NAME var_type lower upper priority startval ';' .

    $default  reduce using rule 34 (decl_var)


state 560

  136 vfactor: IF lexpr THEN vexpr ELSE . vexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 586
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 137
    cproduct  go to state 138
    cfactor   go to state 93


state 561

   69 constraint: IF lexpr THEN constraint ELSE . constraint END

    FORALL   shift, and go to state 140
    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 141
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VIF      shift, and go to state 142
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    constraint  go to state 587
    vexpr       go to state 144
    vproduct    go to state 135
    vfactor     go to state 136
    cexpr       go to state 145
    cproduct    go to state 138
    cfactor     go to state 93


state 562

   70 constraint: VIF vbool THEN vexpr con_type . vexpr ELSE vexpr con_type vexpr END
   72           | VIF vbool THEN vexpr con_type . cexpr ELSE vexpr con_type vexpr END
   73           | VIF vbool THEN vexpr con_type . vexpr ELSE cexpr con_type vexpr END
   74           | VIF vbool THEN vexpr con_type . vexpr ELSE vexpr con_type cexpr END
   78           | VIF vbool THEN vexpr con_type . cexpr ELSE cexpr con_type vexpr END
   79           | VIF vbool THEN vexpr con_type . cexpr ELSE vexpr con_type cexpr END
   80           | VIF vbool THEN vexpr con_type . vexpr ELSE cexpr con_type cexpr END
   84           | VIF vbool THEN vexpr con_type . cexpr ELSE cexpr con_type cexpr END
   86           | VIF vbool THEN vexpr con_type . vexpr END
   88           | VIF vbool THEN vexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 588
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 589
    cproduct  go to state 138
    cfactor   go to state 93


state 563

   71 constraint: VIF vbool THEN cexpr con_type . vexpr ELSE vexpr con_type vexpr END
   75           | VIF vbool THEN cexpr con_type . cexpr ELSE vexpr con_type vexpr END
   76           | VIF vbool THEN cexpr con_type . vexpr ELSE cexpr con_type vexpr END
   77           | VIF vbool THEN cexpr con_type . vexpr ELSE vexpr con_type cexpr END
   81           | VIF vbool THEN cexpr con_type . cexpr ELSE cexpr con_type vexpr END
   82           | VIF vbool THEN cexpr con_type . cexpr ELSE vexpr con_type cexpr END
   83           | VIF vbool THEN cexpr con_type . vexpr ELSE cexpr con_type cexpr END
   85           | VIF vbool THEN cexpr con_type . cexpr ELSE cexpr con_type cexpr END
   87           | VIF vbool THEN cexpr con_type . vexpr END
   89           | VIF vbool THEN cexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 590
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 591
    cproduct  go to state 138
    cfactor   go to state 93


state 564

  114 con_attr_list: con_attr_list ',' . con_attr

    SCALE     shift, and go to state 592
    SEPARATE  shift, and go to state 593

    con_attr  go to state 594


state 565

   64 constraint: cexpr con_type vexpr CMP_LE cexpr . con_attr_list
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 595


state 566

   66 constraint: cexpr con_type vexpr CMP_GE cexpr . con_attr_list
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 596


state 567

   65 constraint: cexpr con_type cexpr CMP_LE cexpr . con_attr_list
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 597


state 568

   67 constraint: cexpr con_type cexpr CMP_GE cexpr . con_attr_list
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 113 (con_attr_list)

    con_attr_list  go to state 598


state 569

   20 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr ';' .

    $default  reduce using rule 20 (def_numb)


state 570

   21 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr ';' .

    $default  reduce using rule 21 (def_strg)


state 571

   22 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr ';' .

    $default  reduce using rule 22 (def_set)


state 572

  162 sexpr: sexpr . UNION sexpr
  163      | sexpr . '+' sexpr
  164      | sexpr . SYMDIFF sexpr
  165      | sexpr . WITHOUT sexpr
  166      | sexpr . '-' sexpr
  167      | sexpr . CROSS sexpr
  168      | sexpr . '*' sexpr
  169      | sexpr . INTER sexpr
  179      | IF lexpr THEN sexpr ELSE sexpr . END

    END      shift, and go to state 599
    INTER    shift, and go to state 195
    UNION    shift, and go to state 196
    CROSS    shift, and go to state 197
    SYMDIFF  shift, and go to state 198
    WITHOUT  shift, and go to state 199
    '+'      shift, and go to state 200
    '-'      shift, and go to state 201
    '*'      shift, and go to state 202


state 573

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  243 cfactor: IF lexpr THEN cexpr ELSE cexpr . END

    END  shift, and go to state 600
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 574

  177 sexpr: PROJ '(' sexpr ',' tuple ')' .

    $default  reduce using rule 177 (sexpr)


state 575

  242 cfactor: RANDOM '(' cexpr ',' cexpr ')' .

    $default  reduce using rule 242 (cfactor)


state 576

  249 cfactor: ORD '(' sexpr ',' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 601
    cproduct  go to state 92
    cfactor   go to state 93


state 577

  157 sexpr: '{' cexpr TO cexpr BY cexpr . '}'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    '}'  shift, and go to state 602


state 578

  159 sexpr: '{' cexpr UNTIL cexpr BY cexpr . '}'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204
    '}'  shift, and go to state 603


state 579

   17 set_entry_list: SUBSETS '(' sexpr ',' . cexpr ')'

    SUM      shift, and go to state 57
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 111
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 113
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87

    cexpr     go to state 604
    cproduct  go to state 92
    cfactor   go to state 93


state 580

   18 set_entry_list: POWERSET '(' sexpr ')' .

    $default  reduce using rule 18 (set_entry_list)


state 581

   31 par_default: DEFAULT cexpr .
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    '+'  shift, and go to state 203
    '-'  shift, and go to state 204

    $default  reduce using rule 31 (par_default)


state 582

   25 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';' .

    $default  reduce using rule 25 (decl_par)


state 583

   26 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr par_default ';' .

    $default  reduce using rule 26 (decl_par)


state 584

   33 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority startval ';' .

    $default  reduce using rule 33 (decl_var)


state 585

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper priority . startval ';'

    STARTVAL  shift, and go to state 254

    $default  reduce using rule 47 (startval)

    startval  go to state 605


state 586

  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct
  136 vfactor: IF lexpr THEN vexpr ELSE vexpr . END

    END  shift, and go to state 606
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 587

   69 constraint: IF lexpr THEN constraint ELSE constraint . END

    END  shift, and go to state 607


state 588

   70 constraint: VIF vbool THEN vexpr con_type vexpr . ELSE vexpr con_type vexpr END
   73           | VIF vbool THEN vexpr con_type vexpr . ELSE cexpr con_type vexpr END
   74           | VIF vbool THEN vexpr con_type vexpr . ELSE vexpr con_type cexpr END
   80           | VIF vbool THEN vexpr con_type vexpr . ELSE cexpr con_type cexpr END
   86           | VIF vbool THEN vexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    ELSE  shift, and go to state 608
    END   shift, and go to state 609
    '+'   shift, and go to state 269
    '-'   shift, and go to state 270


state 589

   72 constraint: VIF vbool THEN vexpr con_type cexpr . ELSE vexpr con_type vexpr END
   78           | VIF vbool THEN vexpr con_type cexpr . ELSE cexpr con_type vexpr END
   79           | VIF vbool THEN vexpr con_type cexpr . ELSE vexpr con_type cexpr END
   84           | VIF vbool THEN vexpr con_type cexpr . ELSE cexpr con_type cexpr END
   88           | VIF vbool THEN vexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    ELSE  shift, and go to state 610
    END   shift, and go to state 611
    '+'   shift, and go to state 274
    '-'   shift, and go to state 275


state 590

   71 constraint: VIF vbool THEN cexpr con_type vexpr . ELSE vexpr con_type vexpr END
   76           | VIF vbool THEN cexpr con_type vexpr . ELSE cexpr con_type vexpr END
   77           | VIF vbool THEN cexpr con_type vexpr . ELSE vexpr con_type cexpr END
   83           | VIF vbool THEN cexpr con_type vexpr . ELSE cexpr con_type cexpr END
   87           | VIF vbool THEN cexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    ELSE  shift, and go to state 612
    END   shift, and go to state 613
    '+'   shift, and go to state 269
    '-'   shift, and go to state 270


state 591

   75 constraint: VIF vbool THEN cexpr con_type cexpr . ELSE vexpr con_type vexpr END
   81           | VIF vbool THEN cexpr con_type cexpr . ELSE cexpr con_type vexpr END
   82           | VIF vbool THEN cexpr con_type cexpr . ELSE vexpr con_type cexpr END
   85           | VIF vbool THEN cexpr con_type cexpr . ELSE cexpr con_type cexpr END
   89           | VIF vbool THEN cexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    ELSE  shift, and go to state 614
    END   shift, and go to state 615
    '+'   shift, and go to state 274
    '-'   shift, and go to state 275


state 592

  115 con_attr: SCALE .

    $default  reduce using rule 115 (con_attr)


state 593

  116 con_attr: SEPARATE .

    $default  reduce using rule 116 (con_attr)


state 594

  114 con_attr_list: con_attr_list ',' con_attr .

    $default  reduce using rule 114 (con_attr_list)


state 595

   64 constraint: cexpr con_type vexpr CMP_LE cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 64 (constraint)


state 596

   66 constraint: cexpr con_type vexpr CMP_GE cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 66 (constraint)


state 597

   65 constraint: cexpr con_type cexpr CMP_LE cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 65 (constraint)


state 598

   67 constraint: cexpr con_type cexpr CMP_GE cexpr con_attr_list .
  114 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 564

    $default  reduce using rule 67 (constraint)


state 599

  179 sexpr: IF lexpr THEN sexpr ELSE sexpr END .

    $default  reduce using rule 179 (sexpr)


state 600

  243 cfactor: IF lexpr THEN cexpr ELSE cexpr END .

    $default  reduce using rule 243 (cfactor)


state 601

  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct
  249 cfactor: ORD '(' sexpr ',' cexpr ',' cexpr . ')'

    ')'  shift, and go to state 616
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 602

  157 sexpr: '{' cexpr TO cexpr BY cexpr '}' .

    $default  reduce using rule 157 (sexpr)


state 603

  159 sexpr: '{' cexpr UNTIL cexpr BY cexpr '}' .

    $default  reduce using rule 159 (sexpr)


state 604

   17 set_entry_list: SUBSETS '(' sexpr ',' cexpr . ')'
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    ')'  shift, and go to state 617
    '+'  shift, and go to state 203
    '-'  shift, and go to state 204


state 605

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper priority startval . ';'

    ';'  shift, and go to state 618


state 606

  136 vfactor: IF lexpr THEN vexpr ELSE vexpr END .

    $default  reduce using rule 136 (vfactor)


state 607

   69 constraint: IF lexpr THEN constraint ELSE constraint END .

    $default  reduce using rule 69 (constraint)


state 608

   70 constraint: VIF vbool THEN vexpr con_type vexpr ELSE . vexpr con_type vexpr END
   73           | VIF vbool THEN vexpr con_type vexpr ELSE . cexpr con_type vexpr END
   74           | VIF vbool THEN vexpr con_type vexpr ELSE . vexpr con_type cexpr END
   80           | VIF vbool THEN vexpr con_type vexpr ELSE . cexpr con_type cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 619
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 620
    cproduct  go to state 138
    cfactor   go to state 93


state 609

   86 constraint: VIF vbool THEN vexpr con_type vexpr END .

    $default  reduce using rule 86 (constraint)


state 610

   72 constraint: VIF vbool THEN vexpr con_type cexpr ELSE . vexpr con_type vexpr END
   78           | VIF vbool THEN vexpr con_type cexpr ELSE . cexpr con_type vexpr END
   79           | VIF vbool THEN vexpr con_type cexpr ELSE . vexpr con_type cexpr END
   84           | VIF vbool THEN vexpr con_type cexpr ELSE . cexpr con_type cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 621
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 622
    cproduct  go to state 138
    cfactor   go to state 93


state 611

   88 constraint: VIF vbool THEN vexpr con_type cexpr END .

    $default  reduce using rule 88 (constraint)


state 612

   71 constraint: VIF vbool THEN cexpr con_type vexpr ELSE . vexpr con_type vexpr END
   76           | VIF vbool THEN cexpr con_type vexpr ELSE . cexpr con_type vexpr END
   77           | VIF vbool THEN cexpr con_type vexpr ELSE . vexpr con_type cexpr END
   83           | VIF vbool THEN cexpr con_type vexpr ELSE . cexpr con_type cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 623
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 624
    cproduct  go to state 138
    cfactor   go to state 93


state 613

   87 constraint: VIF vbool THEN cexpr con_type vexpr END .

    $default  reduce using rule 87 (constraint)


state 614

   75 constraint: VIF vbool THEN cexpr con_type cexpr ELSE . vexpr con_type vexpr END
   81           | VIF vbool THEN cexpr con_type cexpr ELSE . cexpr con_type vexpr END
   82           | VIF vbool THEN cexpr con_type cexpr ELSE . vexpr con_type cexpr END
   85           | VIF vbool THEN cexpr con_type cexpr ELSE . cexpr con_type cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 625
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 626
    cproduct  go to state 138
    cfactor   go to state 93


state 615

   89 constraint: VIF vbool THEN cexpr con_type cexpr END .

    $default  reduce using rule 89 (constraint)


state 616

  249 cfactor: ORD '(' sexpr ',' cexpr ',' cexpr ')' .

    $default  reduce using rule 249 (cfactor)


state 617

   17 set_entry_list: SUBSETS '(' sexpr ',' cexpr ')' .

    $default  reduce using rule 17 (set_entry_list)


state 618

   32 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper priority startval ';' .

    $default  reduce using rule 32 (decl_var)


state 619

   70 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr . con_type vexpr END
   74           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr . con_type cexpr END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 627


state 620

   73 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr . con_type vexpr END
   80           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr . con_type cexpr END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 628


state 621

   72 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr . con_type vexpr END
   79           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr . con_type cexpr END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 629


state 622

   78 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr . con_type vexpr END
   84           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr . con_type cexpr END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 630


state 623

   71 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr . con_type vexpr END
   77           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr . con_type cexpr END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 631


state 624

   76 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr . con_type vexpr END
   83           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr . con_type cexpr END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 632


state 625

   75 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr . con_type vexpr END
   82           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr . con_type cexpr END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 269
    '-'     shift, and go to state 270

    con_type  go to state 633


state 626

   81 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr . con_type vexpr END
   85           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr . con_type cexpr END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 286
    CMP_GE  shift, and go to state 287
    CMP_EQ  shift, and go to state 288
    '+'     shift, and go to state 274
    '-'     shift, and go to state 275

    con_type  go to state 634


state 627

   70 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type . vexpr END
   74           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 635
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 636
    cproduct  go to state 138
    cfactor   go to state 93


state 628

   73 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type . vexpr END
   80           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 637
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 638
    cproduct  go to state 138
    cfactor   go to state 93


state 629

   72 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type . vexpr END
   79           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 639
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 640
    cproduct  go to state 138
    cfactor   go to state 93


state 630

   78 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type . vexpr END
   84           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 641
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 642
    cproduct  go to state 138
    cfactor   go to state 93


state 631

   71 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type . vexpr END
   77           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 643
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 644
    cproduct  go to state 138
    cfactor   go to state 93


state 632

   76 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type . vexpr END
   83           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 645
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 646
    cproduct  go to state 138
    cfactor   go to state 93


state 633

   75 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type . vexpr END
   82           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 647
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 648
    cproduct  go to state 138
    cfactor   go to state 93


state 634

   81 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type . vexpr END
   85           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type . cexpr END

    SUM      shift, and go to state 127
    MIN      shift, and go to state 58
    MAX      shift, and go to state 59
    IF       shift, and go to state 128
    CARD     shift, and go to state 64
    ABS      shift, and go to state 65
    SGN      shift, and go to state 66
    FLOOR    shift, and go to state 67
    CEIL     shift, and go to state 68
    LOG      shift, and go to state 69
    LN       shift, and go to state 70
    EXP      shift, and go to state 71
    SQRT     shift, and go to state 72
    RANDOM   shift, and go to state 73
    ORD      shift, and go to state 74
    VABS     shift, and go to state 129
    NUMBSYM  shift, and go to state 76
    STRGSYM  shift, and go to state 77
    VARSYM   shift, and go to state 130
    NUMBDEF  shift, and go to state 79
    STRGDEF  shift, and go to state 80
    NAME     shift, and go to state 82
    STRG     shift, and go to state 83
    NUMB     shift, and go to state 84
    '('      shift, and go to state 131
    '+'      shift, and go to state 132
    '-'      shift, and go to state 133

    vexpr     go to state 649
    vproduct  go to state 135
    vfactor   go to state 136
    cexpr     go to state 650
    cproduct  go to state 138
    cfactor   go to state 93


state 635

   70 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 651
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 636

   74 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 652
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 637

   73 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 653
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 638

   80 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 654
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 639

   72 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 655
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 640

   79 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 656
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 641

   78 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 657
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 642

   84 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 658
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 643

   71 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 659
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 644

   77 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 660
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 645

   76 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 661
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 646

   83 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 662
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 647

   75 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 663
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 648

   82 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 664
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 649

   81 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr . END
  121 vexpr: vexpr . '+' vproduct
  122      | vexpr . '-' vproduct
  123      | vexpr . '+' cproduct
  124      | vexpr . '-' cproduct

    END  shift, and go to state 665
    '+'  shift, and go to state 269
    '-'  shift, and go to state 270


state 650

   85 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr . END
  125 vexpr: cexpr . '+' vproduct
  126      | cexpr . '-' vproduct
  214 cexpr: cexpr . '+' cproduct
  215      | cexpr . '-' cproduct

    END  shift, and go to state 666
    '+'  shift, and go to state 274
    '-'  shift, and go to state 275


state 651

   70 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END .

    $default  reduce using rule 70 (constraint)


state 652

   74 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END .

    $default  reduce using rule 74 (constraint)


state 653

   73 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END .

    $default  reduce using rule 73 (constraint)


state 654

   80 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END .

    $default  reduce using rule 80 (constraint)


state 655

   72 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END .

    $default  reduce using rule 72 (constraint)


state 656

   79 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END .

    $default  reduce using rule 79 (constraint)


state 657

   78 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END .

    $default  reduce using rule 78 (constraint)


state 658

   84 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END .

    $default  reduce using rule 84 (constraint)


state 659

   71 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END .

    $default  reduce using rule 71 (constraint)


state 660

   77 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END .

    $default  reduce using rule 77 (constraint)


state 661

   76 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END .

    $default  reduce using rule 76 (constraint)


state 662

   83 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END .

    $default  reduce using rule 83 (constraint)


state 663

   75 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END .

    $default  reduce using rule 75 (constraint)


state 664

   82 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END .

    $default  reduce using rule 82 (constraint)


state 665

   81 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END .

    $default  reduce using rule 81 (constraint)


state 666

   85 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END .

    $default  reduce using rule 85 (constraint)
